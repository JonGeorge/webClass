Lesson:  Parse the XML in a Test Class
--------------------------------------

Assumptions:
 A) You want to test your XML parsing in a test class
 
 
Create a Simple Java Project to Parse XML into a Java Object
------------------------------------------------------------
 1. Create your "parseXml2" Maven project in Intellij
    a. Startup Intellij
       NOTE:  IF an existing Intellij project appear, then pull File / Close Project
       
    b. Press "Create New Project"
       1) In the "New Project" window, 
            a) Select Maven [on the left]
            b) Next to Project SDK:  Select your Java JDK
               NOTE:  If you do not see your java JDK, then
                      Press New
                      -- Browse to your Java JDK:  C:\Program Files\Java\jdk1.7.0_60
                      -- Press OK
               
            c) Check "Create from archetype"
            d) Select maven-archetype-quickstart
               Press Next
               
       2) In the next screen
          GroupId:     whatever
          ArtifactId:  parseXml2
          Version:     1.0-SNAPSHOT
          Press Next
          
       3) In the next screen,
          Maven home directory:  C:/tools/apache-maven-3.2.3
          Check the checkbox to "Override"
          User settings file:   C:\tools\apache-maven-3.2.3\conf\settings.xml
          Press Next                       
       
       4) Project Name:      parseXml2
          Project Location:  C:\tools\intellij\workspace\parseXml2
          Press Finish
          
       5) If you get prompted that "C:\tools\intellij\workspace\parseXml2" does not exist
          It will be created by Intellij
          Press OK 
     
       6) If you get prompted 
          "New projects can either be opened in a new window or replace the project"
          Press "This Window"
          
       7) If you are prompted 
          Maven projects need to be imported
          Press "Enable Auto-Import"
          
          Now, maven has created a simple Java JAR project
          
          

 2. Configure Intellij preferences for this project
    a. Turn off spell-checking
       1) Pull File / Settings
       2) Search for spelling
          a) Single-click on Inspections
          b) next to Typo -- Uncheck the checkbox
          c) Press Apply
          d) press OK
          
          

 3. Setup the Maven directories for your Intellij project

    Add these directories
       src/test/resources/             # Holds the logback.xml used by unit test code
       src/main/resources/             # Holds the logback.xml used by main program


    a. Right-click on src/test   -> New -> Directory:    resources
    b. Right-click on src/main   -> New -> Directory:    resources


    Now, you should have this directory structure
      src/main/java/ 
      src/main/resources/               # Holds logback.xml used by java main program     
      src/test/java
      src/test/resources/               # Holds logback.xml used by unit test code
          
          

 4. Add dependencies for your project
    Update your dependencies to use these:
    
    <dependency>
       <groupId>org.slf4j</groupId>
       <artifactId>slf4j-api</artifactId>
       <version>1.7.5</version>
    </dependency>

    <dependency>
       <groupId>ch.qos.logback</groupId>
       <artifactId>logback-classic</artifactId>
       <version>1.0.13</version>
    </dependency>

    <dependency>
       <groupId>javax.xml.bind</groupId>
       <artifactId>jaxb-api</artifactId>
       <version>2.2.12</version>
    </dependency>

    <dependency>
       <groupId>commons-io</groupId>
       <artifactId>commons-io</artifactId>
       <version>2.4</version>
       <scope>test</scope>
    </dependency>

    <dependency>
       <groupId>junit</groupId>
       <artifactId>junit</artifactId>
       <version>4.10</version>
       <scope>test</scope>
    </dependency>
          
          

 5. Create the test logback.xml filexml
    a. Browse to src/test/resources
    b. Right-click on classes -> New -> File
       filename:  logback.xml

    c. Copy this contents to your logback.xml file
       WARNING:  You *CANNOT* have leading spaces before <?xml version="1.0"... ?>
    
        <?xml version="1.0" encoding="windows-1252" ?>
        <!DOCTYPE project>
        
        <configuration debug="true">
            <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
                <encoder>
                    <pattern>Test %d{MM/dd/yyyy HH:mm:ss} %c %m%n</pattern>
                </encoder>
            </appender>
        
        
            <logger name="whatever" level="DEBUG" additivity="false">
                <appender-ref ref="CONSOLE"/>
            </logger>
        
        
            <logger name="javax.xml.bind" level="DEBUG" additivity="false">
                <appender-ref ref="CONSOLE"/>
            </logger>
        
            <root level="DEBUG">
                <appender-ref ref="CONSOLE"/>
            </root>
        
        </configuration>
    
    
    
 6. Create this test file:  sample1.xml
    a. Right-click on /src/test/resources -> new file
       filename:  sample1.xml
    
    b. Copy this to your sample1.xml
       WARNING:  You *CANNOT* have leading spaces before <?xml version="1.0"... ?>
    
        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
        <Employee id="1">
            <firstName>John</firstName>
            <middleName>Robert</middleName>
            <lastName>Doe</lastName>
        </Employee>


 
 7. Create an Employee model class
    a. Right-click on src / main / java / whatever -> new Java Class
       Class Name:  Employee
       
    b. Copy this to your Employee class
    
            package whatever;
            
            import javax.xml.bind.annotation.*;
            
            /**
             * Created by adam on 8/1/2015.
             */
            @XmlRootElement(name="Employee")
            @XmlAccessorType(XmlAccessType.FIELD)
            public class Employee
            {
                @XmlAttribute
                private int id;
            
                @XmlElement
                private String firstName;
            
                @XmlElement
                private String middleName;
            
                @XmlElement
                private String lastName;
            
            
                public int getId()
                {
                    return id;
                }
                public void setId(int id)
                {
                    this.id = id;
                }
            
                public String getLastName()
                {
                    return lastName;
                }
                public void setLastName(String lastName)
                {
                    this.lastName = lastName;
                }
            
                public String getMiddleName()
                {
                    return middleName;
                }
                public void setMiddleName(String middleName)
                {
                    this.middleName = middleName;
                }
            
                public String getFirstName()
                {
                    return firstName;
                }
                public void setFirstName(String firstName)
                {
                    this.firstName = firstName;
                }
            
                @Override
                public boolean equals(Object o)
                {
                    if (this == o) return true;
                    if (o == null || getClass() != o.getClass()) return false;
            
                    Employee employee = (Employee) o;
            
                    if (id != employee.id) return false;
                    if (firstName != null ? !firstName.equals(employee.firstName) :
                            employee.firstName != null) return false;
                    if (lastName != null ? !lastName.equals(employee.lastName) :
                            employee.lastName != null) return false;
                    if (middleName != null ? !middleName.equals(employee.middleName) :
                            employee.middleName != null) return false;
            
                    return true;
                }
            
                @Override
                public int hashCode()
                {
                    int result = id;
                    result = 31 * result + (firstName != null ? firstName.hashCode() : 0);
                    result = 31 * result + (middleName != null ? middleName.hashCode() : 0);
                    result = 31 * result + (lastName != null ? lastName.hashCode() : 0);
                    return result;
                }
            
                @Override
                public String toString()
                {
                    return "Employee{" +
                            "id=" + id +
                            ", firstName='" + firstName + '\'' +
                            ", middleName='" + middleName + '\'' +
                            ", lastName='" + lastName + '\'' +
                            '}';
                }
            }
            

    
    
 8. Create a test class
    a. Right-click on /src/test/java/whatever -> new Java Class
       Class Name:  XmlParsingTest
       
    b. Copy this to your XmlParsingTest class
    
            package whatever;
            
            import org.apache.commons.io.IOUtils;
            import org.junit.Assert;
            import org.junit.Test;
            import org.slf4j.Logger;
            import org.slf4j.LoggerFactory;
            
            import javax.xml.bind.JAXBContext;
            import java.io.InputStream;
            import java.io.StringReader;
            
            /**
             * Created by adam on 1/22/2016.
             */
            public class XmlParsingTest
            {
                private static final Logger logger = LoggerFactory.getLogger(XmlParsingTest.class);
            
                @Test
                public void testXmlParsing() throws Exception
                {
                    logger.debug("testXmlParsing() started");
            
                    JAXBContext jaxbContext = JAXBContext.newInstance( Employee.class);
            
                    InputStream is = XmlParsingTest.class.getResourceAsStream("/sample1.xml");
            
                    // Read the file into a string
                    String sXml = IOUtils.toString(is);
            
                    StringReader stringReader = new StringReader(sXml);
            
                    // Convert XML into java object
                    Employee employee = (Employee) jaxbContext.createUnmarshaller().unmarshal(stringReader);
            
                    Assert.assertNotNull(employee);
                    Assert.assertTrue(employee.getFirstName().equalsIgnoreCase("John"));
            
                    logger.debug("testXmlParsing() finished");
               }
            }


 9. Run your test class
    a. In Intellij, set a breakpoint at the beginning of your testXmlParsing() method
    b. Right-click on the testXmlParsing() -> Debug "testXmlParsing()"
 
       As you step through the code, you should see this in your console:
       
        Connected to the target VM, address: '127.0.0.1:49275', transport: 'socket'
        16:06:17,394 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
        16:06:17,394 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
        16:06:17,394 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/C:/tools/intellij/workspace/parseXml/target/test-classes/logback.xml]
        16:06:17,395 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs multiple times on the classpath.
        16:06:17,395 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/C:/tools/intellij/workspace/parseXml/target/classes/logback.xml]
        16:06:17,395 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/C:/tools/intellij/workspace/parseXml/target/test-classes/logback.xml]
        16:06:17,471 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
        16:06:17,479 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
        16:06:17,482 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [CONSOLE]
        16:06:17,499 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
        16:06:17,548 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [whatever] to DEBUG
        16:06:17,548 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [whatever] to false
        16:06:17,548 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[whatever]
        16:06:17,549 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [javax.xml.bind] to DEBUG
        16:06:17,549 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [javax.xml.bind] to false
        16:06:17,549 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[javax.xml.bind]
        16:06:17,549 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to DEBUG
        16:06:17,549 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[ROOT]
        16:06:17,549 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
        16:06:17,550 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@71ee2072 - Registering current configuration as safe fallback point
        Test 01/22/2016 16:06:18 whatever.XmlParsingTest testXmlParsing() started
        Test 01/22/2016 16:06:28 whatever.XmlParsingTest testXmlParsing() finished
        
        