Sample Bash Script that Runs *ONE* instance of a Perl Program
-------------------------------------------------------------

This would be handy if a perl program is being executed from a crontab job


#!/bin/bash
processName="myProcess"
processIdFilePath=/tmp/${processName}.pid

# If your perl program is talking with an Oracle database, you might need this line
LD_LIBRARY_PATH=/path/to/oracle-instant/client/instantclient_10:2:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH


if [ ! -f $processIdFilePath ]; then
   # I could not find the process id so run the program
   cd /path/to/my/program
   
   # Run the perl program in the background (sending stdout and stderr to the log file)
   perl ./myPerlProgram.pl >> myPerlProgram.log 2>&1 &
   
   # Get the process id of the running program
   processId=$!
   
   # Put the process id in a tmp file
   echo $processId > $processIdFilePath
   
   # Wait for this program to finish
   wait $processId
   
   # Remove the process id file
   rm -f $processIdFilePath
 fi
 
 
