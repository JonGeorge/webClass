How to Search and Replace on Multiple Files
-------------------------------------------
Problem:  You want to do a search replace on lots of files
Solution: Use find and sed



Example #1:  Convert tabs to 4 spaces on a single file
------------------------------------------------------
 1. Identify the files that have tabs
    unix> cd /path-to-where-files-are
    unix> grep -P "\t" -l *   # list files in the current dir that have tabs
    file1.txt

 2. Do a search & replace on that single file
    NOTE:  The -i means to edit in place (or replace the existing file)
           The -e means to apply this regular expression

    unix> sed -i -e 's/\t/    /g' restartOnCrash.sh



Example #2:  Convert tabs to 4 spaces on multiple files
-------------------------------------------------------
 1. Identify the files that have tabs in multiple directories
    unix> cd /path-to-where-files-are
    unix> find . -type f -exec grep -l -P "\t" {} \;

 2. Do a search & replace on all files from that point and below
    unix> find . -type f -exec sed -i -e 's/\t/    /g' {} \;



Example #3:  Convert tabs to 4 spaces in multiple files (but exclude .git directory)
------------------------------------------------------------------------------------
 1. Identify the files that have tabs (but exclude the .git directory)
    NOTE:  To tell find to skip the .git directory, start find with this
                 -name '.git' -prune -o

    unix> cd /path-to-where-files-are
    unix> find . -name '.git' -prune -o -type f -exec grep -l -P "\t" {} \; | sort


 2. Do a search & replace on all files (exluding the .git directory) from that point and below
    unix> find . -name '.git' -prune -o -type f -exec sed -i -e 's/\t/    /g' {} \;

