How to Setup a Groovy Script as a Java Class
--------------------------------------------


Procedure
---------
 1. Create a class in your .groovy script
 2. Pass-in the binding: binding
 
 
Sample Groovy Script
--------------------
import org.slf4j.LoggerFactory
import org.slf4j.Logger


class Main
{
    def scriptObject
    def binding

    private static final Logger logger = LoggerFactory.getLogger(Main.class)


    /**************************************************************************************
     * areBindingsValid()
     **************************************************************************************/
    public boolean areBindingsValid()
    {
        logger.info("areBindingsValid() started.")
        boolean bBindingsAreValid = false;

        if (binding == null)
        {
            logger.error("Critical Error in areBindingsValid():  The binding object is null.  This should never happen.")
        }
        else if (binding?.request == null)
        {
            logger.error("Critical Error in areBindingsValid():  The binding.request object is null.  This should never happen.")
        }
        else if (binding?.reqQuery == null)
        {
            logger.error("Critical Error in areBindingsValid():  The binding.reqQuery object is null.  This should never happen.")
        }
        else if (binding?.reqHeaderOrgName == null)
        {
            logger.error("Critical Error in areBindingsValid():  The binding.reqHeaderOrgName object is null.  This should never happen.")
        }
        else if (binding?.next == null)
        {
            logger.error("Critical Error in areBindingsValid():  The binding.next object is null.  This should never happen.")
        }
        else
        {
            bBindingsAreValid = true;
        }

        logger.info("areBindingsValid() returns {}", bBindingsAreValid);
        return bBindingsAreValid;
    }


    /**************************************************************************************
     * run()
     **************************************************************************************/
    public def run()
    {
        logger.info("run() started.");

        if (! areBindingsValid())
        {
            throw new RuntimeException("Critical Error in Groovy Script:  The bindings are invalid.");
        }

        String authQuery

        // Setup Sample Data
        def reqHeaderOrgName = binding.reqHeaderOrgName

        // Do something
        
        // Return a promise to the next call
        logger.info("Before call to binding.next.handle")
        return binding.next.handle(binding.context, binding.request)
    }

}


// Script starts here
//   1) Pass-in the implicit binding object  [which gives me access to the script variables]
//      So, binding.request in my Main class would references the request object in a simple groovy script
//   2) Instantiate the Main class
//   3) Call run() which returns a promise to another call
return new Main(scriptObject: this, binding: binding).run()
