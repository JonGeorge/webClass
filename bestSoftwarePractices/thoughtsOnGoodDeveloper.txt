Thoughts on What Makes for a Good Developer
-------------------------------------------
More "yes" answers, the better the developer

Overall, it's not the language, technology, client, or boss.  It's the *attitude*


Questions
---------
 1. Does the individual's code work?

 2. Is the individual's code finished on time?

 3. Does the individual say, "I screwed up."?

 4. Does the individual listen to others (even the junior developers and non-developers)

 5. Does the individual keep learning?

 6. Does the individual keep the team informed
    -- Especially if the individual is in trouble of being late
    -- Especially if there are surprises mid-sprint -- e.g., implementation is too slow, browser is locked down at client site preventing code from working

 7. Does the individual ask for help?

 8. Does the individual mentor/help others?

 9. Does the individual follow team processes?
    -- Enter ticket # with commit requests?
    -- Submit timesheets on time?
    -- Follow coding review standards on merge requests?

10. Does the individual know how to step through the code with a debugger?

11. Does the individual take advice to heart (especially during code reviews)

12. Does the individual verify code before submitting for a merge request?

13. Does the individual follow coding standards
    -- Are javadocs filled-in for methods?
    -- Are code files created in the appropriate place?

