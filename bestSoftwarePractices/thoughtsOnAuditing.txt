Thoughts on Auditing
--------------------
Gov't projects requires that database changes be audited over 5 years.

There are different implementation approaches
 1) Audit the big objects -- e.g., what changes were made to reports, what changes were made to this, that
    Whenever there is a change, add a record with
      id              holds a unique audit id
      object_type     holds 0 (for reports), 1 (for users), 2
      before_value
      after_value
      username        of person that changed
      revision_type   holds 0 (for create), 1 (for update), 2 (for delete)
      username        holds the name of the person that made the change
      timestamp       holds when the change was made

     - Suppose you edit a report and set 3 fields with info and clear 2 fields
       (what would the report hold?)



 2) Audit the table changes
    + Simpler to implement:  Create an AuditManager and use it
      For each table, create another table with the same columns and throw-in the transaction_Id, revision_type
        Transaction_id  is a unique number that identifies the transaction
        revision_type   holds 0 (for create), 1 (for update), 2 (for delete)
        username        holds the name of the person that made the change
        timestamp       holds when the change was made

    - Less useful overall.  It's hard to know what changes were made
    + Comprehensive:  Every database change is accounted for.


Because approach #2 is simpler, it is often used


The dirty secret of auditing is that it's rarely read by anyone (except in emergencies)
