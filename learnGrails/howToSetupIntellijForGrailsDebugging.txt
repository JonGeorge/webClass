How to Setup IntelliJ to Debug Grails 2.4.4 App
---------------------------------------------
IntelliJ allows you to debug Grails web applications without any special settings.


ASSUMPTIONS:
 1) You are running a 64-bit version of Windows  (Windows Vista, Windows 7, Windows 8 or later)
 2) You want to install the community edition of IntelliJ
 3) You have Java JDK 1.7.75 already installed
 4) You have Maven already installed
 

Procedures
----------
1. Install IntelliJ Community Edition 14.1.4
   a) Download IntelliJ Community Edition
      1. Go to http://www.jetbrains.com/idea/download/index.html
      2. Click the "Download Community" button 
      3. Save ideaIC-14.1.4.exe  c:\vault\
   
   b) Install IntelliJ
      1. Run this program:  c:\vault\ideaIC-14.1.4.exe

      2. In the "Welcome to Intellij IDEA" screen, press Next
      
      3. In the "Choose Install Location" screen,  
         Set the destination directory to be:
            c:\tools\intellij
            Press Next
            
      4. In the "Installation Options" screen
         Check "Create Desktop Shortcut"
         Press Next
         
         
      5. In the "Choose Start Menu Folder", screen
         go with the default name 
         Press Install
      
      6. In the "Completing Intellij IDEA community edition", screen
         Press FInish
   
         
2. Configure Intellij
 	a) Run IntelliJ  (there should be a shortcut on your desktop)
 	   Or click on C:\tools\intellij\bin\idea.exe
 	   
 	b) You may be asked if you wan to import your settings
 	   select "I do not have a previous version Of IntelliJ IDEA"
 	   Press OK
 	   
 	c) In the "Set UI THeme"
 	   select "IntelliJ" and press "Next: Default Plugins"
 	   
 	d) In the "Tune IDEA to your tasks"
 	   select "Next: Feature plugins"
 	   
 	e) In the "Download feature plugins"
 	   select "Start using Intellij IDEA"
 	   
    f) Create a workspace directory
       Create this directory:   c:\tools\intellij\workspace


3. Install Grails 2.4.5
   a) Download Grails
      1. Go to https://github.com/grails/grails-core/releases/download/v2.4.5/grails-2.4.5.zip
      2. Save grails-2.4.5.zip to your c:\vault directory
         
         
   b) Install Grails
      1. Right-click on c:\vault\grails-2.4.5  -> 7zip -> Extract Files....
      2. In the "Extract To" directory, type-in  c:\tools 
         Press OK
         
         Now, you have grails installed to here:
            c:\tools\grails-2.4.5
            
      3. Set your GRAILS_HOME environment variable to be c:\tools\grails-2.4.5
         a. Open the Environment Variables in Windows by pressing <Start><Run>environment
 
         b. Under "User variables for..." [on the top of this popup], 
	        click "New..."
	              Variable name:  GRAILS_HOME
                  Variable value: c:\tools\grails-2.4.5
		 
		    NOTE:  You have to open a *NEW* dos window to see environment variable changes
		    
		    
		
     4. Add the c:\tools\grails-2.4.5\bin directory to your path
 		 a. Open the Environment Variables in Windows by pressing <Start><Run>environment

		 b. Under "User variables for..." [on the top of this popup], 
			click "New..."  [if PATH already exists, then double-click on PATH and add a semicolon and append this to the end of the PATH]
		    	Variable name:  PATH
                Variable value: c:\tools\grails-2.4.5\bin
     	 
		    NOTE:  You have to open a *NEW* dos window to see environment variable changes
    
    	
    d. Verify Grails is instaled
	  1. Press <Start><Run>CMD
	     DOS> grails -version
	  
	     You should see the following:
         Grails version: 2.4.5
   
       	   
3. Create a Grails web 2 application with maven integration
   NOTE:  These procedures will *NOT* work with Grails 3

    a) Create the grails app
       Open a DOS window by pressing <Start><Run>CMD
       DOS> cd /d c:\tools\intellij\workspace
       DOS> grails create-app webapp2   --plain-output 
            NOTE:  Now, you should have a grails app created here:
                   c:\tools\intellij\workspace\webapp2
                   
    b) Create the pom.xml for your grails app
       DOS> cd webapp2
       DOS> grails create-pom com.resnick  --plain-output 
       
     
    c) Create an Intellij file   
       DOS> grails integrate-with --intellij    --plain-output 
       
 
    d) Create a simple Domain class
       DOS> grails create-domain-class Person   --plain-output 
    
    e) Create the domain class called Address
       DOS> grails create-domain-class Address  --plain-output 
    
    f) Create the PersonController class
       DOS> grails create-controller Person   --plain-output 
       
    g) Create the AddressController class
       DOS> grails create-controller Address  --plain-output
    
    h) Modify the code
       1) Edit grails-app/domain/webapp2/Person.groovy to be this:
       
           package webapp2
           
	       class Person {
	
				String firstName
				String lastName
				List<Address> addresses
				Date created
			
				static hasMany = [addresses:Address]
			
			    static constraints = {
			        firstName(nullable:false)
			        lastName(nullable:false)
			        created(nullable:false)
			    } 	
	        
			}

       
       2) Edit grails-app/domain/webapp2/Address.groovy to match the code below:
       
         package webapp2
		 class Address {
		
		    String address
		    String city
		    String state
		    String zipPostal
		    String country
		    Date created
		    
		    static belongsTo = Person
		
		    static constraints = {
		        address(nullable:false)
		        city(nullable:false)
		        state(nullable:false)
		        zipPostal(nullable:false)
		        country(nullable:false)
		        created(nullable:false)
		    }
		
		}
                
       
       3) Edit grails-app/controllers/webapp2/PersonController.groovy to match the code below
            package webapp2
			                       
			class PersonController {
			
			   def scaffold = true
			   
			}


		4) Edit grails-app/controllers/webapp2/AddressController.groovy to match the code below:
            package webapp2
            
			class AddressController {
			
			   def scaffold = true
			   
			}
                
    
    
 4. Run Application from the command-line
    DOS> cd /d c:\tools\intellij\workspace\webapp2
    DOS> grails run-app  --plain-output
     
	You should see this output:
	|Loading Grails 2.4.4
	|Configuring classpath
	.
	|Environment set to development
	.................................
	|Packaging Grails application
	...........
	|Compiling 4 source files
	.........................
	|Running Grails application
	|Server running. Browse to http://localhost:8080/webapp2
	
	
 5. View the webapp in your web browser:
    a) Open a web browser
    b) Go to http://localhost:8080/webapp2
    c) Click on "webapp2.PersonController"
         
         
 6. Stop the grails webapp by pressing Control-C in the DOS window
 
 
         
 7. Open the project with Intellij
       a) Find the webapp2.ipr file
          Browse to C:\tools\intellij\workspace\webapp2
          Double-click on webapp2.ipr
          -- Intellij should open this project
          
       b) If you get a warning that says
           "The project has an older format"
           Press the Convert button
  
       c) Wait for Intellij to finish indexing
       
       d) Right-click on the pom.xml -> Add as Maven Project
          Wait for Intellij to finish resolving the maven dependencies
      
       e) Pull Run / Edit Configuration
           1) In the Run/Debug Configurations window
              press the "+" symbol
           2) Select Remote
           3) Enter these values:
              Name:  remote-mywebapp2
              Transport:      Socket
              Debugger Mode:  Attach
              Host:           localhost
              Port:           5005
              
           4) Press Apply
           5) Press OK
                       

 8. Debug the Grails web app
     a) In Intellij, setup a breakpoint
     
	 b) Open a DOS window by pressing <Start><Run>CMD
	 c) In the DOS window type-in this:
	    DOS> cd /d c:\tools\intellij\workspace\webapp2
	    DOS> mvn grails:run-app -DforkDebug=true -Dfork=true 
	         or
	    DOS> grails -debug run-app  --plain-output
	    
	    
	 d) Back in Intellij, pull Run / Debug remote-webapp2
	 



How to solve warnings
---------------------
[WARNING] The POM for org.apache.maven.plugins:maven-clean-plugin:jar:2.4.0 is missing, no dependency information a
vailable
[WARNING] Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-clean-plugin:2.4.0: Plugin org.ap
ache.maven.plugins:maven-clean-plugin:2.4.0 or one of its dependencies could not be resolved: Failure to find org.a
pache.maven.plugins:maven-clean-plugin:jar:2.4.0 in https://repo.maven.apache.org/maven2 was cached in the local re
pository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced


Problem:  You are using the maven-clean-plugin version 2.4.0, but it is not found

PART 1:  Get the version of the maven-clean-plugin
  Solution:  Run this command to find the latest version
  DOS> cd /d c:\tools\intellij\workspace\webapp2
  DOS> mvn help:describe -DartifactId=maven-clean-plugin -DgroupId=org.apache.maven.plugins


  Name: Apache Maven Clean Plugin
  Description: The Maven Clean Plugin is a plugin that removes files generated at build-time in a project's directory.
  Group Id: org.apache.maven.plugins
  Artifact Id: maven-clean-plugin
  Version: 2.6.1
  Goal Prefix: clean


PART 2: Update the pom.xml by changing version 2.0 to version 2.6.1


PART 3: Update the plugin dependencies
  DOS> mvn dependency:resolve-plugins



---------------------------------
NOTE:  If you see this warning about the maven-surefire-plugin, then use these steps:

PART 1: Get the version of the maven-surefire-plugin
  DOS> cd /d c:\tools\intellij\workspace\webapp2
  DOS> mvn help:describe -DartifactId=maven-surefire-plugin -DgroupId=org.apache.maven.plugins

  Name: Maven Surefire Plugin
  Description: Surefire is a test framework project.
  Group Id: org.apache.maven.plugins
  Artifact Id: maven-surefire-plugin
  Version: 2.18.1
  Goal Prefix: surefire

PART 2: Update the pom.xml by setting the maven-surefire-plugin version to be 2.18.1


PART 3: Update the plugin dependencies
  DOS> mvn dependency:resolve-plugins

  
  