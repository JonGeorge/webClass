How to Add DataTables.net into a Grails Web App
-----------------------------------------------

There are 2 approaches:
 1) Manually add it using Resources PLugin
 2) Manually add it using the Asset Pipeline Plugin
 

Assumptions
 A) You have a Grails Web App already 
    [see howToSetupAndDebugGrails2.4WebAppWithIntellij.txt]
 B) You have Maven setup
 


      



       
 A P P R O A C H      # 2:  Add DataTables.net files manually and load w/Asset Pipeline Plugin
-----------------------------------------------------------------------------------------------
 1. Download DataTables.net
    a. Browse to https://www.datatables.net/download/download
    b. Save the zip file to your c:\vault
       -- You now have c:\vault\DataTables-1.10.9.zip
    c. Right-click on c:\vault\DataTables-1.10.9.zip -> 7zip -> Extract Here
       -- You now have these directories:
             C:\vault\DataTables-1.10.9\
             C:\vault\DataTables-1.10.9\media\js
             
             
       
 2. Manually add DataTables.net to your Grails Web App
    a. In Intellij, Right-click on /grails-app/assets/javascripts/ -> new -> directory
       Directory name:  dataTables.net
           
           
           
    b. Browse to the c:\vault\
       Right-click on jquery-1.11.3.min.js -> Copy
    
    c. In Intellij, Right-click on /grails-app/assets/javascripts/jquery-1.11.3/ -> Right-Click -> Paste
       Intellij will prompt you to copy files, press OK
       
       Now, you should have these directories
          /grails-app/assets/javascripts/jquery-1.11.3/jquery-1.11.3.min.js
          
         
          
 3. Make sure the asset-pipeline plugin is found in your pom.xml
    NOTE:  You should see something like this in your pom.xml
    
         <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>asset-pipeline</artifactId>
            <version>2.5.1</version>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

           
           
 5. Adjust your application.js
    
    a. Add this to to your application.js
        //= require jquery-1.11.3/jquery-1.11.3.min.js
    

        
        
    After the change, your application.js should look something like this:
    
        // This is a manifest file that'll be compiled into application.js.
        //
        // Any JavaScript file within this directory can be referenced here using a relative path.
        //
        // You're free to add application-wide JavaScript to this file, but it's generally better 
        // to create separate JavaScript files as needed.
        //

        //= require jquery-1.11.3/jquery-1.11.3.min.js
        //= require bootstrap
        //= require angular-1.2.28/angular.js.min

        if (typeof jQuery !== 'undefined') {
            (function($) {
                $('#spinner').ajaxStart(function() {
                    $(this).fadeIn();
                }).ajaxStop(function() {
                    $(this).fadeOut();
                });
            })(jQuery);
        }

    
 
 
