How to Secure the Grails Web App with a Groovy Filter
-----------------------------------------------------

Resources
--------
http://sysgears.com/articles/filtering-user-access-grails/


To create a filter, create a class that ends with the convention Filters in the grails-app/conf directory. Within this class define a code block called filters that contains the filter definitions. Within the filters there are three types of interceptors: before - executed before action, after - executed after action, afterView - executed after rendering the view. Here is an example of applying different filters. 

Procedure
---------
 1. Create the Grails Filter manually
    a. Create this directory:  grails-app / conf / security
    b. Under your security/ directory, create SecurityFilters.groovy
    c. Copy the contents below to SecurityFilters.groovy
              
        package security
        
        import org.slf4j.LoggerFactory
        import org.slf4j.Logger
        
        class SecurityFilters
        {
            private static final Logger logger = LoggerFactory.getLogger(SecurityFilters.class)
        
            def filters = {
                all(controller:'*', action:'*') {
                    before = {
                        logger.debug("Calling all.before()")
                    }
                    after = { Map model ->
                        logger.debug("Calling all.after()")
                    }
                    afterView = { Exception e ->
                        logger.debug("Calling all.afterView()")
                    }
                }
            }
        }
         
 
    

