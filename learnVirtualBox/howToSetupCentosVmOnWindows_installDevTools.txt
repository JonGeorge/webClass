How to Setup Development Tools on Cent OS
-----------------------------------------

Assumptions:
 A) You have a Cent OS operating system
 B) Your Cent OS VM has
     /media/sf_vault/ --> c:\vault
 C) You want to install these development tools:
      Java, Maven, Git, IntelliJ, Hadoop
 D) You want to install both Java 1.7 and 1.8 on your Cent OS machine
 E) You want your profile to use Java 1.7 by default
 

References
----------
http://tecadmin.net/setup-hadoop-single-node-cluster-on-centos-redhat/#


Procedures
----------
 1. Uninstall open-JDK
    a. Open a terminal
       unix> sudo yum search openjdk
             java-1.6.0-openjdk
             java-1.7.0-openjdk
             java-1.8.0-openjdk
    
       unix> sudo yum remove java-1.6.0-openjdk
       unix> sudo yum remove java-1.7.0-openjdk
       unix> sudo yum remove java-1.8.0-openjdk
       
       # Search for any other RPM jdk packages
       unix> sudo rpm -q jdk
       
             Case #1: 
               If you see something this:
                  jdk-1.7.0_55-fcs.i586
                  jdk-1.7.0_55-fcs.x86_64
               Then uninstall these java jdk packages (using rpm -e)
                  unix> rpm -e jdk-1.7.0_55-fcs.i586
                  unix> rpm -e jdk-1.7.0_55-fcs.x86_64
            
             Case #2: 
               If you see this:
                   package jdk is not installed
               Then, there are no other Sun JDKs installed -- so continue


 2. Download & Install Java 8.0.73
    a. Download Java JDK to your c:\vault
       On your Windows box, download jdk-8u73-linux-x64.rpm
       1) Go to http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html
       2) Browse to Java SE Development Kit 8u73
       3) Click Accept License Agreement
       4) Click on jdk-8u73-linux-x64.rpm
       5) Save it to your c:\vault
              
       # Copy the jdk linux x64 rpm to your /opt
       unix> cd /opt
       unix> sudo cp /media/sf_vault/jdk-8u73-linux-x64.rpm  .
       
       # Install the Java jdk 8.0.73
       unix> sudo rpm -ivh jdk-8u73-linux-x64.rpm
   
       # Verify it worked
       unix> java -version
       
       You should see this:
             java version "1.8.0_73"
             Java(TM) SE Runtime Environment (build 1.8.0_73-b02)
             Java HotSpot(TM) 64-Bit Server VM (build 25.73-b02, mixed mode)


 3. Setup your .bashrc with your JAVA_HOME
    a. Set your .bashrc to set your JAVA_HOME
       unix> vi ~/.bashrc
      
          # Setup JAVA_HOME to use Java 1.8 and add it to the path
          export JAVA_HOME=/usr/java/jdk1.8.0_73
          export PATH=${JAVA_HOME}/bin:$PATH

    b. Verify it works
       unix> source ~/.bashrc
       unix> java -version
       
       You should see this:
             java version "1.8.0_73"
             Java(TM) SE Runtime Environment (build 1.8.0_73-b02)
             Java HotSpot(TM) 64-Bit Server VM (build 25.73-b02, mixed mode)


 4. Install Maven 3.3.9
    NOTE:  Maven 3.3.9 requires Java 1.7 or later
   
    a. Download Maven apache-maven-3.3.1-bin.zip
       1) Go to https://maven.apache.org/download.cgi
       2) Look for apache-maven-3.3.9-bin.tar.gz
          *OR*
          Go to http://mirror.olnevhost.net/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
          
       3) Save apache-maven-3.3.9-bin.tar.gz to your c:\vault   
       
    b. Install Maven on your CentOS VM
       # Copy the jdk linux x64 rpm to your /opt
       unix> cd /opt
       unix> sudo cp /media/sf_vault/apache-maven-3.3.9-bin.tar.gz  .
       
       # Install Maven
       unix> sudo tar zxvf apache-maven-3.3.9-bin.tar.gz
       unix> sudo rm apache-maven-3.3.9-bin.tar.gz

    c. Change ownership of Maven to your regular account
       unix> sudo chown -R adam:adam /opt/apache-maven-3.3.9
    
    d. Update your /opt/apache-maven-3.3.9/conf/settings.xml with any special settings you need
    
    e. Adjust your .bashrc with M2_HOME and adding it your path
       unix> vi ~/.bashrc
    
       # Add these to the end of your .bashrc
       export MAVEN_OPTS=" -Xmx2048m -XX:MaxPermSize=512m"
       export M2_HOME=/opt/apache-maven-3.3.9
       export PATH=${PATH}:${M2_HOME}/bin

    f. Verify that maven works
       unix> source ~/.bashrc
       unix> mvn -version
       
       Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T11:41:47-05:00)
       Maven home: /opt/apache-maven-3.3.9
       Java version: 1.7.0_55, vendor: Oracle Corporation
       Java home: /usr/java/jdk1.7.0_55/jre
       Default locale: en_US, platform encoding: UTF-8
       OS name: "linux", version: "2.6.32-573.18.1.el6.x86_64", arch: "amd64", family: "unix"

    g. Get your maven effective settings
       unix> mvn help:effective-settings
       
       Your downloads should work
       
       You should see this:
       [INFO] ------------------------------------------------------------------------
       [INFO] BUILD SUCCESS
       [INFO] ------------------------------------------------------------------------
       [INFO] Total time: 03:45 min
       [INFO] Finished at: 2016-02-23T14:02:56-05:00
       [INFO] Final Memory: 14M/119M
       [INFO] ------------------------------------------------------------------------


 5. Download & Install Intellij Community Edition (for Linux)
    a. Download IntelliJ Community Edition for Linux
       1) Go to https://www.jetbrains.com/idea/download
       2) Select Linux
       3) Click "Download" under Community
          *OR*
          Go to https://www.jetbrains.com/idea/download/download-thanks.html?platform=linux&code=IIC
       3) Save ideaIC-2016.1.3.tar.gz  c:\vault\
   
    b. Install IntelliJ
       1) Update intellij from your c:\vault to /opt on your centos box
          unix> cd /opt
          unix> sudo cp /media/sf_vault/ideaIC-2016.1.3.tar.gz .
          unix> sudo tar zxvf ideaIC-2016.1.3.tar.gz
          unix> sudo rm ideaIC-2016.1.3.tar.gz
          
       2) Add the intellij/bin to your PATH
          unix> vi ~/.bashrc
          
          export IDEA_HOME=/opt/idea-IC-145.1617.8
          export PATH=${PATH}:${IDEA_HOME}/bin

       3) Startup Intellij
          unix> source ~/.bashrc
          unix> idea.sh

       4) You will be prompted if you want to import settings
          Click "I do not have a previous version of Intellij IDEA" and press OK
 
       5) Provide the Activation Code
       
       6) In the Set UI theme, go with defaults and press "Next"
       7) In the "Create Desktop Entry" page, use defaults and press Next
       8) In the "Tune IDEA to your tasks), go with defaults and click Next
       9) In the "Download featured plugins", go with defaults and press "Start using intellij IDEA"
      10) Close Intellij
      
    c. Add a shortcut for Intellij to your top Panel
       1) Left click on Applications -> Programming -> RIGHT_CLICK on Intellij IDEA -> Add this launcher to panel
       
    d. Configure centOS shortcuts so that they do not conflict with intellij
       1) Adjust Ctrl-Alt-Left and Ctrl-Alt-Right 
          a) Pull System -> Preferences -> Keyboard Shortcuts
          b) Scroll down to "Switch to workspace on the left of the current workspace"
          c) Single-click on "Switch to workspace on the left of the current workspace"
             -- Press the backspace key to disable it
          
          d) Single-click on "Switch to workspace on the right of the current workspace"
             -- Press the backspace key to disable it
          d) Press Close
          
       2) Adjust Alt-F1 so it is not captured by centOS   
          a) Pull System -> Preferences -> Keyboard Shortcuts
          b) Scroll to "Show the panel's main menu"   (Alt+F1)
             -- Press the backspace key to disable it
          b) Press Close
       
      3) Setup Ctrl-T to open a terminal
          a) Pull System -> Preferences -> Keyboard Shortcuts
          b) Scroll to "Run a terminal"
             -- Single click on the row that has "Run a terminal"
             -- Press Ctrl-T
          c) Press Close
             
             
 6. Compile & Install the latest version of git
    NOTE:  This is needed because Intellij does not like the older version of git that is installed from the yum repositories
    
    # Install development tools
    unix> sudo yum groupinstall "Development Tools"
    unix> sudo yum install zlib-devel perl-ExtUtils-MakeMaker asciidoc xmlto openssl-devel
    
    # Install curl-devel (so that git can clone https calls)
    unix> sudo yum install curl-devel
    
    # Download the git source
    a) Go to https://github.com/git/git/archive/master.zip
    b) Save to c:\vault
    c) Copy it from c:\vault to your /opt directory
    *OR*
    unix> cd /opt
    unix> sudo wget -O git.zip https://github.com/git/git/archive/v2.9.2.zip
          *or*
          Go to https://github.com/git/git/releases
          Click on the latest release zip


    # Compile & Install Git
    unix> su - 
    unix> cd /opt
    unix> unzip git.zip
    unix> rm git.zip
    unix> cd git-master
    unix> make configure
    unix> ./configure --prefix=/usr/local
    unix> make all doc
    unix> make install install-doc
    unix> exit
    
    # Verify that the Git version is now updated
    unix> git --version
    git version 2.7.0.GIT
    
    # Update Intellij and tell it where the latest git version is
    1) Get the path of your new git
       unix> which git
       /usr/local/bin/git
    
    2) Configure Intellij to use your new version of Git
       a) Startup intellij
          unix> idea.sh
       
       b) If a previous project appears, then close it
       c) On the Intellij welcome screen, 
          Pull Configure -> Settings
       d) Search for git  
       e) Click on Version Control -> Git
       f) Path to Git Executable to be:   /usr/local/bin/git
       g) Press the "Test" button
         -- It should show "Git executed successfully...Git version is 2.7.0.0"
       h) Press OK
       i) Press OK
       j) Close IntelliJ
       
       
 7. Install the telnet command
    NOTE:  This will not install the telnet service -- only the telnet client
    unix> sudo yum install telnet
 
 

    



Your .bashrc should have these entries
--------------------------------------
# User specific aliases and functions
alias c=clear
alias r='fc -e -'
alias ls='ls -F'
alias rls='while [ 1 ]; do clear; echo `date`; ls -ltr; sleep 3; done'
alias x=exit

set -o vi

# Setup the prompt to show the username, hostname, and working directory
export PS1='\u@\h (\!) $PWD > '

# Tell Virtual Box where the kernel directory is
export KERN_DIR=/usr/src/kernels/2.6.32-573.18.1.el6.x86_64

export M2_HOME=/opt/apache-maven-3.3.9
export IDEA_HOME=/opt/idea-IU-143.1821.5
export MAVEN_OPTS=" -Xmx2024m -XX:MaxPermSize=512m"

# Add Intellij and Maven to the Path
export PATH=/usr/local/bin/:${M2_HOME}/bin:${IDEA_HOME}/bin:$PATH

# Put Java 1.8 in your path
export JAVA_HOME=/usr/java/jdk1.8.0_73
export PATH=${JAVA_HOME}/bin:$PATH


