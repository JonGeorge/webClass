How to Setup Development Tools on Cent OS
-----------------------------------------

Assumptions:
 A) You have a Cent OS operating system
 B) Your Cent OS VM has
     /media/sf_vault/ --> c:\vault
 C) You want to install these development tools:
      Java, Maven, Git, IntelliJ, Hadoop
 

References
----------
http://tecadmin.net/setup-hadoop-single-node-cluster-on-centos-redhat/#

Procedures
----------
 1. Download & Install Java 7.0.55
    a. Download Java JDK to your c:\vault
       On your Windows box, download jdk-7u55-linux-i586.rpm
       1) Go to http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html
       2) Click on Java SE Development Kit 7u55
       3) Click Accept License Agreement
       4) Click on jdk-7u55-linux-x64.rpm
       5) Save it to your c:\vault
       
    b. Uninstall openjdk
       unix> su - 
       unix> yum search openjdk
             java-1.6.0-openjdk
             java-1.7.0-openjdk
             java-1.8.0-openjdk
    
       unix> yum remove java-1.6.0-openjdk
       unix> yum remove java-1.7.0-openjdk
       unix> yum remove java-1.8.0-openjdk
      
       
    c. Install Oracle JDK 7.0.55
       unix> su - 
       
       # Search for any other RPM jdk packages
       unix> rpm -q jdk
             jdk-1.7.0_55-fcs.i586
             jdk-1.7.0_55-fcs.x86_64
       
       # If you see any versions of java, then erase them use this RPM command
       unix> rpm -e jdk-1.7.0_55-fcs.i586
       unix> rpm -e jdk-1.7.0_55-fcs.x86_64
       
       # Copy the jdk linux x64 rpm to your /opt
       unix> cd /opt
       unix> cp /media/sf_vault/jdk-7u55-linux-x64.rpm  .
       
       # Install the Java jdk 7.0.55
       unix> rpm -Uvh jdk-7u55-linux-x64.rpm
   
       # Verify it worked
       unix> java -version
             java version "1.7.0_55"
             Java(TM) SE Runtime Environment (build 1.7.0_55-b13)
             Java HotSpot(TM) 64-Bit Server VM (build 24.55-b03, mixed mode)

       # Add this to your .bashrc
       export JAVA_HOME=/usr/java/jdk1.7.0_55
          

 2. Install Maven 3.3.1
    NOTE:  Maven 3.3.1 requires Java 1.7 or later
   
    a. Download Maven apache-maven-3.3.1-bin.zip
       1) Go to https://maven.apache.org/download.cgi
       2) Look for apache-maven-3.3.9-bin.tar.gz
          *OR*
          Go to http://mirror.olnevhost.net/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
          
       3) Save apache-maven-3.3.9-bin.tar.gz to your c:\vault   
       
    b. Install Maven on your CentOS VM
       # Copy the jdk linux x64 rpm to your /opt
       unix> cd /opt
       unix> cp /media/sf_vault/apache-maven-3.3.9-bin.tar.gz  .
       
       # Install Maven
       unix> tar zxvf apache-maven-3.3.9-bin.tar.gz
       unix> rm apache-maven-3.3.9-bin.tar.gz
    
    c. Update your /opt/apache-maven-3.3.9/conf/settings.xml with any special settings you need
    
    d. Adjust your .bashrc with M2_HOME and adding it your path
       unix> su - <your unix account>
       unix> vi ~/.bashrc
    
       # Add these to the end of your .bashrc
       export M2_HOME=/opt/apache-maven-3.3.9
       export PATH=${PATH}:${M2_HOME}/bin

    e. Verify that maven works
       unix> source ~/.bashrc
       unix> mvn -version
       
       Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T11:41:47-05:00)
       Maven home: /opt/apache-maven-3.3.9
       Java version: 1.7.0_55, vendor: Oracle Corporation
       Java home: /usr/java/jdk1.7.0_55/jre
       Default locale: en_US, platform encoding: UTF-8
       OS name: "linux", version: "2.6.32-573.18.1.el6.x86_64", arch: "amd64", family: "unix"

    f. Get your maven effective settings
       unix> mvn help:effective-settings
       
       Your downloads should work
       
       You should see this
       [INFO] ------------------------------------------------------------------------
       [INFO] BUILD SUCCESS
       [INFO] ------------------------------------------------------------------------
       [INFO] Total time: 03:45 min
       [INFO] Finished at: 2016-02-23T14:02:56-05:00
       [INFO] Final Memory: 14M/119M
       [INFO] ------------------------------------------------------------------------

       
 3. Download & Install Git
    a. Install git 
       Open a terminal on your CentOS
       unix> sudo yum install git
    
    b. Verify that it installed
       unix> git --version
       git version 1.7.1

       
 4. Download & Install Intellij for CentOS
    a. Download IntelliJ Community Edition
       1) Go to http://www.jetbrains.com/idea/download/download-thanks.html?platform=linux
       2) Save ideaIU-15.0.3.tar.gz  c:\vault\
   
    b. Install IntelliJ
       1) Open a terminal on your centOS VM
          unix> su -
          unix> cd /opt
          unix> cp /media/sf_vault/ideaIU-15.0.3.tar.gz .
          unix> tar zxvf ideaIU-15.0.3.tar.gz
          unix> rm ideaIU-15.0.3.tar.gz
          
       2) Add the intellij/bin to your PATH
          unix> su - <your unix user>
          unix> vi ~/.bashrc
          
          export M2_HOME=/opt/apache-maven-3.3.9
          export IDEA_HOME=/opt/idea-IU-143.1821.5
          export PATH=$PATH:${M2_HOME}/bin:${IDEA_HOME}/bin

       3) Startup Intellij
          unix> source ~/.bashrc
          unix> idea.sh

       4) You will be prompted if you want to import settings
          Click "I do not have a previous version of Intellij IDEA" and press OK
 
       5) Provide the Activation Code
       
       6) In the Set UI theme, go with defaults and press "Next"
       7) In the "Create Desktop Entry" page, use defaults and press Next
       8) In the "Tune IDEA to your tasks), go with defaults and click Next
       9) In the "Download featured plugins", go with defaults and press "Start using intellij IDEA"
       
      
 5. **OPTIONAL** Compile latest version of git
    NOTE:  This is needed if Intellij complains about unsupported version of git
    Follow these procedures to compile git from source
    
    # Install development tools
    unix> sudo yum groupinstall "Development Tools"
    unix> sudo yum install zlib-devel perl-ExtUtils-MakeMaker asciidoc xmlto openssl-devel
    
    # Install curl-devel (so that intellij can clone https calls)
    unix> sudo yum install curl-devel
    
    # Download the git source
    a) Go to https://github.com/git/git/archive/master.zip
    b) Save to c:\vault
    c) Copy it from c:\vault to your /opt directory
    *OR*
    unix> su - 
    unix> cd /opt
    unix> wget -O git.zip https://github.com/git/git/archive/master.zip

    # Compile & Install Git
    unix> su - 
    unix> cd /opt
    unix> unzip git.zip
    unix> rm git.zip
    unix> cd git-master
    unix> make configure
    unix> ./configure --prefix=/usr/local
    unix> make all doc
    unix> make install install-doc
    
    # Verify that the Git version is now updated
    unix> git --version
    git version 2.7.0.GIT
    
    # Update Intellij and tell it where the latest git version is
    1) Get the path of your new git
       unix> which git
       /usr/local/bin/git
    
    2) startup intellij
       unix> idea.sh
       
    3) If a previous project appears, then close it
    4) On the Intellij welcome screen, 
       Click Configure -> Settings
    
    5) Search for git  
    6) Path to Git Executable to be:   /usr/local/bin/git
    7) Press the "Test" button
       -- It should show that it found Git 2.7.0
       
 6. Download & Install Hadoop 2.7.1 binaries for CentOS
    a. Download & Install Hadoop
       unix> su -
       unix> cd /opt
       unix> wget http://apache.claz.org/hadoop/common/hadoop-2.7.1/hadoop-2.7.1.tar.gz
       unix> tar zxvf hadoop-2.7.1.tar.gz
       unix> rm hadoop-2.7.1.tar.gz
       
    b. Setup environment variables
       NOTE:  Add these to your ~/.bashrc

       export HADOOP_HOME=/opt/hadoop-2.7.1
       export HADOOP_INSTALL=$HADOOP_HOME
       export HADOOP_MAPRED_HOME=$HADOOP_HOME
       export HADOOP_COMMON_HOME=$HADOOP_HOME
       export HADOOP_HDFS_HOME=$HADOOP_HOME
       export YARN_HOME=$HADOOP_HOME
       export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
       export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin
   
    c. Verify that the paths are found
       unix> su - <your unix account>
       unix> hadoop version
       Hadoop 2.7.1
       Subversion https://git-wip-us.apache.org/repos/asf/hadoop.git -r 15ecc87ccf4a0228f35af08fc56de536e6ce657a
       Compiled by jenkins on 2015-06-29T06:04Z
       Compiled with protoc 2.5.0
       From source with checksum fc0a1a23fc1868e4d5ee7fa2b28a58a
       This command was run using /opt/hadoop-2.7.1/share/hadoop/common/hadoop-common-2.7.1.jar

    c. Create Hadoop User
       unix> su -
       unix> adduser hadoop
       unix> passwd hadoop

    d. After creating account, it also required to set up key based ssh to its own account. To do this use execute following commands.
       unix> su - hadoop
       unix> ssh-keygen -t rsa
             Enter file in which to save the key (/home/hadoop/.ssh/id_rsa):   <press enter>
             
             Enter passphrase (empty for no passphrase):    <press enter>
             Enter same passphrase again:                   <press enter>

       unix> cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
       unix> chmod 0600 ~/.ssh/authorized_keys
 
    e. Verify key based login. The command should *not*  ask for password but first time it will prompt for adding RSA to the list of known hosts.
       unix> ssh localhost
       
       The authenticity of host 'localhost (::1)' can't be established.
       RSA key fingerprint is 9b:35:ab:51:bc:6e:92:ff:a5:4f:2d:a9:11:d5:36:ae.
       Are you sure you want to continue connecting (yes/no)?                    yes
      
       unix> exit




Your .bashrc should have these entries
--------------------------------------
# User specific aliases and functions
alias c=clear
alias ls='ls -F'
set -o vi

# Setup the prompt to show the username, hostname, and working directory
export PS1='\u@\h $PWD > '

# Tell Virtual Box where the kernel directory is
export KERN_DIR=/usr/src/kernels/2.6.32-573.18.1.el6.x86_64

export JAVA_HOME=/usr/java/jdk1.7.0_55
export M2_HOME=/opt/apache-maven-3.3.9
export IDEA_HOME=/opt/idea-IU-143.1821.5

# Add Intellij and Maven to the Path
export PATH=/usr/local/bin/:${M2_HOME}/bin:${IDEA_HOME}/bin:$PATH

# Setup Hadoop Environment variables
export HADOOP_HOME=/opt/hadoop-2.7.1
export HADOOP_INSTALL=$HADOOP_HOME
export HADOOP_MAPRED_HOME=$HADOOP_HOME
export HADOOP_COMMON_HOME=$HADOOP_HOME
export HADOOP_HDFS_HOME=$HADOOP_HOME
export YARN_HOME=$HADOOP_HOME
export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin
