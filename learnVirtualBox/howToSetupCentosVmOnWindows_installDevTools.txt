How to Setup Development Tools on Cent OS
-----------------------------------------

Assumptions:
 A) You have a Cent OS operating system
 B) Your Cent OS VM has
     /media/sf_vault/ --> c:\vault
 C) You want to install Java, Maven, Git, and IntelliJ on it
 

Procedures
----------
 1. Download & Install Java 7.0.55
    a. Download Java JDK to your c:\vault
       On your Windows box, download jdk-7u55-linux-i586.rpm
       1) Go to http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html
       2) Click Accept License Agreement
       3) Click on jdk-7u55-linux-x64.rpm
       4) Save it to your c:\vault
       
    b. Uninstall openjdk
       unix> su - 
       unix> yum search openjdk
             java-1.6.0-openjdk
             java-1.7.0-openjdk
             java-1.8.0-openjdk
    
       unix> yum remove java-1.6.0-openjdk
       unix> yum remove java-1.7.0-openjdk
       unix> yum remove java-1.8.0-openjdk
      
       
    c. Install Oracle JDK 7.0.55
       unix> su - 
       
       # Search for any other RPM jdk packages
       unix> rpm -q jdk
             jdk-1.7.0_55-fcs.i586
             jdk-1.7.0_55-fcs.x86_64
       
       # Erase any other RPM jdk packages
       unix> rpm -e jdk-1.7.0_55-fcs.i586
       unix> rpm -e jdk-1.7.0_55-fcs.x86_64
       
       # Copy the jdk linux x64 rpm to your /opt
       unix> cd /opt
       unix> cp /media/sf_vault/java/jdk-7u55-linux-x64.rpm  .
       
       # Install the Java jdk 7.0.55
       unix> rpm -Uvh jdk-7u55-linux-x64.rpm
   
       unix> java -version
             java version "1.7.0_55"
             Java(TM) SE Runtime Environment (build 1.7.0_55-b13)
             Java HotSpot(TM) 64-Bit Server VM (build 24.55-b03, mixed mode)



 2. Install Maven 3.3.1
    NOTE:  Maven 3.3.1 requires Java 1.7 or later
   
    a. Download Maven apache-maven-3.3.1-bin.zip
       1) Go to https://maven.apache.org/download.cgi
       2) Look for apache-maven-3.3.9-bin.tar.gz
          *OR*
          Go to http://mirror.olnevhost.net/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
          
       3) Save apache-maven-3.3.9-bin.tar.gz to your c:\vault   
       
    b. Install Maven on your CentOS VM
       # Copy the jdk linux x64 rpm to your /opt
       unix> cd /opt
       unix> cp /media/sf_vault/apache-maven-3.3.9-bin.tar.gz  .
       
       # Install Maven
       unix> tar zxvf apache-maven-3.3.9-bin.tar.gz
       unix> rm apache-maven-3.3.9-bin.tar.gz
    
    c. Update your /opt/apache-maven-3.3.9/conf/settings.xml with any special settings you need
    
    d. Adjust your .bashrc with M2_HOME and adding it your path
       unix> vi ~/.bashrc
    
       # Add these to the end of your .bashrc
       export M2_HOME=/opt/apache-maven-3.3.9
       export PATH=${PATH}:${M2_HOME}/bin

    e. Verify that maven works
       unix> mvn -version
       
       Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T11:41:47-05:00)
       Maven home: /opt/apache-maven-3.3.9
       Java version: 1.7.0_55, vendor: Oracle Corporation
       Java home: /usr/java/jdk1.7.0_55/jre
       Default locale: en_US, platform encoding: UTF-8
       OS name: "linux", version: "2.6.32-573.18.1.el6.x86_64", arch: "amd64", family: "unix"

    f. Get your maven effective settings
       unix> mvn help:effective-settings
       
       Your downloads should work
       
       You should see this
       [INFO] ------------------------------------------------------------------------
       [INFO] BUILD SUCCESS
       [INFO] ------------------------------------------------------------------------
       [INFO] Total time: 03:45 min
       [INFO] Finished at: 2016-02-23T14:02:56-05:00
       [INFO] Final Memory: 14M/119M
       [INFO] ------------------------------------------------------------------------

       
 3. Download & Install Git
    a. Install git 
       Open a terminal on your CentOS
       unix> sudo yum install git
    
    b. Verify that it installed
       unix> git --version
       git version 1.7.1

       
 4. Download & Install Intellij for CentOS
    a. Download IntelliJ Community Edition
       1) Go to http://www.jetbrains.com/idea/download/download-thanks.html?platform=linux
       2) Save ideaIU-15.0.3.tar.gz  c:\vault\
   
    b. Install IntelliJ
       1) Open a terminal on your centOS VM
          unix> su -
          unix> cd /opt
          unix> cp /media/sf_vault/intellij/ideaIU-15.0.3.tar.gz .
          unix> tar zxvf ideaIU-15.0.3.tar.gz
          unix> rm ideaIU-15.0.3.tar.gz
          
       2) Add the intellij/bin to your PATH
          unix> vi ~/.bashrc
          
          export M2_HOME=/opt/apache-maven-3.3.9
          export IDEA_HOME=/opt/idea-IU-143.1821.5
          export PATH=$PATH:${M2_HOME}/bin:${IDEA_HOME}/bin


       3) Startup Intellij
          unix> idea.sh
       
             
       4) You will be prompted if you want to import settings
          Click "I do not have a previous version of Intellij IDEA" and press OK
       
       5) Provide the Activation Code
       
       6) In the Set UI theme, go with defaults and press "Next"
       7) In the "Create Desktop Entry" page, use defaults and press Next
       8) In the "Tune IDEA to your tasks), go with defaults and click Next
       9) In the "Download featured plugins", go with defaults and press "Start using intellij IDEA"
       
      
 5. **OPTIONAL** Compile latest version of git
    NOTE:  This is needed if Intellij complains about unsupported version of git
    Follow these procedures to compile git from source
    
    # Install development tools
    unix> sudo yum groupinstall "Development Tools"
    unix> sudo yum install zlib-devel perl-ExtUtils-MakeMaker asciidoc xmlto openssl-devel
    
    # Install curl-devel (so that intellij can clone https calls)
    unix> sudo yum install curl-devel
    
    # Download the git source
    a) Go to https://github.com/git/git/archive/master.zip
    b) Save to c:\vault
    c) Copy it from c:\vault to your /opt directory
    *OR*
    unix> su - 
    unix> cd /opt
    unix> wget -O git.zip https://github.com/git/git/archive/master.zip

    # Compile & Install Git
    unix> su - 
    unix> cd /opt
    unix> wget -O git.zip https://github.com/git/git/archive/master.zip
    unix> unzip git.zip
    unix> rm git.zip
    unix> cd git-master
    unix> make configure
    unix> ./configure --prefix=/usr/local
    unix> make all doc
    unix> make install install-doc
    
    # Verify that the Git version is now updated
    unix> git --version
    git version 2.7.0.GIT
    
    # Update Intellij and tell it where the latest git version is
    1) Get the path of your new git
       unix> which git
       /usr/local/bin/git
   
    2) startup intellij
       unix> idea.sh
       
    3) Go to Files->Settings->Version Control->Git
    4) Change the value of Path to Git Executable to /usr/local/bin/
