How to Setup a CentOS 7 VM on Windows 7
---------------------------------------

Assumptions:
 A) You have a Windows computer
 B) Your computer has an Intel i386 chip in it
 C) You want to run a local Centos 7 Virtual Machine (using VirtualBox) on your Windows workstation


References
----------
Virtual Box User Manual:        https://www.virtualbox.org/manual/UserManual.html
How to change centos hostname:  http://www.putorius.net/2013/09/how-to-change-machines-hostname-in.html
 
 
Procedure
---------
 1. Download the CentOS 7 ISO file
    a. Go to http://isoredirect.centos.org/centos/7/isos/x86_64/
    b. Click on a mirror
    c. Click on CentOS-7-x86_64-Everything-1804.iso
       *OR*
    b. Go to http://mirror.us.oneandone.net/linux/distributions/centos/7/isos/x86_64/CentOS-7-x86_64-Everything-1804.iso
       -- Save to c:\vault\CentOS-7-x86_64-Everything-1804.iso
    
    
 2. Download the Virtual Box package for Windows
    a. Go to https://www.virtualbox.org/wiki/Downloads
    b. Click on the link "Download VirtualBox 5.0.14 for Windows hosts"
       or
       Go to http://download.virtualbox.org/virtualbox/5.0.14/VirtualBox-5.0.14-105127-Win.exe
    c. Save VirtualBox-5.0.14-105127-Win.exe to your c:\vault\


 3. Install Virtual Box for Windows
    a. Run c:\vault\VirtualBox-5.0.14-105127-Win.exe
    b. In the "Welcome to the Oracle VM Virtual Box 5.0.14 Setup Wizard" page, press Next
    c. In the "Custom Setup" page, go with defaults and press Next
    d. In the "Custom Setup" page, go with defaults [and leave the checkboxes checked regarding creating shortcuts] and pres Next
    e. In the "Warning: Network Interfaces" page, press Yes
    f. In the "Ready to Install" page, press Install
    g. If prompted "Would you like to install this device software" Oracle Universal Serial Bus..." press "Install"
    h. In the "Oracle VM VirtualBox 5.0.14 installation is complete" 
       Uncheck the checkbox to start VM VirtualBox and press Finish


 4. Create your CentOS 7 VM (using the VirtualBox software)
    a. Run "Oracle VM VirtualBox"  [there should be a shortcut on your desktop]
    b. Click on the "New" button
    c. In the "Name and operating system" page, 
       press "Expert Mode"
      
       Name:    CentOS 7
       Type:    Linux
       Version: Red Hat(64-bit)
      
       Memory:  8192 MB      NOTE:  I assume that your box has 16 GB of RAM.  When in doubt, use half
       Hard Disk:  Create a virtual hard disk now
       Press "Create"
   
   c. Create this directory:  C:\tools\virtualBoxVMs\
      
   d. In the "Create Virtual Hard Disk"
      File location:        C:\tools\virtualBoxVMs\centos7.vdi
      File Size:            150 GB     # NOTE:  This is a **CEILING** so go big.  It will not use up all of this space initially
      Hard disk file type:  VDI
      Storage on physical hard disk:  Dynamically Allocated
      Press "Create"
      -- Now, you should see "CentOS 7" VM in the VirtualBox Manager (and it should be powered off)

      
      
 5. Start up your VM and install the operating system
    a. Right-click on "CentOS 7" -> Start -> Normal Start
    b. In the "Select startup disk" page
       1) Press the little button  [that says "Choose a virtual optical drive file..."]
       2) Browse to your c:\vault\CentOS-7-x86_64-Everything-1804.iso
       3) Press Start

     WARNING:  If you see strange errors starting-up your virtual machine
               Then you might need to change your BIOS settings on your Windows computer
               to allow virtualization
                 See this url:  https://www.virtualbox.org/ticket/4130
               
               Possible Fixes:
                 A) Change your BIOS so that VT-x is enabled and working
                 B) Change your BIOS so that Trusted Execution is OFF
                 C) Change your BIOS so that Trusted Platform Modules (TPM) is ON and functioning
                 D) Change the number of processors from 1 to 2
                 
                 

    a. In the Language screen, select "English (United States)" and press Continue

    b. In the "Installation Summary" screen, click on "Installation Destination"

    c. In the "Device Selection" screen, you will probably see some local disks
       1) Press the "Refresh" link in the bottom right corner
          Press "Rescan Disks"
          Press "OK"

       2) Single-click on your **hard-drive**
          a) Single-click on your **portable hard-drive**
          b) Click on "I will configure partitioning"
          c) Click "Encrypt my data..."
             NOTE:  Encrypting the hard-drive is **OPTIONAL** but highly recommended
          d) Click "Done"


    d. In the "Manual Partitioning" page,
       It probably says "You haven't created any mount points for your CentOS Linjx 7 installation yet"

       Create the following 3 mount points
          /boot       1 GIB   # Holds the grub boot loader
          swap       24 GiB   # Holds your swap file.    If 16 GB of RAM, set for somewhere between 16 and 32 GIB
          /         137 GiB   # Remaining space on your centos operating system


       1) Press the "+" to create a mount point
             Mount Point:  /boot
             Capacity:     1 GiB         # NOTE:  1 GB=1000 MB  and  1 GIB=1024 MB
             Press "Add mount point"

       2) Press the "+" to create a mount point
             Mount Point:  swap
             Capacity:     24 GiB       (assumes laptop has 16 GB of RAM)
             Press "Add mount point"

       3) Press the "+" to create a mount point
             Mount Point:  /
             Capacity:     (leave blank to use the remaining space)
             Press "Add mount point"

       4) Press "Done"

       If you get the error:
           "No valid boot loader target device found.  See below for details.
            For a UEFI installation, you must include an EFI System Partition on a GPT-formatted disk mounted at /boot/efi"

            Then it means that you booted un EUFI mode.  You want to boot your USB drive in lagacy/MBR mode instead
            Reboot your laptop and change your BIOS settings so that you boot in legacy/MBR mode (and not EUFI mode)


       If you selected to encrypt your disk, you will be prompted to enter your disk ecnryption passphrase
       -- You will be prompted for this password every time you startup your centos operating system
       -- Enter the pass phrase twice and press "Save Passphrase"

    e. You will be prompted with a summary of changes
         Press "Accept Changes"

    f. Back In the Installation Summary, select "Software Selection"
       1) Select "Development and Creative Workstation" [on the left]
       2) Under the "Add-ons for Selected Environment", select the following:
            Additional Development
            Backup Client
            Development Tools
            Graphics Creation Tools
            Office Suite and Productivity
            Platform Develompent
            Technical Writing
            Security Tools
            Smart Card Support
       3) Press Done

    g. Back in the Installation Summary, select "Network & Host Name"
       1) In the bottom left, enter your hostname:  myCentos

       2) Single-click on your "Ethernet Card"
          Slide the slider to On [on the right side]

       3) Press "Configure"
          a) Click on the "General" tab
          b) Check "Automatically connect to this network when it is available"
          c) Press "Save"

       4) Press "Done"

    h. Press "Begin Installation

    i. In the "User Settings" screen
       1) Single-click on "Root Password"
          a) Enter your root password
          b) Press "Done"

       2) Single-click on "User Creation"
          a) Enter the full name, user name, password
          b) Press "Done"


       W A I T     U P T O     6 0    M I N U T E S    (to install 2300+ packages and perform post-install setup tasks)

       NOTE:  If the installation gives you problems
                Then delete your partitions, try a different swap size, and try again


    j. When install has finished, you should see "Complete!"
       3) Press the "Reboot"

       You should see the Grub 2 Boot loader with 2 Centos7 options
       -- Go with the default Centos 7 login option

    k. Click on "License Information"
       1) Press "I accept the license agreement"
          Press "Done"
       2) Press "Finish Configuration"

       You should see the login screen



    l. Login to Centos7
       After Centos 7 boots-up,
       You should see your user's full name on the login screen
       1) Single-click on your account name
       2) Enter your password
          Press "Sign-in"

    m. In the "Welcome" popup screen,
       1) For language, select "English" and press "Next"
       2) For "Typing", select English (US)" and press "Next"
       3) For "Wi-fi", press "Skip"
       4) For "Privacy",
             Under Location Services, choose "Off" and press "Next
       5) For the "Connect Your Online Accounts" press "Skip"
       6) Press "Start using CentOS Linux"





        Customize your unix user account in your Centos 7 VM
        ----------------------------------------------------
         1. Give your unix account sudo access by adding it to the "sudoers" list
            a. Right-click on the desktop -> Open in Terminal
            b. unix> su -
                  <Enter the root password>

            c. Run the visudo command as root
               unix> visudo

                  # Add this line to the end:
                  <your unix username> ALL=(ALL) ALL

            unix> exit       # exit root and become your regular unix account
            unix> sudo -l    # Run this command as your own regular unix account (not as root)

            Now, your personal unix account can run "sudo -s" to become root


         2. Customize your bash shell with a few aliases
            unix> vi ~/.bashrc

              # User specific aliases and functions
              alias c=clear
              alias r='fc -e -'
              alias ls='ls -F'
              alias rls='while [ 1 ]; do clear; echo `date`; ls -ltr; sleep 3; done'
              alias x=exit

              # **OPTIONAL** Set bash prompt editing using vi-style
              set -o vi

              # Setup the prompt to show the username, hostname, and working directory
              export PS1='\u@\h $PWD > '


          3. Setup vi defaults
             NOTE:  Add the :syntax off line to your .vimrc

             unix> vi ~/.vimrc
               # Add this to the file
               :syntax off




        Install the MATE Window Manager  (looks like older Centos 6 GUI)
        ------------------------------------------------------------------------
        The default GUI is "Gnome 3" and it has some major annoyances.
        MATE looks & feels like the older Gnome 2 (which comes with Centos 6).  It is much easier to use.
         1. Setup the yum repo
            unix> sudo yum install epel-release

         2. Install the "Server with GUI" package
            unix> sudo yum groupinstall "Server with GUI"

         3. Install the MATE desktop  (about 500 MB of downloads spread out over 126 packages)
            unix> sudo yum groupinstall "MATE Desktop"

         4. Reboot
            unix> sudo reboot

            WARNING:
              If you see errors in shutdown like this
                 rm:atom_execute_table_locked [radeon] *ERROR* atombios stuck in loop for more than 5secs aborting
              then you might have a Radeon Graphics driver problem

              You will want to do these steps *before* you login to Centos7
               1) Press Ctrl-Alt-F2 to get to a terminal
               2) Follow the steps
                  [see learnCentos / howToFixRadeon8790mDriverProblem.txt]


         5. On the Centos 7 login page, select MATE as your window manager
            When you see the login page with the name of your username
            -- Click on your username
            -- Click on the wheel
            -- Select 'MATE'
            -- Enter your password



        Customize the MATE Window Manager
        ---------------------------------
         1. Make the top and bottom panels bigger
            a. Right-click on the top panel -> Properties
               Set the Size to 40 pixels
            b. Right-click on the bottom panel -> Properties
               Set the size to 40 pixels

         2. Customize your Terminal Settings
            a. Open a terminal  (right-click on the desktop -> Open in Terminal)
            b. Pull Edit / Profile Preferences
               1) In the "Colors" tab
                  Uncheck "Use colors from system theme"
                  Built-in schems:  White on black
                  Built-in schemes: XTerm

               2) In the "Scrolling" tab
                  Check "Unlimited"

               3) In the "General" tab
                  Uncheck "Use the system fixed width font"
                  Uncheck "Show menubar by default in new terminals"
                  Check "Use custom default terminal size"
                    Default Size:  115 columns
                    Default Size:   20 rows

               4) Press Close

         3. Setup Control-T to open a new terminal
            a. Pull System -> Preferences -> Hardware -> Keyboard Shortcuts
            b. Scroll down to "Run a terminal"
            c. Press the backspace key to disable the shortcut
            d. Press Control T   [to set the shortcut]
            e. Press Close
            f. Verify that it works by pressing Control-T

         4. Turn off the automatic screen lock
            a. Go to System -> Preferences -> Look & Feel -> Screensaver
            b. Uncheck "Lock screen when screensaver is active"

         5. Set a shortcut so that Windows-L will lock the screen
            a. Pull System -> Preferences -> Hardware -> Keyboard Shortcuts
            b. Scroll down to "Lock Screen"
            c. Press the backspace key to disable the shortcut
            d. Press Windows-L   [to set the shortcut]
            e. Press Close
            f. Verify that it works by pressing windows-L
                -- You should be prompted to enter your password

         6. Change the Windows theme to "Blue-Submarine"
            a. Pull System -> Preferences -> Look & Feel -> Appearance
            b. In the "Theme" tab, choose "Blue-Submarine"
               NOTE:  If you do choose "BlackMATE", then follow the steps in these procedures
                      to fix the white-on-white problem in Firefox textboxes)
                      [see learnCentos / howtoFixBlackMateProblem.txt]

         7. Add a shutdown button to the top panel
            a. Right-click on the top panel -> Add to Panel....
            b. Double-click on "Shut Down..."
               (and it will appear in the panel)
            c. Press Close
            d. Right-click on the "Shut Down" panel app -> Move
               Move it over to the right

            NOTE:  If you want to reset your panel back to the defaults, run this command:
                   unix> mate-panel --reset

         8. Change the background color to be my favorite jpg
            a. Download the image file from here:
               unix> cd ~/Pictures
               unix> wget https://github.com/traderres/webClass/raw/master/learnCentOS/default_1920x1440.png
            b. Set the background to use this png
               1) Right-click on the desktop -> Change Desktop Background
               2) Press "Add..."
               3) Double-click on the image


         9. Add "Downloads" to the "Places" menu
            The "Places" menu (in your top panel) is the same as your Caja bookmarks
            To add to it, simply bookmark a folder

            To add the "Downloads" to your Places
            a. Open the file browser or run caja
            b. Browse to your "Downloads" directory
            c. Bookmark your current directory by pressing Ctrl-D
               *OR*
               Drag and drop the directory to the "Bookmarks"
               -- Now, the directory appears in the "Places" mneu


        10. **OPTIONAL**  Setup a script to set keyboard backlit brightnoess on startup
            [ see learnCentos / howToConfigureBrightnessOnLogin.txt ]

        11. Disable the mouse wheel click-to-paste
            [ see learnCentos / howToDisableMouseWheelClickPaste.txt ]




        Disable Some Shortcuts so they do not interfere with Intellij
        -------------------------------------------------------------
         1. Disable these shortcuts: Ctrl-Alt-Left and Ctrl-Alt-Right
            a. Pull System -> Preferences -> Hardware -> Keyboard Shortcuts
            b. Scroll down to "Switch to workspace on the left of the current workspace"
            c. Press the backspace key to disable the shortcut
            b. Scroll down to "Switch to workspace on the right of the current workspace"
            c. Press the backspace key to disable the shortcut

         2. Disable this shortcut:  AlT-F1
            a. Pull System -> Preferences -> Hardware -> Keyboard Shortcuts
            b. Scroll down to "Show the panel's main menu"
            c. Press the backspace key to disable the shortcu

         3. Press Close



        Install Development Tools
        -------------------------
         1. Download & Install Java 8
            a. Download Java JDK to your c:\vault
               On your Windows box, download jdk-8u151-linux-x64.rpm
               1) Go to http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
               2) Browse to Java SE Development Kit 8u151
               3) Click Accept License Agreement
               4) Click on jdk-8u151-linux-x64.rpm
               5) Save it to your Downloads

                  CAREFUL:  You want to install the jdk- file  (not the jre- file)

               # Install the Java JDK
               unix> sudo rpm -ivh ~/Downloads/jdk-8u151-linux-x64.rpm

               # Verify the install worked
               unix> /usr/java/latest/bin/java -version

               You should see this:
                  java version "1.8.0_151"
                  Java(TM) SE Runtime Environment (build 1.8.0_151-b12)
                  Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)


         2. Make sure this version of Java is in your path
            a. Get the actual path of where the JDK is located
               unix> ls -ld /usr/java/latest

            b. Set your .bashrc to set your JAVA_HOME
               unix> vi ~/.bashrc

                  # Setup JAVA_HOME to use Java 1.8 and add it to the path
                  export JAVA_HOME=/usr/java/jdk1.8.0_151
                  export PATH=${JAVA_HOME}/bin:$PATH

            c. Verify this version of java is in your path and JAVA_HOME is set
               1) Open a new terminal  (press Ctrl-T)
               2) unix> java -version

               You should see this:
                  java version "1.8.0_151"
                  Java(TM) SE Runtime Environment (build 1.8.0_151-b12)
                  Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)


         3. Install Java Cryptograph Extensions (JCE)
            [see learnJava / howToInstallJavaCryptographyExtensions.txt]


         4. Install Maven 3.3.9
            NOTE:  Maven 3.3.9 requires Java 1.7 or later

            a. Download Maven apache-maven-3.3.1-bin.zip
               1) Go to https://maven.apache.org/download.cgi
               2) Look for apache-maven-3.3.9-bin.tar.gz
                  *OR*
                  Go to http://mirror.olnevhost.net/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz

               3) Save apache-maven-3.3.9-bin.tar.gz to your Downloads


            b. Install Maven to your /opt
               unix> cd /opt
               unix> sudo mv ~/Downloads/apache-maven-3.3.9-bin.tar.gz  .
               unix> sudo tar zxvf apache-maven-3.3.9-bin.tar.gz
               unix> sudo rm apache-maven-3.3.9-bin.tar.gz

            c. Change ownership of the /opt/apache-maven-3.3.9 to your regular account
               unix> sudo chown -R adam:adam /opt/apache-maven-3.3.9

            d. Update your /opt/apache-maven-3.3.9/conf/settings.xml with any special settings you need

            e. Adjust your .bashrc with M2_HOME and adding it your path
               unix> vi ~/.bashrc

               # Add these to the end of your .bashrc
               export MAVEN_OPTS=" -Xmx2048m "
               export M2_HOME=/opt/apache-maven-3.3.9
               export PATH=${M2_HOME}/bin:${PATH}

            f. Verify that maven works
               1) Open a new terminal (by pressing Ctrl-T)
               2) unix> mvn -version

               Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T11:41:47-05:00)
               Maven home: /opt/apache-maven-3.3.9
               Java version: 1.7.0_55, vendor: Oracle Corporation
               Java home: /usr/java/jdk1.7.0_55/jre
               Default locale: en_US, platform encoding: UTF-8
               OS name: "linux", version: "2.6.32-573.18.1.el6.x86_64", arch: "amd64", family: "unix"

            g. Get your maven effective settings
               unix> mvn help:effective-settings

               Your downloads should work

               You should see this:
               [INFO] ------------------------------------------------------------------------
               [INFO] BUILD SUCCESS
               [INFO] ------------------------------------------------------------------------
               [INFO] Total time: 03:45 min
               [INFO] Finished at: 2016-02-23T14:02:56-05:00
               [INFO] Final Memory: 14M/119M
               [INFO] ------------------------------------------------------------------------


         5. Download & Install Intellij Ultimate Edition (for Linux)
            NOTE:  Download the version that does *NOT* come with a Java JDK

            a. Download IntelliJ Ultimate Edition for Linux
               1) Go to https://www.jetbrains.com/idea/download
               2) Select Linux
               3) Click .Tar.gz and select Linux, without JDK
               4) Click "Download" under Community
               5) Save ideaIC-2016.1.3.tar.gz to your "Downloads" directory

            b. Install IntelliJ
               1) Install Intellij to your /opt
                  unix> cd /opt
                  unix> sudo mv ~/Downloads/ideaIC-2016.1.3.tar.gz .
                  unix> sudo tar zxvf ideaIC-2016.1.3.tar.gz
                  unix> sudo rm ideaIC-2016.1.3.tar.gz

               2) Change ownership of the /opt/apache-maven-3.3.9 to your regular account
                  unix> sudo chown -R adam:adam /opt/ideaIC-2016.1.3

               3) Add the intellij/bin to your PATH
                  unix> vi ~/.bashrc

                  export IDEA_HOME=/opt/idea-IC-145.1617.8
                  export PATH=${PATH}:${IDEA_HOME}/bin

               4) Startup Intellij for the first time
                  NOTE:  Doing this should result in a launcher being added to the Applications -> Programmer menu
                  a) Open a new terminal by pressing Ctrl-T
                  b) unix> idea.sh

               5) You will be prompted if you want to import settings
                  Click "Do not import settings" and press OK

               6) In the privacy policy agreenment, click "Accept"
               7) In the Set UI theme, go with defaults and press "Next Desktop Entry"
               8) In the "Create Desktop Entry" page, use defaults and press "Next: Launcher Script"
               8) In the "Create Launcher Script", click "Create a script for opening files" and press "Next: Default Plugins"
               9) In the "Download featured plugins", click "Skip Remaining and Set Defaults"
              10) Close Intellij

            c. Add a shortcut to the top panel
               1) In the Application Menus, click on Programming
               2) Right-click on Intellij IDEA -> Add this launcher to panel


         6. Compile & Install the latest version of git
            NOTE:  The version of git in the Yum repositories can be quite old

            # Install development tools
            unix> sudo yum groupinstall "Development Tools"
            unix> sudo yum install zlib-devel perl-ExtUtils-MakeMaker asciidoc xmlto openssl-devel

            # Install curl-devel (so that git can clone https calls)
            unix> sudo yum install curl-devel

            # Download the git 2.14.1 release
            unix> cd /opt
            unix> sudo wget -O git.zip https://github.com/git/git/archive/v2.14.1.zip
                  *OR*
                  Go to https://github.com/git/git/releases
                  Click on the latest release zip
                  Save the file to /opt/giz.zip

            # Compile & Install Git
            unix> sudo -s
            unix> cd /opt
            unix> unzip git.zip
            unix> rm git.zip
            unix> cd git-2.14.1/
            unix> make configure
            unix> ./configure --prefix=/usr/local
            unix> make all doc

                  W A I T    1 0   M I N U T E S

            unix> make install install-doc
            unix> exit

            # Verify that the Git version is now updated
            unix> git --version
            git version 2.14.1

            # Update Intellij and tell it where the latest git version is
            1) Get the path of your new git
               unix> which git
               /usr/local/bin/git

            2) Configure Intellij to use your new version of Git
               a) Startup intellij
                  unix> idea.sh

               b) If a previous project appears, then close it
               c) On the Intellij welcome screen,
                  Pull Configure -> Settings
               d) Search for git
               e) Click on Version Control -> Git
               f) Path to Git Executable to be:   /usr/local/bin/git
               g) Press the "Test" button
                 -- It should show "Git executed successfully...Git version is 2.14.1"
               h) Press OK
               i) Press OK
               j) Close IntelliJ


         7. Install the telnet command
            NOTE:  This will not install the telnet service -- only the telnet client
            unix> sudo yum install telnet


         8. Increase the maximum number of open files from 1024 to 65535
            Increase the number of inotify user watches from 8192 to 524288
            a. Show max open files
               unix> sudo -s
               unix> ulimit -a | grep 'open file'
                     open files      (-n) 1024

            b. Increase the max number of open files to 65536
               unix> vi /etc/sysctl.conf

                 # Increase max number of open files
                 fs.file-max = 65536


               unix> vi /etc/security/limits.conf

                 # Increase max number of open files
                 *          soft     nproc          65535
                 *          hard     nproc          65535
                 *          soft     nofile         65535
                 *          hard     nofile         65535

           c. Increase the number of user watches by editing this file:
              unix> vi /etc/sysctl.conf

                 # Increase the number of user watches
                 fs.inotify.max_user_watches=524288

           d. Save the changes
              unix> sysctl --system
              unix> sysctl -p

           e. Reboot the operating system
              unix> reboot

           f. Verify the limit is greater by running ulimit again
              unix> sudo -s
              unix> ulimit -a | grep 'open file'
              -- You should see 65535

           g. Verify the number of user watches increased
              unix> cat /proc/sys/fs/inotify/max_user_watches
              -- You should see 524288


         9. Update Everything
            a. Run Yum Update
               unix> sudo yum update
                     Press Y <Enter>

                  W A I T     1 0     M I N U T E S

            b. Reboot
               unix> sudo reboot


            NOTE:  If the systemd-udev-settle service takes 2 minutes (or lonager) on startup, then run these commands to fix it:
                   unix> sudo systemctl mask systemd-udev-settle
                   unix> sudo reboot


        10. **IMPORTANT** Add an entry to your /etc/hosts
             NOTE:  This is important to run Accumulo or HDFS locally

             For example:  If your hostname is "myCentos", then add this entry to your /etc/hosts
             unix> sudo vi /etc/hosts
                     127.0.0.1    myCentos



        11. Install Chrome
            [see learnCentos / howToInstallChromeOnCentos7.txt]

        12. Install a local HDFS and Accumulo (using the Accumulo Quick-Install)
            [see learnAccumulo / howToSetupAccumuloQuickInstall.txt]

        13. Install Postgres 9.6 Database
            [see learnPostgreSQL / howToInstallPostgresOnCentos7.txt]

        14. If you have an NVIDIA Graphics Card, then install the NVIDIA Graphics Card Driver
            [see learnCentos / howToInstallNvidiaGraphicsDriverForCentos7.txt]

        15. Install a more recent version of Firefox that automatically updates
            [see learnCentos / howToInstallFirefoxAutoUpdate.txt]

        16. Change the Firefox scrolling speed
            [see learnFirefox / howToChangeScrollingSpeed.txt]

        17. Install my favorite calculator app
            [see learnCentos /  howToInstallGalculator.txt]

        18. Install flash player for Firefox
            [see learnCentos /  howToInstallFlashPlayer.txt]

        19. Install Firefox multi-media libraries (so you can play MP4 videos in firefox)
            [see learnCentos / howToInstallMp4DecoderForFirefox.txt]

        20. Hide user info from the login screen
            [see learnCentos / howToHideUsersFromLoginScreen.txt]

        21. Install an Antivirus Package
            (a) Install Macafee (costs money)   [see learnCentos / howToInstallAntiVirus_Macafee.txt]
            (b) Install Sophos  (free)          [see learnCentos / howToInstallAntiVirus_Sophos.txt]

        22. Install Print-to-PDF capability
            [see learnCentos / howToPrintToPDF.txt]

        23. Update LibreOffice to the latest version
            [see learnCentos / howToInstallLibreOffice.txt

        24. Install Card Reader driver
            [see learnCentos / howToSetupCardReader_IOGear_gsr202.txt]

        25. Install Cisco VPN Client
            [see learnCentos / howToInstallCiscoVpnClient.txt]

        26. Disable unneeded services
            a. Disable the ModemManager service
               unix> systemctl  | grep -i modem            # Check to see if it's running
               unix> sudo systemctl stop ModemManager      # Stop the service
               unix> sudo systemctl disable ModemManager   # Disable the service

        27. Install Node & NPM
            [see learnNode / howToInstallNodeOnCentos7.txt

        28. Install Printer Driver
            [see learnCentos / howToSetupPrintingToKonicaMinolta.txt]
            NOTE:  These procedures will work with most printers

        29. Install Acrobat Reader 9
            [see learnCentos / howToInstallAcrobatReaderOnCentos7]

        30. If using an SSD, startup the fstrim.timer service
            unix> sudo systemctl enable fstrim.timer   # Enable the service so it turns on when botting up
            unix> sudo systemctl start fstrim.timer    # Start the service




        
     
Part 2: Configure your CentOS VM so that it can connect to the Internet
-----------------------------------------------------------------------
 1. Shutdown your CentOS VM
    a. Pull System -> Shutdown....
    b. Press Shutdown
 
 2. In your Windows box, open the "Network Connections"
    a. Press <Start> Search for Network Connections
    b. Click on "View Network Connections"
    c. Single-click on "VirtualBox Host-Only Network"
       Right-click on "VirtualBox Host-Only Network" -> Disable

 3. Startup your CentOS VM
    a. In the VirtualBox Manager, right-click on CentOS 6 -> Start -> Normal Start

 4. In your CentOS VM, open a terminal by 
    a. Open a terminal  (right-click on the desktop -> Open in Terminal)
       unix> nm-connection-editor
    
    b. In the "Network Connections" popup
       a) Single-click on "System etho" and press Edit
       b) In the "Editing System etho0 popup, 
          Check the checkbox next to "Connect automatically"
       c) Press Apply

 4. Verify that your CentOS VM can connect to the internet
    a. Open a terminal  (right-click on the desktop -> Open in Terminal)
    b. unix> ping www.google.com
       
       You should get a response

 5. Add your hostname to the /etc/hosts file
    NOTE:  This is needed for hadoop jobs
    a. unix> su -
       unix> vi /etc/hosts
    
       # Add this line to /etc/hosts
       127.0.0.1  centosVm

   b. Verify it works
      unix> ping centosVm
      
      You should get this response:
        PING localhost (127.0.0.1) 56(84) bytes of data.
        64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.020 ms
        64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.052 ms




Part 4: Install VirtualBox Guest Options
----------------------------------------
 1. Install kernel-development package  (needed to run VirtualBox Guest Options)
    a. Turn off the screen update (as it might intefere with the long yum update)
       1) Login to CentOS VM
       2) Pull System / Preferences / Screensaver
          -- Uncheck "Activate screensaver when computer is idle"
          -- Press Close
    
    b. Open a terminal  (right-click on the desktop -> Open in Terminal)
       unix> sudo yum update
        
             "Is this OK?"  Y and press <enter>
             "Is this OK?"  Y and press <enter>
             
             #   W A I T     3 0    M I N U T E S    (There are hundreds of packages to download and update)

             WARNING:  Do not let your screen lock kick in -- as it might intefere with the yum update
             
    c. Install the kernel-development and gcc tools
       unix> sudo yum install kernel-devel gcc
   
    d. Get the path of where your kernel src is
       unix> ls /usr/src/kernels
   
    e. Set the KERN_DIR to be that path in your .bashrc
       unix> vi ~/.bashrc

          # Set the KERN_DIR so that virtualbox guest options can find it
          export KERN_DIR="/usr/src/kernels/`uname -r`"

          *OR*

          unix> ls -ld /usr/src/kernels
          Grab one of the kernel directory paths and set it to a hard-coded path
          export KERN_DIR="/usr/src/kernels/123.456.789"


    f. Verify that KERN_DIR is set
        1) Open a *new* terminal to pick-up the KERN_DIR changes in yuor ~/.bashrc
        2) Run this unix command
           unix> ls -d $KERN_DIR
           
           You should see this:
             /usr/src/kernels/2.6.32-573.18.1.el6.x86_64
    
    g. Restart your centOS VM
       Pull System / Shutdown -> Restart
       

 2. Install Guest Options
    a. Verify that you have the Guest Additions ISO
       NOTE: The Guest Options iso should be located here:
         C:\Program Files\Oracle\VirtualBox\VBoxGuestAdditions.iso
     
     If you do not see the iso image there, then 
       1) Download the Guest Options for Virtual Box 5.0.1.4
          Go to http://download.virtualbox.org/virtualbox/5.0.14/VBoxGuestAdditions_5.0.14.iso
       2) Save it to C:\Program Files\Oracle\VirtualBox\
  
    b. Power Up your CentOS VM
    
    c. Keep Pressing Right-Ctrl C  [until you see a menubar at top]
    
    d. You should see a menubar with
       File   Machine  View  Input Devices Help
      
    e. Load the Guest Image ISO
       Pull Devices / Insert Guest Image ISO
       NOTE:  You should see the CD appear on the desktop
   
    f. In your CentOS VM, you should see
       You have just inserted a medium with software intended to be automatically started
       Choose what application to launch
       -- Select "Open Autorun Prompt"
       -- press OK
      
    g. The medium contains software intendced to be automatically started.
       Would you like to run it?
       Press "Run"

       NOTE:  If you see FAILED next to "Building the OpenGL support module" 
              then ignore it.  The OpenGL module has a problem with CentOS 6.6

    h. Eject the Guest Image ISO from your optical drive
       Pull  Device -> Opitcal Drive -> Host Drive 'D:'
    
    i. Shutdown the centos VM
       Pull Sytem / Shutdown...
       Press "Shut Down"


 3. Enable copy+paste between host and guess OS
    NOTE: This will not work until Guest Options are installed
    
    a. Power Down your CentOS VM
    b. Run the Oracle VM VirtualBox Console
       1) Single-click on your CentOS6 VM [on the left]
       2) Press Settings
       3) Select General [on the left]
       4) Click on the "Advanced" tab
          Shared Clipboard:  Bidirectional
          press OK             
    
    c. Power Up your CentOS VM
       Right-click on CentOS 6 -> Start -> Normal Start
       
    d. Verify that you can copy+paste between your host OS (windows 7) and your VM
       In Windows, copy some text
       In the CentOS VM, attempt to paste it

 4. Enable a shared folder between c:\vault and /media/sf_vault
    a. Power Down your CentOS VM
       Pull System -> Shutdown...
       Press "Shut Down"
       
    b. Run the Oracle VM VirtualBox Console
       NOTE:  You want to setup the shared folders while the centOS vm is powered down
       1) Single-click on your CentOS6 VM [on the left]
       2) Press Settings
       3) Click on "Shared Folders" [on the left]
       4) Right-click on "Machine Folders" -> Add Shared Folder
       5) In the "Add Share"
          Folder Path:  c:\users\my_windows_account\vault
          Folder name:  vault
          Check Auto-mount
          Press OK
          Press OK

          WARNING:  Make sure your windows path is under c:\users\my_windows_account
          

    c. Power Up your CentOS VM
       Right-click on CentOS 6 -> Start -> Normal Start

    d. Verify that the shared folders are mounted
       unix> df -Ph
       
       Filesystem                       Size  Used Avail Use% Mounted on
       /dev/mapper/vg_centosvm-lv_root   35G  3.7G   30G  12% /
       tmpfs                            1.9G   84K  1.9G   1% /dev/shm
       /dev/sda1                        477M   64M  388M  15% /boot
       vault                            908G  773G  135G  86% /media/sf_vault     # This is the shared folder!!

    e. Add your unix account to the "vboxsf" unix group (so you can access the shared directory)
       unix> sudo -s
       unix> usermod -aG vboxsf <my unix account name>

    f. Reboot the VM
       Pull System -> Shutdown...
       Press "Restart"

    g. Verify that it works
       a) click on the sf_vault shortcut on your desktop   
          -- Now, the link to sf_vault share should work
       
       b) You should be able to run this command:
          unix> ls /media/sf_vault




 CentOS Package Descriptions
 ---------------------------
  A) Desktop: base, core, debugging, directory-client, java-platform, network-file-system-client, server-platform, fonts, print-client, basic-desktop, desktop-debugging, desktop-platform, general-desktop, graphical-admin-tools, input-methods, legacy-x, x11, internet-applications, internet-browser, office-suite, remote-desktop-clients

  B) Minimal Desktop: base, core, debugging, directory-client, java-platform, network-file-system-client, server-platform, fonts, print-client, basic-desktop, desktop-debugging, desktop-platform, input-methods, legacy-x, x11, internet-browser, remote-desktop-clients

  C) Minimal: core

  D) Basic Server: base, console-internet, core, debugging, directory-client, hardware-monitoring, java-platform, large-systems, network-file-system-client, performance, perl-runtime, server-platform

  E) Database Server: base, console-internet, core, debugging, directory-client, hardware-monitoring, java-platform, large-systems, network-file-system-client, performance, perl-runtime, server-platform, mysql-client, mysql, postgresql-client, postgresql, system-admin-tools

  F) Web Server: base, console-internet, core, debugging, directory-client, java-platform, network-file-system-client, performance, perl-runtime, server-platform, web-server, web-servlet, php, turbogears, mysql-client, postgresql-client

  G) Virtual Host: base, console-internet, core, debugging, directory-client, hardware-monitoring, java-platform, large-systems, network-file-system-client, performance, perl-runtime, server-platform, virtualization, virtualization-client, virtualization-platform

  H) Software Development Workstation: base, core, debugging, directory-client, java-platform, network-file-system-client, performance, perl-runtime, server-platform, fonts, print-client, basic-desktop, desktop-debugging, desktop-platform, general-desktop, graphical-admin-tools, input-methods, legacy-x, x11, internet-browser, graphics, emacs, tex, remote-desktop-clients, virtualization, virtualization-client, virtualization-platform, desktop-platform-devel, development, eclipse, server-platform-devel, technical-writing, additional-devel        
