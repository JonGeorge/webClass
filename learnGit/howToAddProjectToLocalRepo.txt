How to Add an Existing Project to a Local Repo
----------------------------------------------

Assumptions:
 A) You have git installed
 B) You have a project called "app1"
 C) You want to setup a local git repo


Procedure
---------
 1. Cd to the top of your project
    unix> cd ~/intellijProjects/app1

 2. Delete any compiled code
    unix> mvn clean

 3. Create a .gitignore file (to tell Git to ignore certain files -- node_modules, .jar files, .idea files
    unix> vi .gitignore

################################################################
# Filename:  .gitignore
# Tells Git which files/directories to ignore
#
#
# WARNING: There should be no loading spaces
################################################################

# node modules
webapp/src/main/resources/public/resources/node_modules/

# Ignore the target/ directory
target/

# User-specific stuff:
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/dictionaries

# Sensitive or high-churn files:
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.xml
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml

# Gradle:
.idea/**/gradle.xml
.idea/**/libraries

# Mongo Explorer plugin:
.idea/**/mongoSettings.xml

.idea/
*.iml

## File-based project format:
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties
### macOS template
*.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk
### Java template
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*


 4. Remove any previous .git repository
    unix> rm -rf .git

 5. Initialize a local git repository for your project
    unix> git init
    -- This will create a hidden .git/ directory with all of the git information

 6. Add your files to your local git repository
    unix> git add .

 7. Commit your files to your local git repo  (by default your branch is called master)
    unix> git commit -a -m "Initial Commit"

 8. Verify that you can see the history
    unix> git log
    -- You should see "Initial Commit"


