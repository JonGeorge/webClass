How to setup source control with GIT and Connect to an Existing Repository
--------------------------------------------------------------------------


ASSUMPTIONS:
 a) You want to connect to an existing repository on github.com
 b) Your existing repository is called webClass
 b) You are running Windows 7
 
 
Procedures
----------
1) Install GIT graphical and command-line tools
   a) Download GIT for windows
		1) Go to https://windows.github.com/
		2) Click the box that says "Download GitHub for Windows"
			-- This will download GitHubSetup.exe
		
    b) Install Git for windows
		1) Run GitHubSetup.exe
		2) On the first screen, it will ask you if you want to install this application
			Click "Install"
		   
		   Next, the installer will download about 50 megabytes of stuff
		   Grab some coffee....
		   
		3) On the "Welcome" screen
		   Enter your github username:  traderres
		   Enter your github password:  
		   Press Login
		   
		4) In the "Congfigure" screen
		   press "Skip"
		   
		  
		
		
		
		
2) Clone the "webClass" repository so that there is a local copy on your computer
	a) Create this directory:  c:\tools\local-git-repo\
	b) Run the GitHub program
	c) Press the "+" symbol on the left
	
	d) Click "Clone" on the top
	   Select webClass
	   Press "Clone Repository"
	   
	d) In the "Browser for Folder" popup
	   Select directory where to clone it to:
	      c:\tools\local-git-repo\
          press OK
	 
	 Now, you should have this directory:
	   c:\tools\local-git-repo\webClass

	e) Close-out the github tool by pressing the "X" in the upper right corner


	
	At this point, you have a remote repository (on github.com) and a local repository in your c:\tools\local-git-repo\webClass\
	


3) Tell the Git Shell command-line where that your local git repo is c:\tools\local-git-repo\webClass\
   NOTE:  This is handy so that the Git Shell always opens in the right place
    a) Run the GitHub program
    b) Click the settings button [on the right] and select Options
    c) Next to Clone path press the "Browse" button
    d) Browse to here:  c:\tools\local-git-repo\webClass
    e) Press "Save"
    f) Run the "Git Shell" program
       -- Now, you are setup in the right directory
       
       
    	
4) Tell Eclipse about your local git repository (located in c:\tools\local-git-repo\webClass\ )
	a) Run Eclpse
	b) Pull Window / Show View / Git / Git Repositories
		a) Press the 'Add an existing local Git Repository to this view' button
		   
		b) In the Search and Select Git repositories
			Directory:  C:\tools\local-git-repo
		   	Select C:\tools\local-git-repo\webClass\.git directory
			press "Finish"

		Now, you should see webClass [master] in the Git Repositories window
		
		

5) Tell Eclipse to add your webClass project that this web project will use your git local repository
	a) Run Eclipse
	b) Right-click on mywebapp1 -> Team -> Share Project....
	c) In the "Share Project" screen
		Select Git
		Press "Next"
		
	d) In the "Configure Git Repository"
		Repository:         Select "mywebapp1 - c:\tools\local-git-repo\webClass\.git"
		Working Directory:  C:\tools\local-git-repo\webClass
		Press "Finish"
			
		
		

		
		
		
		
		


How to use the "Git Shell" Command-line tool
--------------------------------------------
1) In Windows, press <Start><Run> Git Shell    [there should be a shortcut on your desktop]
2) In the Git Shell  [which looks like a DOS shell], cd to your local-git-repo\<your project name>
   GIT Shell> cd C:\tools\local-git-repo\webClass

3) Now, you can use the git command-line for this GIT project
   GIT Shell> git status
   On branch master
   Your branch is up-to-date with 'origin/master'.

   GIT Shell> git push
   Everything up-to-date
   
   
NOTE:  After installing GIT, you should have a shortcut that says "Git Shell"
 
 

 
How to check-in code (but a user has made a change ahead of you)
----------------------------------------------------------------
Here's the scanerio:
 1) In your local environment, you have updated to the HEAD
 2) Someone else makes a change and checks-in that change
     --> At this point, your local environment is *NOT* up to date
     
 3) You make a change
 4) You check-in your code change
     --> Your check-in is *REJECTED*
     
     --> You get the rejected - non-fast-forward error
     

     
 SOLUTION:  You need to get the latest changes, do a merge, then push upstream
  1) Get the latest code
     Pull Team / Fetch from Upstream
        
  2) Merge your code with the latest
     Pull Team / Merge
        
  3) Push your changes upstream
     Pull Team / Push to Upstream

