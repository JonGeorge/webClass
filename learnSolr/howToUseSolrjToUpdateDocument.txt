How to Use the SolrJ client to Update a Document
------------------------------------------------

Assumptions:
 A) You have solr 4.10.4 installed
 B) You want to use Java to update a document within your solr instance
 

References
----------
http://stackoverflow.com/questions/11791803/update-a-new-field-to-existing-document
https://cwiki.apache.org/confluence/display/solr/Updating+Parts+of+Documents
https://lucene.apache.org/solr/4_10_4/
https://archive.apache.org/dist/lucene/solr/ref-guide/apache-solr-ref-guide-4.10.pdf




To update filed within document in Solr you have to reindex whole document (to update Field3 within document ID:99999 you have to reindex that document with values for all fields)
In Solr 4 they implemented feature like that, but they have a condition: all fields have to be stored, not just indexed. What is happening is that they are using stored values and reindexing document in the background. If you are interested, there is nice article about it: http://solr.pl/en/2012/07/09/solr-4-0-partial-documents-update/ This solution have obvious flaw and that is size of index when you are storing all fields.


INCOMPLETE

Notes about Atomic Updates
--------------------------
The core functionality of atomically updating a document
requires that all fields in your schema must be configured as stored="true" 
except for fields which are <copyField/> destinations -- which must be configured as stored="false". 
 
 Atomic updates are applied to the document represented by the existing stored field values.  
 If  <copyField/> destinations are configured as stored, 
    then Solr will attempt to index both the current value of the field as well as an additional copy from any source fields.


Modifier
--------
add          Adds the specified values to a multivalued field.
inc          Increments a numeric value by a specific amount.
remove	     Removes (all occurrences of) the specified values from a multivalued field.
removeregex	 Removes all occurrences of the specified regex from a multiValued field.
set          Set or replace the field value(s) with the specified value(s), or remove the values if 'null' or empty list is specified as the new value.



Procedure
---------
 1. Create a Java command line program
    [see learnSpringBeans / howToUseSpringInCommandLineProgram.txt]
    NOTE:  Name the app springAppSolr
    
 
 2. Add this maven dependency:
         
       <dependency>
           <groupId>org.apache.solr</groupId>
           <artifactId>solr-solrj</artifactId>
           <version>4.10.4</version>
           <type>jar</type>
       </dependency>
        
 
 3. Add this code to your class
 
        // Connect to a single-node solr instance
        String urlString = "http://localhost:8983/solr/collection1";
        HttpSolrServer solrServer = new HttpSolrServer(urlString);

   
   
        // Update the document in solr
        
        

        // Commit the document
        solrServer.commit();



