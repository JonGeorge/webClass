How to Run an AJAX call that returns JSON (using jQuery)
--------------------------------------------------------
If you have an AJAX call and you just want to return JSON, here's how to do it:


INCOMPLETE


Overall Steps
-------------
 A) Setup a controller call that returns JSON
 B) Adjust your JSP or HTML file to make an AJAX call and show the results
 
 
Procedures
----------
 1. Add these Jackson dependencies  (for Spring 4)

        <!-- Spring 4 Jackson Dependencies -->
        <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>2.3.3</version>
            </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.3.3</version>
        </dependency>
        
        
        
 2. Add a controller call that will return an object

    @RequestMapping(value = "/welcome.json", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE, 
                                             headers = {"Accept=text/xml, application/json"})
    public @ResponseBody UserInfo getUserById() 
    {
        UserInfo userInfo = new UserInfo();
        userInfo.setUserName("Adam");
        userInfo.setIsAdministrator(true);
        
        return userInfo;
    }
    
    
 3. Verify that your ajax call returns JSON
    -- Open a browser
    -- Go to http://localhost:8080/webapp/welcome.json
    -- You should see JSON
   
 
 4. Make your AJAX call from the JSP page
    -- Edit sampleAjax.jsp, and add this:
   
    
   
    $.ajax({
         type: 'GET',
         cache: false,
         url: '/welcome.json',
         data: ''
         success: function(msg) 
         {
            // I got some results back
            alert("This has been a success ajax call: " + msg);
         },
         error: function (xhr, ajaxOptions, thrownError) 
         {
            alert("There has been an error:" + thrownError);
         }
         });
        