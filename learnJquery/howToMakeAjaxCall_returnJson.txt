How to Run an AJAX call that returns JSON (using jQuery)
--------------------------------------------------------
If you have an AJAX call and you just want to return JSON, here's how to do it:


Assumptions:
 A) You want to use jquery to make a web service call
 B) Your web app is running the Spring-MVC framework
 C) Your webapp is called 'springMvcWebApp1'
 

Overall Steps
-------------
 A) Setup a controller call that returns JSON
 B) Adjust your JSP to make an AJAX call and show the results
 C) Use the HttpRequestor Firefox plugin to verify your ajax call
 D) Verify that your AJAX call works from the web page
 
 
 
Procedures
----------
 1. Add these Jackson dependencies  (for Spring 4)

        <!-- Spring 4 Jackson Dependencies -->
        <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>2.3.3</version>
            </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.3.3</version>
        </dependency>
        
        
        
 2. Add a back-end call that will return an object


    @RequestMapping(value = "/userInfo/{userid}", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE,
                   headers = {"Accept=text/xml, application/json"})
    public @ResponseBody
    UserInfo getUserById(@PathVariable(value="userid") final String aUserid)
    {
        logger.debug("Calling getUserById()  aUserid={}", aUserid);

        UserInfo userInfo = new UserInfo();
        userInfo.setUserName("Adam");
        userInfo.setIsAdministrator(true);

        return userInfo;
    }
    


    
 3. Verify that your ajax call returns valid JSON using HttpRequestor
    a. Download and Install the "HttpRequestor" plugin for Firefox
       1) Open Firefox
       2) Go to https://addons.mozilla.org/en-Us/firefox/addon/httprequester/
       3) Press "Add to Firefox"
       4) Press "Install Now"
       5) Restart Firefox
       
    b. Use the HttpRequestor to simulate the ajax call 
       1) Open Firefox
       2) Pull Tools / HttpRequestor
       3) Enter these fields
          URL:  http://localhost:8080/springMvcWebApp1/userInfo/15
          
          Click on the "Headers" tab
          
          Add to headers:
             Name:   Accept 
             Value:  application/json
             Press   "Add"
             
             Name:   Content-Type
             Value:  application/json
             Press "Add"   
             
           Press the "GET" button
           
          
          
          In the Respose window [on the right], you should see this:
            Status:  200 OK
            {"isAdministrator":true,"userName":"Adam"}
                
                
 
 
 4. Edit your sample.jsp to make the ajax call

   
        <%@ include file="/WEB-INF/jsp/stdJspIncludes.jsp" %>
        
        <!DOCTYPE HTML>
        
        <html xmlns="http://www.w3.org/1999/xhtml">
        
        <head>
            <title>sample.jsp</title>
        
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
            <!-- Load Bootstrap CSS -->
            <link href="${contextPath}/resources/bootstrap-3.3.4/css/bootstrap.min.css" rel="stylesheet" media="screen">
        
            <!-- Load Bootstrap CSS Themes -->
            <link href="${contextPath}/resources/bootstrap-3.3.4/css/bootstrap-theme.min.css" rel="stylesheet" media="screen">
        
            <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
            <!--[if lt IE 9]>
              <script src="${contextPath}/resources/bootstrap-3.3.4/assets/html5shiv.js"></script>
              <script src="${contextPath}/resources/bootstrap-3.3.4/assets/respond.min.js"></script>
            <![endif]-->
        </head>
        
        
        
         <body>
             <%-- S T A N D A R D       H E A D E R  --%>
             <%@ include file="/WEB-INF/jsp/stdHeader.jsp" %>
        
             <h2>sample.jsp</h2>
        
             <br/>
             <br/>
             <p style="border: 1px solid black" onclick="getUserInfo(15)">Click to run getUserInfo() ajax call</p>
             <br/>
             <br/>
        
        
             Hello ${userInfo.userName} <br/>
             Are you an administrator: ${userInfo.isAdministrator }
        
             <br/>
             <br/>
        
             <%-- S T A N D A R D       F O O T E R  --%>
             <%@ include file="/WEB-INF/jsp/stdFooter.jsp" %>
        
        
            <%-- Load jQuery (necessary for Bootstrap's JavaScript plugins) --%>
            <script src="${contextPath}/resources/jquery/jquery-1.11.3.min.js"></script>
        
            <%-- Include all compiled plugins (below), or include individual files as needed --%>
            <script src="${contextPath}/resources/bootstrap-3.3.4/js/bootstrap.min.js"></script>
        
        
        
            <script type="text/javascript">
        
               var gsContextPath = '${contextPath}';
        
        
                /*****************************************************************
                 * getUserInfo()
                 *  1) Make an ajax call   
                 *  2) Get a UserInfo object back as json
                 *  3) Display some of the info in an alert box    
                 *****************************************************************/
                function getUserInfo(aUserid)
                {
                     var sUrl = gsContextPath + '/userInfo/' + aUserid;
        
                      $.ajax({
                             type: 'GET',
                             cache: false,
                             url:   sUrl,
                             data: '',
                             headers:
                                 {
                                      "Content-Type": "application/json",
                                      "Accept":       "application/json"
                                  },
                             success: function(aData, aTextStatus, aXhr)
                             {
                                var user = aData;
        
                                // I got  some results back
                                alert("Ajax call succeeded:   user.userName=" + user.userName + "  user.isAdministrator=" + user.isAdministrator);
                             },
                             error: function(aXhr, aTextStatus, aErrorThrown)
                             {
                                alert("Ajax call failed:  " + aErrorThrown);
                             }
                          });
        
        
                };
        
            </script>
         </body>
        </html>


 5. Test your AJAX call
    a. In a dos window, type-in this:
       DOS> cd /d c:\tools\intellij\workspace\springMvcWebApp1
       DOS> mvn jetty:run
       
    b. Open Firefox and go to http://localhost:8080/springMvcWebApp1/sample
    c. In the web page click on the "Click to run getUserInfo() ajax call"
    d. You should see an alert popup with information about your ajax call
    
    