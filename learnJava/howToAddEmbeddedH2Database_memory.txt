How to Add In-Memory H2 Database to Your Project (without Spring)
----------------------------------------------------------------
Problem:   I am not using Spring but I want to use the embedded H2 Database
Solution:  Use org.springframework.jdbc.datasource.embedded.EmbeddedDatabase


Create an in-memory database (but you cannot connect to it from IntelliJ or any other db console)
---------------------------------------------------------------------------------------------------
 1. Add the maven dependencies

       <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>1.4.200</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>5.2.12.RELEASE</version>/artifactId>
      </dependency>


 2. Create this class:  InMemoryDatabase
        package com.lessons;

		import org.springframework.jdbc.datasource.embedded.EmbeddedDatabase;
		import org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder;
		import org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType;

		import javax.sql.DataSource;


		public class InMemoryDatabase {

			private DataSource dataSource;

			/**
			 * Create and start-up the H2 database
			 */
			public InMemoryDatabase() {
				EmbeddedDatabaseBuilder builder = new EmbeddedDatabaseBuilder();

				// Create and startup an embedded h2 database
				// NOTE:  EmbeddedDatabase extends the DataSource class (so we can use it to execute SLQ)
				EmbeddedDatabase embeddedDatabase = builder
								.generateUniqueName(true)
								.setType(EmbeddedDatabaseType.H2)
								.setScriptEncoding("UTF-8")
								.addScript("db/schema.sql")      // Load the script found in /src/main/resources/db/schema.sql
								.build();

				this.dataSource = embeddedDatabase;
			}


			public DataSource getDataSource() {
				return this.dataSource;
			}
		}



 3. Add this file:  src/main/resources/db/schema.sql
 
		CREATE TABLE reports(
		   ID INT,
		  NAME VARCHAR,
		  LAST_MOD TIMESTAMP WITH TIME ZONE AS CURRENT_TIMESTAMP
		);

 
 4. Use the class to run SQL
 
        // Create and startup the embedded h2 Database
        InMemoryDatabase inMemoryDatabase = new InMemoryDatabase();
        DataSource ds = inMemoryDatabase.getDataSource();
        
		
		JdbcTemplate jt = new JdbcTemplate(ds);
		
		// Insert a record into the embedded table
        String sql = "insert into reports(id, name) values(1, 'stuff')";
        int rowsAdded = jt.update(sql);
        logger.debug("rowsAdded={}", rowsAdded);

        // Get the total number of records in this table
        sql = "select count(*) from reports";
        Integer tableCount = jt.queryForObject(sql, Integer.class);
        logger.debug("tableCount={}", tableCount);
        
