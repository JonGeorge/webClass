How to Manipulate Java Collections
----------------------------------


How to loop through ArrayList
-----------------------------
  ArrayList<String> userList = new ArrayList<String>();
  userList.add("Adam");
  userList.add("Ben");
  userList.add("Peter");  
  userList.add("Justin");  

  // Approach #1:  Loop through this array list
  // NOTE:  a null userList will throw a runtime exception
  for (String sUser:  userList)
  {
     logger.debug("User's name is {}", sUser);
  }

  // Approach #:2  Loop through this array list
  for (int i = 0; i < userList.size(); i++)
  {
      String sUser = userList.get(i);
      logger.debug("User's name is {}", sUser);
  }

WARNING:  ArrayLists can hold *NULL* objects inside them 




How to loop through Collection
------------------------------



How to loop through a HashMap
-----------------------------




How to convert flexible java list into a fixed array
----------------------------------------------------
  ArrayList<String> myJavaList = new ArrayList<String>();
  myJavaList.add("stuff");
  myJavaList.add("whatever");
  
  // Convert flexible java list into fixed array
  String[] stringArray = new String[ myJavaList.size() ];
  stringArray = myJavaList.toArray(stringArray);
  
  
  
How to convert fixed array into flexible Java list
--------------------------------------------------
  String stuff="abc,def,ghi";
  String[] myArray = stuff.split(",");
  ArrayList<String> myJavaList = new ArrayList<String>();
  myJavaList.addAll(Arrays.asList(myArray));
   
  *or*
   
  String stuff="abc,def,ghi";
  String[] myArray = stuff.split(",");
  ArrayList<String> myJavaList = new ArrayList<String>(Arrays.asList(myArray) );
   
   
