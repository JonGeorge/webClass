How to Read a File into a String using IO-Utils
-----------------------------------------------

References
----------
https://commons.apache.org/proper/commons-io/description.html



Procedure
---------
 1. Add a dependency for commons-io
 
        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>



 2. Place the text file you want your test class to use in /src/test/resources/newFile.txt
    Create this file:  /src/test/resources/newFile.txt
    
    Copy this to your file:
       This is the newFile.txt
       This is line #2
       This is line #3
       
       
 
 3. Add this test class called BogusTest
    a) Create this file:  /src/test/java/BogusTest.java
    
    b) Copy this to your BogusTest.java

        import org.apache.commons.io.FileUtils;
        import org.junit.Test;
        import org.slf4j.Logger;
        import org.slf4j.LoggerFactory;
        import java.io.File;

        /**
         * Created by adam on 12/8/2015.
         */
        public class BogusTest
        {
            private static final Logger logger = LoggerFactory.getLogger(BogusTest.class);
        
            @Test
            public void testSomething() throws Exception
            {
                logger.debug("testSomething() started");

                // Read the file into a string (using Commons-io library)
                File file = new File("/src/test/resources/newFile.txt");
                String fileContents = FileUtils.readFileToString(file, StandardCharsets.UTF_8);


                logger.debug("fileContents--->{}<---", fileContents);

                logger.debug("testSomething() finished.");
            }
        }


Another Approach:  Use the try-with-resources and Spring-core
-------------------------------------------------------------
        String fileContents = null;

        try (InputStream inputStream =  SyncService.class.getResourceAsStream("/" + aFilename)) {
            // Within this try-block the inputStream is opened.  Once I leave this block, the inputStream is closed
            flieContents = StreamUtils.copyToString(inputStream, StandardCharsets.UTF_8);
        }

