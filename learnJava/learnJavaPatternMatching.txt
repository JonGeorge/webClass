How to Match Patterns in a Class using Java
-------------------------------------------

Create your Pattern

// Create a pattern to match a white space, quote, or double quote
Pattern pat = Pattern.compile("[\\s\"\']");

String sString = "Has a \"quote\" in it";

Matcher m = pat.matcher(sString);

if (m.find())
{
  // This string has a white-space, quote, or double quote somewhere in it
}



NOTE:  Use m.matches() to match the pattern against the *ENTIRE* original string
       Use m.find() to match the pattern against any *PART* of the original string


Pattern.compile() has a 2nd argument which can be:
 a) Pattern.MULTILINE or (?m) tells Java to accept the anchors ^ and $ to match at the start and end of each line (otherwise they     only match at the start/end of the entire string).

 b) Pattern.DOTALL or (?s) tells Java to allow the dot to match newline characters, too.
 
 
Sample Pattern to Remove Leading and Trailing Quotes 
----------------------------------------------------
public class MyStringUtils
 {
   private static Pattern patRemoveLeadingTrailingQuotes = Pattern.compile("^\"(.$)\"$");


   public String removeLeadingAndTrailingQuotes(String aString)
    {
       Matcher m = patRemoveLeadingTrailingQuotes.matcher(aString);
       
       if (m.matches() )
       {
          return m.group(1);
       }
       else
       {
          return aString;
       }
    }
    
}

