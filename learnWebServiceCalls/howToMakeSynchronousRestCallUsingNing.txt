How to Make a Synchronous Web Service Call using Ning
-----------------------------------------------------                   
                     
               
Assumptions
 A) You want to use the ning package to make a synchronous web service call
                     
               
References
----------
http://stackoverflow.com/questions/18073849/get-json-object-from-a-http-response
https://github.com/AsyncHttpClient/async-http-client


 
Procedure
---------
 1. Add this dependency to your pom.xml
 
         <dependency>
            <groupId>com.ning</groupId>
            <artifactId>async-http-client</artifactId>
            <version>1.9.31</version>
        </dependency>

 
 
 2. Add this method to your projetc:
 
    import com.ning.http.client.AsyncHttpClient;
    import com.ning.http.client.Response;
    import java.util.concurrent.Future;
    
        
 
    private static String makeSynchronousWebServiceCallReturnJson() throws Exception
     {
        AsyncHttpClient asyncHttpClient = new AsyncHttpClient();
        String json = null;

        try
        {
            logger.debug("Making a synchronous web service call.");

            // Make a sync web service call
            // NOTE:  The .get() tells client to *wait* for a response
            Response response = asyncHttpClient.prepareGet("http://rest-service.guides.spring.io.BAD_SITE/greeting")
                    .setHeader("accept", "application/json")
                    .execute()
                    .get();
            
            json = response.getResponseBody();
        }
        catch (Exception e)
        {
            logger.error("Exception raised in makeSyncWebServiceCallReturnJson()", e);
            RuntimeException re = new RuntimeException(e);
            re.setStackTrace(e.getStackTrace());
            throw re;
        }
        finally
        {
            // Close the async http client
            asyncHttpClient.close();
        }

        return (json);
    }

