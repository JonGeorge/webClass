Lesson:  Setup an Angular UI Grid
---------------------------------
Add a page that has a grid in it (with bogus data)


Procedure
---------
 1. Use NPM to install the angular-ui-grid JavaScript dependencies (into the node_modules directory)
    unix> cd ~/intellijProjects/app1/webapp/src/main/resources/public/resources
    unix> npm install --save angular-ui-grid@4.6.0

 2. Adjust the app.html to include the new angular-ui-grid js files
    a. Open the app1 project in Intellij
    b. Edit the webapp/src/main/resources/public/app.html
    c. Add this to the Node Modules scripts:
            <script src="./resources/node_modules/angular-ui-grid/ui-grid.js"></script>
            <script src="./resources/node_modules/angular-ui-grid/ui-grid.exporter.js.js"></script>

    d. Add this to the CSS includes:
            <link rel="stylesheet" type="text/css" href="./resources/node_modules/angular-ui-grid/ui-grid.min.css">


    When done, the top of your app.html should look like this:

         <!-- Include CSS Files -->
         <link rel="stylesheet" type="text/css" href="./resources/node_modules/angular-resizable/angular-resizable.min.css">
         <link rel="stylesheet" type="text/css" href="./resources/node_modules/angular-material/angular-material.min.css">
         <link rel="stylesheet" type="text/css" href="./resources/node_modules/angular-ui-grid/ui-grid.min.css">
         <link rel="stylesheet" type="text/css" href="./resources/node_modules/@fortawesome/fontawesome-free/css/all.css">
         <link rel="stylesheet" type="text/css" href="./resources/css/index.css">

         <!-- Load All Node Modules JavaScript Dependencies -->
         <script src="./resources/node_modules/angular/angular.js"></script>
         <script src="./resources/node_modules/@uirouter/angularjs/release/angular-ui-router.min.js"></script>
         <script src="./resources/node_modules/angular-aria/angular-aria.min.js"></script>
         <script src="./resources/node_modules/angular-animate/angular-animate.min.js"></script>
         <script src="./resources/node_modules/angular-material/angular-material.min.js"></script>
         <script src="./resources/node_modules/angular-messages/angular-messages.min.js"></script>
         <script src="./resources/node_modules/angular-sanitize/angular-sanitize.min.js"></script>
         <script src="./resources/node_modules/angular-scroll/angular-scroll.min.js"></script>
         <script src="./resources/node_modules/angular-resizable/angular-resizable.min.js"></script>
         <script src="./resources/node_modules/@fortawesome/fontawesome-free/js/all.js"></script>
         <script src="./resources/node_modules/angular-ui-grid/ui-grid.js"></script>
         <script src="./resources/node_modules/angular-ui-grid/ui-grid.exporter.js"></script>

         <!-- Load all custom JavaScript Files -->
         <script src="./resources/config/app.js"></script>
         <script src="./resources/config/routes.js"></script>
         <script src="./resources/config/state.js"></script>
         <script src="./resources/config/nav.controller.js"></script>

         <!-- Load all JavaScript files for the various features -->
         <script src="./resources/modules/features.js"></script>
         <script src="./resources/features/reports/view_reports/main.controller.js"></script>
         <script src="./resources/features/reports/add_report/main.controller.js"></script>

 3. Add a ui-grid modules to the app.js
    a. Edit the webapp/src/main/resources/public/resources/config/app.js

    b. Add this to these modules to app1
         'ui.grid',
         'ui.grid.saveState',
         'ui.grid.autoResize',
         'ui.grid.selection',
         'ui.grid.pagination',
         'ui.grid.resizeColumns',
         'ui.grid.moveColumns',
         'ui.grid.exporter',
         'ui.grid.edit',
         'ui.grid.cellNav'

    When done, the top of your app.js should look like this:

         (function(){

             angular.module('app1', [
                 'app.routes',
                 'app.features',
                 'ngMessages',
                 'ngAnimate',
                 'ngMaterial',
                 'ngSanitize',         // Used for rendering html content in $mdDialog popups
                 'angularResizable',
                 'ui.router',
                 'ui.grid',
                 'ui.grid.saveState',
                 'ui.grid.autoResize',
                 'ui.grid.selection',
                 'ui.grid.pagination',
                 'ui.grid.resizeColumns',
                 'ui.grid.moveColumns',
                 'ui.grid.exporter',
                 'ui.grid.edit',
                 'ui.grid.cellNav'
             ])



 4. Add a grid to the "View Reports" page
    a. Edit the webapp/src/main/resources/public/resources/features/reports/view_reports/index.html

        <!-- UI GRID -->
        <div ui-grid="viewReportsVM.gridOptions" class="myGrid"></div>

    When done, your index.html (for view_reports) should look like this:

        <div class="feature">

            <header layout="row" layout-align="space-between center">
                <!-- Page Title -->
                <div class="md-headline"><i class="fas fa-file-alt"></i> View Reports</div>
            </header>

            <!-- Progress Bar -->
            <div class="progressBarWrapper">
                <md-progress-linear ng-show="viewReportsVM.dataIsLoading" md-mode="indeterminate"></md-progress-linear>
            </div>

            <!-- UI GRID -->
            <div ui-grid="viewReportsVM.gridOptions" class="myGrid"></div>

        </div>


 5. Configure the grid in the "View Reports" main.controller.js
    a. Edit the webapp/src/main/resources/public/resources/features/reports/view_reports/main.controller.js

    b. Change the onInit() method to this:

       viewReportsVM.$onInit = function() {
                console.log('viewReports onInit() started.');

                let gridOptions = { };

                // Initialize the grid with the data
                gridOptions.data = [
                    { id: 1, display_name: "rpt1.txt", priority: "low", "active": true},
                    { id: 2, display_name: "rpt2.txt", priority: "high", "active": true},
                    { id: 3, display_name: "rpt3.txt", priority: "high", "active": true}
                ];

                gridOptions.appScopeProvider = $scope;
                gridOptions.flatEntityAccess = true;
                gridOptions.enableFiltering = true;
                gridOptions.enableColumnResizing = true;
                gridOptions.enableGridMenu = true;
                gridOptions.paginationPageSize = 50;
                gridOptions.paginationPageSize = [25, 50, 100, 250];
                gridOptions.saveFocus = false;
                gridOptions.saveGrouping = false;
                gridOptions.savePinning = false;
                gridOptions.saveSelection = false;
                gridOptions.saveTreeView = false;
                gridOptions.multiSelect = true;
                gridOptions.exporterMenuPdf = false;
                gridOptions.exporterMenuExcel = false;
                gridOptions.exporterFieldApplyFilters = true;
                gridOptions.rowHeight = 45;
                gridOptions.enableSelectAll = true;
                gridOptions.enableSelectionBatchEvent = false;
                gridOptions.scope = $scope;

                gridOptions.onRegisterApi = function(gridApi) {
                    $scope.gridApi = gridApi;
                };


                viewReportsVM.gridOptions = gridOptions;

                console.log('viewReports onInit() finished.');
            };

    When done, your "View Reports" main.controller.js should look like this:


        (function(){
            angular.module('app.features')
                .controller('viewReports', ['$timeout', '$stateParams', '$scope', '$window', Callback])

            function Callback($timeout, $stateParams, $scope, $window) {
                console.log('viewReports controller started.');

                let viewReportsVM = this;


                window.document.title = "View Reports | APP1";

                viewReportsVM.$onInit = function() {
                    console.log('viewReports onInit() started.');

                    let gridOptions = { };

                    // Initialize the grid with the data
                    gridOptions.data = [
                        { id: 1, display_name: "rpt1.txt", priority: "low", "active": true},
                        { id: 2, display_name: "rpt2.txt", priority: "high", "active": true},
                        { id: 3, display_name: "rpt3.txt", priority: "high", "active": true}
                    ];

                    gridOptions.appScopeProvider = $scope;
                    gridOptions.flatEntityAccess = true;
                    gridOptions.enableFiltering = true;
                    gridOptions.enableColumnResizing = true;
                    gridOptions.enableGridMenu = true;
                    gridOptions.paginationPageSize = 50;
                    gridOptions.paginationPageSize = [25, 50, 100, 250];
                    gridOptions.saveFocus = false;
                    gridOptions.saveGrouping = false;
                    gridOptions.savePinning = false;
                    gridOptions.saveSelection = false;
                    gridOptions.saveTreeView = false;
                    gridOptions.multiSelect = true;
                    gridOptions.exporterMenuPdf = false;
                    gridOptions.exporterMenuExcel = false;
                    gridOptions.exporterFieldApplyFilters = true;
                    gridOptions.rowHeight = 45;
                    gridOptions.enableSelectAll = true;
                    gridOptions.enableSelectionBatchEvent = false;
                    gridOptions.scope = $scope;

                    gridOptions.onRegisterApi = function(gridApi) {
                        $scope.gridApi = gridApi;
                    };


                    viewReportsVM.gridOptions = gridOptions;

                    console.log('viewReports onInit() finished.');
                };


                console.log('viewReports controller finished.');
            }
        })();



 6. Verify it works
     a. Active your webapp with the debugger
     b. Open a browser
     c. Connect to http://localhost:8080/app1
     d. Go to "View Reports"
        -- You should see a grid

