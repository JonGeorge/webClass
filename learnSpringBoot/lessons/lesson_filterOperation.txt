Lesson:  Build a FilterOperation class to learn enumerated types
-----------------------------------------------------------------

Enumerated types are handy for
 1) Making constants that we know about at compile time
 2) Storing business rules that we know about at compile time
 3) Enumerated classes are singletons
 4) We can get the list of enumerated values using values()
 5) We can add helper methods



Java Class Code
---------------
package com.lessons.filter;

import org.springframework.util.StringUtils;

public enum FilterOperation {
    ISNULL          ("ISNULL", 0, "ISNULL"),
    ISNOTNULL       ("ISNOTNULL", 0, "IS NOT NULL"),
    BETWEEN         ("BETWEEN", 2 , "BETWEEN :%s AND :%s");


    private final String operationName;
    private final int    totalArguments;
    private final String sqlOperationValue;


    public String getOperationName() {
        return operationName;
    }

    public int getTotalArguments() {
        return totalArguments;
    }

    public String getSqlOperationValue() {
        return sqlOperationValue;
    }


    public static FilterOperation getFilterOperationWithName( String aOperationName ) {
        if (StringUtils.isEmpty(aOperationName)) {
            throw new RuntimeException("The passed-in operation name is null or empty.");
        }

        // Loop through all of the enumerated values
        for ( FilterOperation filterOperation: FilterOperation.values() ) {
            if (aOperationName.equalsIgnoreCase( filterOperation.getOperationName())) {
                return filterOperation;
            }
        }

        // I did not find the filterOperation
        throw new RuntimeException("The filter operation name was not found in the list of enumerated types.");
    }

    FilterOperation(String aOperationName, int aTotalArguments, String aSqlOperationValue) {
        this.operationName = aOperationName;
        this.totalArguments = aTotalArguments;
        this.sqlOperationValue = aSqlOperationValue;
    }
}

