Queries class at the start
---------------------------
Strengths
 + The main app does not make database calls (it's isolated to the Queries class)
 + Because Queries runs SQL calls, you can run unit tests against it to make sure it works

Weaknesses
 - The Queries class must create a new data source every time you run a query [very expensive]
 - The Queries class methods require a DataSoiurce but there is no way to set it





App Class
---------
package com.lessons;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class App {

     private static final Logger logger = LoggerFactory.getLogger(App.class);


     /**********************************************************
      * main()
      *
      * Main program to access this class from the command-line
      ********************************************************** */
     public static void main(String[] args)
     {
         // Program starts here
         logger.debug("main() started");

         // Instantiate a new Queries object
         Queries q = new Queries();

         // Use the Queries object to get the current database time as a string
         String currentTime = q.getDatabaseTime();

         // Print out the current database time
         System.out.println("Current Database Time is " + currentTime);

         // Program ends Here
         logger.debug("main() finished.");
     }

}




Queries Class
-------------
package com.lessons;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.datasource.SingleConnectionDataSource;

public class Queries
{
    private static final Logger logger = LoggerFactory.getLogger(Queries.class);



    public String getDatabaseTime() {
        logger.debug("getDatabaseTime() started.");

        // Create a data source object
        SingleConnectionDataSource dataSource = new SingleConnectionDataSource();
        dataSource.setUsername("test");
        dataSource.setPassword("test");
        dataSource.setUrl("jdbc:postgresql://localhost:5432/test");


        // Create a new JdbcTemplate object   [needs the data source]
        JdbcTemplate jt = new JdbcTemplate(dataSource);
        String sql = "Select now()";

        // Use the JdbcTemplate object to run a query and get a result
        String databaseTime = jt.queryForObject(sql, String.class);

        // Return the string
        logger.debug("getDatabaseTime() returns {}", databaseTime);
        return databaseTime;
    }
}
