Fundamentals: Lists
-------------------


Questions for class
-------------------
 1. What is the difference between a List and ArrayList
    Quick Answer:  List is an inteface.  ArrayList is a concrete implementation
    What does that mean in English?

 2. Basics:  How to create an ArrayList
    -- Show the code on the board

            ArrayList<String> myList;                        // myList is pointing to null
            ArrayList<String> myList = new ArrayList<>();    // myList has size() of 0

            myList.add("Entry 1")                            // myList has size() of 1
            myList.add("Entry 2")                            // myList has size() of 2


 3. How to loop through list
    for (String s: myList)
     {
        logger.debug("s={}", s);
     }


 4. Add null to a list
      myList.add(null)                                 // myList has size() of 3
      Surprise:  You can add null to a list
      Why?       A list if just an ordered collection



 5. Create an immutable list:

    // Create an immutable list of 3
    List<String> fixedList = Arrays.asList("Entry 1", "Entry 2", "Entry 3");


 6. Will this compile?
    fixedList.add("Entry 4");         // Yes, it compiles!!
                                      // But, it throws an exception during runtime as the list is fixed



Class Exercise
--------------
Write Java code to:
 1. Create a fixed list of noise words -- e.g., "is", "of", "a", "the"
 2. Create a list of real words -- e.g., "Hi", "There", "is", "of"
 3. Filter out the noise words from the real words
    NOTE:  Do not say whether to adjust the list of real words or create a new list


Design decisions:
 1) Will you create a new list *OR* modify the existing list?
 2) Surprise:  Looping through a list of real words and trying to delete items causes an exception.
               Why?  You cannot loop through a list and delete items using conventional for loop
                     You *CAN*  loop through a list and delete items using an iterator

