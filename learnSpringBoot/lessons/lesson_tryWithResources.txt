Lesson on Try-with-resources
----------------------------
Lesson:  At the end of the try block, the close() method is called on any classes that implement AutoClosable

Procedure
---------
 1. Add his class

    package com.lessons;

    import org.slf4j.Logger;
    import org.slf4j.LoggerFactory;

    public class AutoClosableService implements AutoCloseable {
        private static final Logger logger = LoggerFactory.getLogger(AutoClosableService.class);

        public void doSomething() {
            logger.debug("doSomething() called.");
        }

        public AutoClosableService() {
            logger.debug("AutoClosableService() constructor called.");
        }


        @Override
        public void close() throws Exception {
            logger.debug("close() called.");
        }
    }



 2. Add this to your App

         // Using your own auto-closable service
         try (AutoClosableService autoClosableService = new AutoClosableService() ) {
             autoClosableService.doSomething();

             // AutoClosableService is automatically closed at the end of this try block
         }

 3. Step through the code




 4. Use try-with-resources to write to a file

         // Use try-with-resources for the BufferedWriter
         String filePath = "/tmp/stuff.txt";
         try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {
             writer.write("line 1 is this\n");
             writer.write("line 2 is here\n");

             // BufferedWriter is automatically closed at the end of this try block (by calling writer.close()
         }



 5. Use try-with-resources to read from a file

         String line;
         try (BufferedReader bufferedReader = new BufferedReader(new FileReader(filePath))) {

             while ((line = bufferedReader.readLine()) != null) {
                 logger.debug("Reading line--->{}<---", line);
             }

             // BufferedReader is automatically closed at the end of this try block
         }
