Fundamentals: Value of Java, Maven, and Spring
----------------------------------------------

Basic Components to making springboot web app
 1) Java
 2) Maven
 3) Spring MVC, Spring JDBC, Spring-Boot
 4) Database -- e.g., Postgres
    + Holds "truth"

 5) Search engine -- e.g., ElasticSearc
    + Provides super-fast searching
    - Not transactional

Java
----
Advantages
 + Portability: Run on any operating system as long as their is a Java JRE
 + No pointers to cause errors
 + Automatic Garbage Collection
 + Strongly type:  You know the type of every variable and expression at compile time (to help identify problems at compile time)
 - Not as fast as compiled code
 - Steep learning curve:  syntax can be confusing compared to other langauges
 - Not easy to make a simple script
 - Needs a lot of dependencies to run


Maven
-----
Advantages
 + It provides a way to compile, build, test code
 + It provides a way to bring in dependent java JARs
 + It lets you separate scopes -- some dependencies for test classes only
 - Requires Java JRE
 + Runs on any operating system that has a Java JRE



Spring
------
Spring provides for dependency injection
Spring-MVC provides an easy way to make REST calls
Spring-JDBC provides an easy way to make SQL calls
Spring-Boot provides an easy way to make a runnable JAR that includes an app server
 + No need to setup separate Tomcat/Jetty/WebLogic Server/WebSphere, or JBoss app server
 + Your Java JAR has everythingn it needs to run
 + No dependencies:  If a system admins upgrades their app server, you are immune



Exercise
--------
 1. Create Simple Java app with intellij using quickstart
 2. Add LogBack dependency
 3. Add logback.xml
 4. Add logger.debug(), logger.info(), and logger.warn() calls
 5. Adjust logback.xml settings to hide some loggers
 6. Practice using breakpoints in intellij
