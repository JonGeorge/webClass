Dependency Injection Best Practices
-----------------------------------

Best Practices
 + Use constructor injection for mandatory dependencies
 + Use setter injection for the optional dependencies
 + Make sure your constructor doesn’t get messy and you don’t end up with a whole bunch of setters.



Approach #1:  Inject private fields using @Resource annotation
--------------------------------------------------------------  
   @Service public class ServiceClass
   {

      @Resource
      private DataSource dataSource;
 
      @Resource
      private OtherServiceClass otherServiceClass;


   }


Approach #2:  Use Constructor to inject values
----------------------------------------------
   @Service
   public class ServiceClass
   {

      private DataSource dataSource;
      private OtherServiceClass otherServiceClass;

      /*
       * Use constructor to inject resources
       * For production code, Spring will call this constructor and inject [if there is only one constructor]
       * For test code, we can create mock dependencies and instantiate this class directly with new
       */
      @AutoWired
      public ServiceClass(DataSource aDataSource, OtherServiceClass aOtherServiceClass) {
         this.dataSource=aDataSource;
         this.otherServiceClass=aOtherServiceClass;
      }


   }
