Lesson:  Add a REST endpoint that lets you download a file
----------------------------------------------------------

Key Points
 1) The response includes a responseBody, a status, and HEADERS
 2) The headers determine behavior within the browser


Sample Code
-----------
/*
 * Download Report REST Endpoint
 * GET /api/reports/download
 */
@RequestMapping(value = "/api/reports/download", method = RequestMethod.GET)
public  ResponseEntity<?>  downloadReport(@RequestParam(name="id") Integer reportId) {
    logger.debug("downloadReport started.");

    // Create a string (that will hold the downloaded textfile contents)
    String fileContents = "Report " + reportId + " is here and it's a really long reports....";

    // Set the default file name (that the browser will save as....)
    String fileName = "something.txt";

    // Create an HttpHeaders object  (this holds your list of headers)
    HttpHeaders headers = new HttpHeaders();

    // Set a header with the length of the file
    // -- so the browser will know total file size is -- and be able to show download percentage
    headers.setContentLength(fileContents.getBytes(Charset.defaultCharset()).length );

    // Set a header with the default name to save this file as
    // -- So, the browser will do a Save Asâ€¦.
    headers.setContentDispositionFormData("attachment", fileName);

    // Return the ResponseEntity object with the special headers
    // -- This will cause the browser to do a Save File As.... operation
    return ResponseEntity
                .status(HttpStatus.OK)
                .headers(headers)
                .body(fileContents.getBytes(Charset.defaultCharset()) );
}
