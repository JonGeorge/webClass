How to Install Kabana on CentOS Unix
------------------------------------

Assumptions
-----------
 A) You already have ElasticSearch installed on your CentOS box as a service
    [if not see howToInstallElasticSearchOnCentosUsingRpm.txt]
 B) You have a Java JDK installed
 C) You want to install Kibana
 

References
----------
https://www.elastic.co/guide/en/kibana/4.1/setup.html


Procedure
---------
 1. **OPTIONAL** open-up port 5601 so that an outside machine can connect to ElasticSearch
    unix> sudo -s
    unix> iptables -I INPUT -p tcp -m tcp --dport 5601 -j ACCEPT
    unix> service iptables save
    unix> service iptables restart
    unix> iptables -S               # list current rules
    

 2. Download Kibana 4.1.8 to your CentOS box
    a. Go to https://www.elastic.co/downloads/kibana
    b. Click on the "LINUX 64-bit" link
       *or*
       Go to https://download.elastic.co/kibana/kibana/kibana-4.1.8-linux-x64.tar.gz
       
       
       NOTE:  The 4.5.1 version of kibana requires ES 2.3.0 or later
       Go to https://download.elastic.co/kibana/kibana/kibana-4.5.1-linux-x64.tar.gz
       
       
    b. Save kibana-4.1.8-linux-x64.tar.gz c:\vault
    c. Upload it to your /opt directory on your CentOS unix box
    
       *OR*
       
    Login to your centOS box
       unix> sudo -s
       unix> cd /opt
       unix> wget https://download.elastic.co/kibana/kibana/kibana-4.1.8-linux-x64.tar.gz
       
  

 3. Install Kibana
    unix> cd /opt
    unix> tar zxvf kibana-4.1.8-linux-x64.tar.gz
    unix> rm kibana-4.1.8-linux-x64.tar.gz
   
      -- Now, you should have these directories:
            /opt/kibana-4.1.8-linux-x64/bin
            /opt/kibana-4.1.8-linux-x64/config/
            /opt/kibana-4.1.8-linux-x64/node/
            /opt/kibana-4.1.8-linux-x64/plugins/
            /opt/kibana-4.1.8-linux-x64/src/           
    
 
 4. Make your regular user the owner of opt/kibana-4.1.8-linux-x64 and all subdirectories
    unix> sudo chown -R adam:adam  /opt/kibana-4.1.8-linux-x64
         

 5. Startup ElasticSearch
    unix> sudo service elasticsearch start

       
 6. Startup Kibana in a unit terminal
    unix> cd /opt/kibana-4.1.8-linux-x64/bin
    unix> ./kibana
         
    You should see this:
    {"name":"Kibana","hostname":"centosVM","pid":4999,"level":30,"msg":"Found kibana index","time":"2016-06-18T20:48:14.672Z","v":0}
	{"name":"Kibana","hostname":"centosVM","pid":4999,"level":30,"msg":"Listening on 0.0.0.0:5601","time":"2016-06-18T20:48:14.703Z","v":0}
    
    
 


 7.  Create the .kibana index with dynamic mapping enabled just for that index:
     PUT .kibana
     {
        "index.mapper.dynamic": true
     }      

     NOTE:  You should get a response of { "acknowledged": true }
    
    
 8. Create a mapping for power_db
    DELETE /power_db
    PUT /power_db
    {
       "mappings": {
          "record": {
             "properties": {
                "recordDate": {
                   "type": "date",
                   "format": "MM/dd/yyyy"
                },
               "powerUsed": {
                   "type": "float",
                   "index": "analyzed"
               }
            }
          }
       }
    }
 
 
 9. Load some data into power_db
    POST _bulk    
    { "create": { "_index": "power_db", "_type": "record" }}
    { "recordDate": "01/01/2016", "powerUsed": 2.3  }
    { "create": { "_index": "power_db", "_type": "record" }}
    { "recordDate": "01/02/2016", "powerUsed": 2.1  }
    { "create": { "_index": "power_db", "_type": "record" }}
    { "recordDate": "01/03/2016", "powerUsed": 2.4  }
    { "create": { "_index": "power_db", "_type": "record" }}
    { "recordDate": "01/04/2016", "powerUsed": 2.5  }
    { "create": { "_index": "power_db", "_type": "record" }}
    { "recordDate": "01/05/2016", "powerUsed": 2.3  }
    { "create": { "_index": "power_db", "_type": "record" }}
    { "recordDate": "01/06/2016", "powerUsed": 2.1  }
    { "create": { "_index": "power_db", "_type": "record" }}
    { "recordDate": "01/07/2016", "powerUsed": 2.4  }
    { "create": { "_index": "power_db", "_type": "record" }}
    { "recordDate": "01/08/2016", "powerUsed": 2.5  }
    { "create": { "_index": "power_db", "_type": "record" }}
    { "recordDate": "01/09/2016", "powerUsed": 2.4  }
    { "create": { "_index": "power_db", "_type": "record" }}
    { "recordDate": "01/10/2016", "powerUsed": 3.2  }

  
10. Query the data to see what's been loaded
    GET /power_db/_search
    
    
11. Browse to the kibana UI
    a. Open a browser
    b. Go to http://localhost:5601/ 
    
12. Tell Kibana where your data is:
    a.  On the "Configure an index pattern" page
        index name or pattern:  power_db
        -- You should see recordDate
        -- Press "Create"
    
    b. Click the star icon -- to make power_db the default index
    
13. View your data
    NOTE:  Your data is from January 2016
    a. Click on "Discover"
    b. Click on "time-picker" and choose Year-to-date
    c. On the left, under "Available Fields" click on "powerUsed"
       -- Now, you should have the recordDate and powerUsed
       
    d. Click on save search
       Save the search as "power used in january"
    
    e. Press "Visualize"
    f. Select "Line Chart"
    g. Click on "From a Saved Search"
    h. Click on "power used in january"
    i. On the x-axis:  select "Date Range", select "recordDate"
    
