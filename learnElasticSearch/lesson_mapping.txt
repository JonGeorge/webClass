Lesson:  Mapping Explained
--------------------------


References
----------
https://www.elastic.co/guide/en/elasticsearch/guide/current/mapping-intro.html
https://www.elastic.co/guide/en/elasticsearch/guide/current/analysis-intro.html


Mapping Data Types
------------------
The "type" attribute determines the field type.  ES supports the following types:
 A) String: string 
 B) Whole number: byte, short, integer, long
 C) Floating-point: float, double
 D) Boolean: boolean
 E) Date: date 


The "index" attribute controls how the string will be indexed. It can contain one of three values:
 A) analyzed
    First analyze the string and then index it. In other words, index this field as full text. 

 B) not_analyzed
    Index this field, so it is searchable, but index the value exactly as specified. Do not analyze it. 
 
 C) no
    Don’t index this field at all. This field will not be searchable. 


The "analyzer" attribute controls which analyzer to use for a full-text searchable field
 A) 
 
 

When you index a document that contains a new field, ES will use dynamic mapping to try to guess the field type.
NOTE:  If your dynamic field contains a number in quotes ("123"), it will be mapped as type string, not type long. 
       However, if the field is already mapped as type long, then Elasticsearch will try to convert the string into a long, and throw an exception if it can’t.

This means that if you index a number in quotes ("123"), it will be mapped as type string, not type long. However, if the field is already mapped as type long, then Elasticsearch will try to convert the string into a long, and throw an exception if it can’t.

IMPORTANT:  
 1) You can add to an existing mapping
 2) You *CANNOT* change existing field mappings
    If a mapping already exists for a field, data from that field has probably been indexed. 
    If you were to change the field mapping, the indexed data would be wrong and would not be properly searchable.
    
    
Procedure
---------
 1. Delete the index
    DELETE /records_db


 2. Create a mappings for the index
    PUT /records_db
    {
       "mappings": {
          "record": {
             "properties": {
                "title": {
                   "type": "string",
                   "index": "analyzed",
                   "analyzer": "snowball"
                },
                "permissions": {
                   "type": "string",
                   "index": "analyzed",
                   "analyzer": "standard"
                },
                "type": {
                   "type": "integer",
                   "index": "not_analyzed"
                },
                "createDate": {
                   "type": "string",
                   "index": "not_analyzed"
                },
                "description": {
                   "type": "string",
                   "index": "analyzed",
                   "analyzer": "snowball"
                }
             }
          }
       }
    }


 3. Bulk insert 4 "record" records
    POST _bulk
    { "create": { "_index": "records_db", "_type": "record", "_id": "1" }}
    { "title": "Record #1", "permissions": "x,y,z", "type": 7, "createDate": "02/25/2016", "description": "This is the description for record #1" }
    { "create": { "_index": "records_db", "_type": "record", "_id": "2" }}
    { "title": "Record #2", "permissions": "a,b,c,d", "type": 4, "createDate": "02/25/2016", "description": "This is the description for record #2"}
    { "create": { "_index": "records_db", "_type": "record", "_id": "3" }}
    { "title": "Record #3", "permissions": "a,y,z", "type": 7, "createDate": "02/25/2016", "description": "This is the description for record #3"}
    { "create": { "_index": "records_db", "_type": "record", "_id": "4" }}
    { "title": "Record #4", "permissions": "a,y,z", "type": 7, "createDate": "02/25/2016", "description": "This is the description for record #4"}


 4. View the mapping of a "record" 
    GET records_db/_mapping/record
    
    You will get this result:
    {
       "records_db": {
          "mappings": {
             "record": {
                "properties": {
                   "createDate": {
                      "type": "string",
                      "index": "not_analyzed"
                   },
                   "description": {
                      "type": "string",
                      "analyzer": "snowball"
                   },
                   "permissions": {
                      "type": "string",
                      "analyzer": "standard"
                   },
                   "title": {
                      "type": "string",
                      "analyzer": "snowball"
                   },
                   "type": {
                      "type": "integer"
                   }
                }
             }
          }
       }
}
