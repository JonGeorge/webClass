Lesson:  Elastic Search Analyzers
---------------------------------

Built-in full-text analyzers
 1) Standard analyzer 
    The standard analyzer is the default analyzer that Elasticsearch uses. 
    + It is the best general choice for analyzing text that may be in any language. 
    + It splits the text on word boundaries, as defined by the Unicode Consortium, 
    + It removes most punctuation. 
    + It lowercases all terms. It

 2) Simple analyzer
    + It splits text on anything that isn’t a letter, 
    + It lowercases the terms.
 
 3) Whitespace analyzer 
    + It splits the text on whitespace only
     
     
Important Points
----------------
 A) When you query a full-text field, the query will apply the same analyzer to the query string  
    to produce the correct list of terms to search for.

 B) When you query an exact-value field, the query will not analyze the query string.
    Instead, it searcesh for the exact value that you have specified. 

 C) The _all field is a full-text field
    
 D) When Elasticsearch detects a new string field in your documents,
    it automatically configures it as a full-text string field and analyzes it with the standard analyzer.
    
    
Testing an analyzer
-------------------
GET /_analyze?analyzer=standard
{
    "text" :"Text to analyze"
}


Telling ElasticSearch how to map fields
---------------------------------------
The index attribute controls how the string will be indexed. 
 a) analyzed  [default value for string field]
    First analyze the string and then index it. In other words, index this field as full text. 
 
 b) not_analyzed
    Index this field, so it is searchable, but index the value exactly as specified. Do not analyze it. 
 
 c) no
    Don’t index this field at all. This field will not be searchable. 


The default value of index for a string field is analyzed.
If we want to map the field as an exact value, we need to set it to not_analyzed:

{
    "tag": {
        "type":     "string",
        "index":    "not_analyzed"
    }
}


 
