How to Reindex Data
-------------------

PROBLEM:  You have an alias docs that points to docs_v1
          You have an ES mapping in production called docs_v1
          You need to modify your indexing but you don't want to lose the data
          
SOLUTION: Reindex your data to a new index -- e.g., docs_v2
          Change your alias to point to docs_v2


Assumptions:
 1) You have Maven
 2) You have Java
 3) You have an ES 1.7.5 service on your computer
 4) You have the authority to stop/start this service

          
Reindexing on ES 1.7.5
----------------------
NOTE:  ES 1.x does not have a reindex function built-in

 1. Download and Compile the ES 1.7 version of the reindex plugin
    a. Go to https://github.com/codelibs/elasticsearch-reindexing
    b. Click on Releases
    c. Select elasticsearch-reindexing-1.7.0 
    d. Click on source code (tar.gz)
       -- Save it to your "Downloads" directory
       -- Save the file as "elasticsearch-reindexing-1.7.0.tar.gz"
       
    *OR*
        
    Go to https://github.com/codelibs/elasticsearch-reindexing/archive/elasticsearch-reindexing-1.7.0.tar.gz
       -- Save it to your "Downloads" directory
       -- Save the file as "elasticsearch-reindexing-1.7.0.tar.gz"
    
    e. Compile the plugin  (to generate the elasticsearch-reindexing-1.7.0.jar)
       unix> cd ~/Downloads
       unix> tar zxvf elasticsearch-reindexing-1.7.0.tar.gz
       unix> rm elasticsearch-reindexing-1.7.0.tar.gz
       unix> cd elasticsearch-reindexing-elasticsearch-reindexing-1.7.0
       unix> mvn clean package
             -- If it works, then your jar file is located here
                ./target/elasticsearch-reindexing-1.7.0.jar
                
       
 2. Install the plugin
    a. Create a plugin directory
       unix> sudo mkdir /usr/share/elasticsearch/plugins/reindexing
    
    b. Give Elsaticsearch ownership of it
       unix> sudo chown elasticsearch:elasticsearch -R /usr/share/elasticsearch/plugins/reindexing
       
    c. Copy the file to your new directory
       unix> sudo cp ~/Downloads/elasticsearch-reindexing-elasticsearch-reindexing-1.7.0/target/elasticsearch-reindexing-1.7.0.jar   /usr/share/elasticsearch/plugins/reindexing
     
    d. Verify that the plugin looks good
       unix> ls -l /usr/share/elasticsearch/plugins/reindexing
       -rw-r--r--. 1 root root 48705 May 18 09:58 elasticsearch-reindexing-1.7.0.jar


 3. Restart ElasticSearch & verify the plugin was loaded
    a. Restart ElasticSearch
       unix> sudo service elasticsearch restart
    
    b. Verify that the pluugin was loaded
       unix> grep -i reindexingplugin /var/log/elasticsearch/elasticsearch.log
       [2017-05-18 09:59:35,359][INFO ][plugins                  ] [Moira Brandon] loaded [ReindexingPlugin], sites []


 4. Create an index called "docs_v1"
    PUT /docs_v1
    {
      "mappings":
      {
        "record": {
          "properties": {
            "main_id": {
              "type": "string",
              "index": "analyzed",
              "include_in_all": true,
              "fields": {
                "raw": {
                  "type": "string",
                  "index": "not_analyzed"
                }
              }
            },
            "incident_date": 
            {
              "type": "date",
              "ignore_malformed": true,
              "format": "yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||S",
              "index": "not_analyzed",
              "include_in_all": true
            }
          }
        }
      }
    }  
 
 
 5. Create an alias called "docs" that points to "docs_v1"
    POST /_aliases
    {
     "actions" : [
       { "add"    : { "index" : "docs_v1", "alias" : "docs" } }
     ]
    } 
 
 
 6. Add 3 sample records to "docs_v1"
    POST _bulk
    { "create": { "_index": "docs", "_type": "record", "_id": "1" }}
    { "main_id": "1", "incident_date": "2016-02-25"}
    { "create": { "_index": "docs", "_type": "record", "_id": "2" }}
    { "main_id": "2", "incident_date": "2016-02-25 15:02:02"}
    { "create": { "_index": "docs", "_type": "record", "_id": "3" }}
    { "main_id": "3", "incident_date": "2016-02-14T15:01:02-07"}

    POST /docs/_search  
 
 
 7. Create a 2nd index called "docs_v2"
    NOTE:  This is the index has a change to the date field
    
    PUT /docs_v2
    {
      "mappings":
      {
        "record": {
          "properties": {
            "main_id": {
              "type": "string",
              "index": "analyzed",
              "include_in_all": true,
              "fields": {
                "raw": {
                  "type": "string",
                  "index": "not_analyzed"
                }
              }
            },
            "incident_date": 
            {
              "type": "date",
              "ignore_malformed": true,
              "format": "yyyy-MM-dd'T'HH:mm:ssZ||yyyy-MM-dd'T'HH:mm:ss||yyyy-MM-dd HH:mm:ssZ||yyyy-MM-dd HH:mm:ss.SSS||yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||S",
              "index": "not_analyzed",
              "include_in_all": true
            }
          }
        }
      }
    }


 8. Reindex the data from "docs_v1" to "docs_v2"
    POST /docs_v1/_reindex/docs_v2
    
    
 9. Switch the alias so it points to "docs_v2"
    POST /_aliases
    {
     "actions" : [
       { "remove" : { "index" : "docs_v1", "alias" : "docs" } },
       { "add"    : { "index" : "docs_v2", "alias" : "docs" } }
     ]
    }
    
 
 
 
 
 
