How to Query Sample Data using DSL
----------------------------------

Assumptions:
 A) You have ElasticSearch 1.7 running locally listening on http://localhost:9200
 B) You have the Chrome Sense extension installed


References
----------
https://www.elastic.co/guide/en/elasticsearch/guide/current/query-dsl-intro.html


Procedure
---------
 1. Delete the index
    DELETE /records_db


 2. Create a mappings for the index
    PUT /records_db
    {
       "mappings": {
          "record": {
             "properties": {
                "title": {
                   "type": "string",
                   "analyzer": "snowball"
                },
                "permissions": {
                   "type": "string",
                   "analyzer": "standard"
                },
                "type": {
                   "type": "integer",
                   "index": "not_analyzed"
                },
                "createDate": {
                   "type": "string",
                   "index": "not_analyzed"
                },
                "description": {
                   "type": "string",
                   "analyzer": "snowball"
                }
             }
          }
       }
    }


 3. Bulk insert 4 "record" records
    POST _bulk
    { "create": { "_index": "records_db", "_type": "record", "_id": "1" }}
    { "title": "Record #1", "permissions": "x,y,z", "type": 7, "createDate": "02/25/2016", "description": "This is the description for record #1" }
    { "create": { "_index": "records_db", "_type": "record", "_id": "2" }}
    { "title": "Record #2", "permissions": "a,b,c,d", "type": 4, "createDate": "02/25/2016", "description": "This is the description for record #2"}
    { "create": { "_index": "records_db", "_type": "record", "_id": "3" }}
    { "title": "Record #3", "permissions": "a,y,z", "type": 7, "createDate": "02/25/2016", "description": "This is the description for record #3"}
    { "create": { "_index": "records_db", "_type": "record", "_id": "4" }}
    { "title": "Record #4", "permissions": "a,y,z", "type": 7, "createDate": "02/25/2016", "description": "This is the description for record #4"}
    
 
 4. Delete the entire user_db 
    DELETE /user_db

 5. Create a mappings for user_db
    PUT /user_db
    {
       "mappings": {
          "user": {
             "properties": {
                "name": {
                   "type": "string",
                   "analyzer": "snowball"
                },
                "dob": {
                   "type": "string",
                   "analyzer": "standard"
                },
                "hireDate": {
                   "type": "string",
                   "index": "not_analyzed"
                },
                "description": {
                   "type": "string",
                   "analyzer": "snowball"
                },
                "position": {
                   "type": "string",
                   "analyzer": "snowball"
                }
             }
          }
       }
    }


 6. Bulk insert 6 user_db records
    POST _bulk
    { "create": { "_index": "user_db", "_type": "user", "_id": "1" }}
    { "name": "Adam", "description": "Adam is a consultant is who works for a small company.", "position": "IT Consultant"}
    { "create": { "_index": "user_db", "_type": "user", "_id": "2" }}
    { "name": "Ben", "description": "Ben runs a division for a large company.", "position": "Manging Consultant"}
    { "create": { "_index": "user_db", "_type": "user", "_id": "3" }}
    { "name": "Justin", "description": "Justin is a child psychologist", "position": "Psychologist"}
    { "create": { "_index": "user_db", "_type": "user", "_id": "4" }}
    { "name": "Peter", "description": "Peter is a medical doctor", "position": "Child Doctor"}
    { "create": { "_index": "user_db", "_type": "user", "_id": "5" }}
    { "name": "Josh", "description": "Josh worked on the Clementine space program for NASA", "position": "Rocket Scientist"}
    { "create": { "_index": "user_db", "_type": "user", "_id": "6" }}
    { "name": "Suzanne", "description": "Suzanne is a stay-at-home mom", "position": "Manager"}  
    
    
 7. Search all fields for child.  
    GET /_search
    {
       "query":
       {
          "match": 
          {
            "_all": "child"
          }
      }
    }
 
 
 8. Search description field for child.  
    GET /_search
    {
       "query":
       {
          "match": 
          {
            "description": "child"
          }
      }
    }
 
