How to Make a Line Chart using Kibana
-------------------------------------


Assumptions:
 A) You have an ElasticSearch installed [see howToInstallKibanaOnCentOS.txt]
 B) You have a Kibna instance installed [see howToInstallElasticSearch2.3.3OnCentosUsingRpm.txt]
 C) You have an index called 'my-index' with these fields
 
 	    GET /my-index/_mapping
	    
	    Would return this from ElasticSearch:
		 {
		   "my-index": {
		      "mappings": {
		         "event": {
		            "properties": {
		               "cluster": {
		                  "type": "long"
		               },
		               "computation_timestamp": {
		                  "type": "string"
		               },
		               "cx": {
		                  "type": "double"
		               },
		               "cy": {
		                  "type": "double"
		               },
		               "score": {
		                  "type": "string"
		               },
		               "windowcount": {
		                  "type": "long"
		               },
		               "x": {
		                  "type": "double"
		               },
		               "y": {
		                  "type": "double"
		               },
		               "z": {
		                  "type": "double"
		               }
		            }
		         }
		      }
		   }
		}


 
Procedures
----------
 1. Startup your ElasticSearch instance
    unix> sudo service elasticsearch start
    
 2. Load your data
    (Run your Storm Topology)
    


 3. Verify that your data looks like this:
 
    GET /my-index/_search
    
	{
	   "took": 2,
	   "timed_out": false,
	   "_shards": {
	      "total": 5,
	      "successful": 5,
	      "failed": 0
	   },
      "hits": {
      "total": 2349,
      "max_score": 1,
      "hits": [
         {
            "_index": "my-index",
            "_type": "event",
            "_id": "744",
            "_score": 1,
            "_source": {
               "cx": 167903237,
               "windowcount": 1024,
               "cluster": 522,
               "cy": 3262437356.2638626,
               "score": "0",
               "y": -291522559.7361374,
               "x": 0,
               "z": 84985402835109800,
               "computation_timestamp": "2016-06-18 16:26:47.521344"
            }
         },
         {
            "_index": "my-index",
            "_type": "event",
            "_id": "749",
            "_score": 1,
            "_source": {
               "cx": 167903237,
               "windowcount": 1024,
               "cluster": 500,
               "cy": 1134727927.7924151,
               "score": "1",
               "y": 285352767.79241514,
               "x": 0,
               "z": 81426202086792000,
               "computation_timestamp": "2016-06-18 16:26:47.531349"
            }
         },
         {
            "_index": "my-index",
            "_type": "event",
            "_id": "751",
            "_score": 1,
            "_source": {
               "cx": 167903237,
               "windowcount": 1024,
               "cluster": 522,
               "cy": 3262437356.2638626,
               "score": "0",
               "y": 14632925.26386261,
               "x": 0,
               "z": 214122501777788.62,
               "computation_timestamp": "2016-06-18 16:26:47.532888"
            }
         },
         {
            "_index": "my-index",
            "_type": "event",
            "_id": "756",
            "_score": 1,
            "_source": {
               "cx": 167903237,
               "windowcount": 1024,
               "cluster": 522,
               "cy": 3262437356.2638626,
               "score": "0",
               "y": 423294683.2638626,
               "x": 0,
               "z": 179178388879453760,
               "computation_timestamp": "2016-06-18 16:26:47.535752"
            }
         },
         

 
 4. Startup Kibana
    unix> cd /opt/kibana-4.5.1-linux-x64/bin
    unix> ./kibana
    
    
 5. Connect to the kibana website
     http://locahost:5601/
     
     
     
     
     
     
     
  
Handy ES Queries
----------------
GET _cluster/health

DELETE /my-index/
GET /my-index/_search

GET /my-index/_search
{
  "size": 0,
  "aggs": {
    "group_by_info": {
      "terms": {
        "field": "z"
      }
    }
  }
}


GET /my-index/_search
{
  "size": 0,
  "aggs": {
    "group_by_info": {
      "terms": {
        "field": "score"
      }
    }
  }
}

DELETE /records-db/
GET /records-db/_mapping
GET /records-db/_search?size=5



DELETE /my-index


PUT .kibana
     {
        "index.mapper.dynamic": true
     }      


PUT /my-index
{
   "my-index": {
      "mappings": {
         "event": {
            "properties": {
               "cluster": {
                  "type": "long"
               },
               "computation_timestamp": {
                  "type": "date"
               },
               "cx": {
                  "type": "double"
               },
               "cy": {
                  "type": "double"
               },
               "score": {
                  "type": "string"
               },
               "windowcount": {
                  "type": "long"
               },
               "x": {
                  "type": "double"
               },
               "y": {
                  "type": "double"
               },
               "z": {
                  "type": "double"
               }
            }
         }
      }
   }
}
 