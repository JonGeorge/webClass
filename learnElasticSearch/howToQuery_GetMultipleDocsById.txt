How to Do Multiple Document Retrieval i  ElasticSearch by ID
------------------------------------------------------------

Assumptions:
 A) You have ElasticSearch 1.7 running locally listening on http://localhost:9200
 B) You have the Chrome Sense extension installed


   
Procedure
---------
 1. Delete the index
    DELETE /records_db


 2. Create a mappings for the index
    PUT /records_db
    {
       "mappings": {
          "record": {
             "properties": {
                "title": {
                   "type": "string",
                   "analyzer": "snowball"
                },
                "permissions": {
                   "type": "string",
                   "analyzer": "standard"
                },
                "type": {
                   "type": "integer",
                   "index": "not_analyzed"
                },
                "createDate": {
                   "type": "string",
                   "index": "not_analyzed"
                },
                "description": {
                   "type": "string",
                   "analyzer": "snowball"
                }
             }
          }
       }
    }


 3. Insert a few records (and set the ids)    You should see "created":true
    POST /records_db/record/1
    {
       "title": "Record #1",
       "permissions": "x,y,z",
       "type": 7,
       "createDate": "02/25/2016",
       "description": "This is the description for record #1"
    }

   POST /records_db/record/2
    {
       "title": "Record #2",
       "permissions": "a,b,c,d",
       "type": 4,
       "createDate": "02/25/2016",
       "description": "This is the description for record #2"
    }

   POST /records_db/record/3
    {
       "title": "Record #3",
       "permissions": "a,y,z",
       "type": 7,
       "createDate": "02/25/2016",
       "description": "This is the description for record #3"
    }



 4. Query for all records.  You should see "hits": { "total": 3, ....}
    POST /records_db/_search
    
    *OR*
    
   POST /records_db/_search
   {
      "query" : {"match_all": {} }
   }    
     
   
    
 5. Use mget to retrieve documents with id=2 or id=3
    GET /records_db/_mget
    {
       "docs" : [
          {
             "_id" :    2
          },
          {
             "_id" :    3
          }
        ]
    }
    
    *OR*
    
    GET /records_db/_mget
    {
             "ids" :   [ "2", "3" ]
    }
    
