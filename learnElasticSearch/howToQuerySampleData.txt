How to Query Sample Data
------------------------


Procedures
----------
 1. Startup elasticsearch
    a) Open a CMD window
       CMD> cd /d C:\tools\elasticsearch-1.7.0\bin
       CMD> elasticsearch.bat
       
 2. Use git to clone a sample repository
    a) Open a Git Shell
       CMD> cd /d c:\tools\intellij\workspace
       CMD> git clone https://github.com/andrewvc/ee-datasets.git
       
       -- Now, you data here:
        c:\tools\intellij\workspace\ee-datasets\datasets\
       
 3. Use the elastic-loader.jar to load data
    a) Open a CMD window
       CMD> cd c:\tools\intellij\workspace\ee-dataset
       CMD> java -jar elastic-loader.jar http://localhost:9200 datasets/movie_db.eloader
       [INFO] Reading from datasets/movie_db.eloader
       [INFO] DELETE /movie_db (bytes 0)
       [INFO] PUT /movie_db (bytes 352)
       [INFO] BULK INDEX /movie_db/movie

       Now, you just loaded ElasticSearch with 4 movie_db records

 4. Query ElasticSearch for status
    a. Startup HttpRequestor
       1) Startup Firefox
       2) Pull Tools / HttpRequester
    
    b. Get the status of your ElasticSearch
       GET http://localhost:9200/_status
  

 5. Query ElasticSearch for all documents in movie_db
    a. Startup HttpRequestor
    b. Query ElasticSearch for everything in the movie_db
       POST http://localhost:9200/movie_db/_search
        {
         "query" : {"match_all": {} }
        }
        
     You should see this:
        "hits": [
            {
                "_index": "movie_db",
                "_type": "movie",
                "_id": "4",
                "_score": 1,
        
The _search endpoint
--------------------
In order to search with ElasticSearch we use the _search endpoint, optionally with an index and type
That is, we make requests to an URL following this pattern: <index>/<type>/_search where index and type are both optional.

In other words, in order to search for our movies we can make POST requests to either of the following URLs:
    http://localhost:9200/_search              - Search across all indexes and all types.
    http://localhost:9200/movies/_search       - Search across all types in the movies index.
    http://localhost:9200/movies/movie/_search - Search explicitly for documents of type movie within the movies index.

Search for "hackers"
--------------------
   POST:  http://localhost:9200/movie_db/_search/
    {
      "query" :  
        {
            "query_string":
               {
                 "query" : "hackers"
              }                       
        }
    }
    

