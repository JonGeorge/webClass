How to Dual Boot a Windows 7 PC into Windows 7 + CentOS 7
---------------------------------------------------------

Assumptions:
 A) You have a PC that already has Windows 7
 B) You want to configure it to be dual-boot


References
----------
http://www.dedoimedo.com/computers/dual-boot-windows-7-centos-7.html
http://dareneiri.github.io/Configuring-Grub-2-on-CentOS-7/
https://trickiknow.com/how-to-boot-asus-laptop-from-usb-install-windows/
https://www.lostwindowspassword.com/computer-help/free-tips-about-asus-boot-menu-key-in-windows-7.html
https://www.techbrown.com/reinstall-grub2-boot-loader-centos-7-rhel-7.shtml


Procedure
---------
 1. Download the CentOS 7 Live CD (to try out on your computer without installing anything)
    (to verify that it works with your computer)
    a. Go to http://isoredirect.centos.org/centos/7/isos/x86_64/
    b. Select a mirror
    c. Select CentOS-7-x86_64-DVD-1708.iso
       *OR*
       http://mirror.linuxfix.com/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1708.iso
    
    d. Burn the ISO to a CD or DVD
    
    
 2. Insert the CD/DVD into your Drive *and* restart your computer
 
 
 3. On Dell Laptops, you usually press F12 to see the boot manu
    -- Select your CD/DVD drive
    
    -- N O W    Y O U     A R E      R U N N I N G       C E N T O S   (from the live DVD)
    
    
 4. Verify that your wifi card and ethernet card work
 
 5. Shutdown CentOS live DVD
           
 6. Clean-up your C:\ drive to get some space
    a. Reboot the laptop into Windows mode                   

    b. Run the Windows "Disk Cleanup" utility
       Press <Start> -> Disk Cleanup
       1) Check every checkbox
       2) Press "OK"
       3) You will be prompted "Are you sure you want to delete these files?"
          Press "Delete Files"

    c. Backup any important files to an external drive
        c:/users/john.smith/virtual box
        c:/tools/virtualBoxVMs
        c:/vault/Centos-606 ISO
 
    d. Delete any unneeded files from your Windows box
    
    e. Clear-out the recycle bin

    f. Delete the virtual memory/pageing file   (temporary.  we will restore it when we're done)
       NOTE:  The virtual memory file (C:\pagefile.sys) and the hibernat files cannot be moved while defragmeting,
              so we need to delete them temporary and restore them later
       1) Right-click on My Computer -> Properties -> Advanced system settings
       2) Select the "Advanced" tab
       3) Next to Performance, press "Settings"
       4) In the "Performance options" popup, select "Advanced"
          a. Under "Virtual memory", press "Change..."
          b. Select no paging file
             press "Set"

       5) Reboot.
       6) Verify that the c:\pagefile.sys file is gone
          If the file is still there, then you will want to reboot in safe mode and delete it there

    g. Disable hibernation
       1) Open a DOS window in admin mode
           powercfg.exe /hibernate off,
       2) Run power options and disable sleep completly
       3) Reboot
       4) Verify that the c:\hibernate file is gone

    h. Delete the c:\windows\memory.dmp (temporarily.  We will restore when we are done)
       NOTE:  We cannot move the memory.dmp file during defragmentation so we delete it now and restore it later
       1) Right-click on My Computer -> Properties -> Advanced system settings
       2) Next to "Startup and Recovery", press "Settings"
       3) Under "Write debugging information", change it to "(none)"
       4) Press OK
       5) Open a DOS window in *Administrative* mode
          Inside, the window:
          DOS> erase c:\Windows\MEMORY.DMP


 7. Perform Disk Defragment
    a. Perform Disk Defragment (using Windows)
       1) Press the <Start> buton, search for "Disk Defragmenter"
       2) Run it
          NOTE:  It's slow and does not work as well as the tools in the next step
       3) Reboot

    b. Perform Disk Defragment using the Power Defragmenter   (free open source tool)
       1) Go to http://www.softpedia.com/get/System/Hard-Disk-Utils/Power-Defragmenter.shtml
       2) Press Download
       3) Download the PowerDfragmenter.zip
       4) Explode PowerDefragmenter.zip (there is only one file PowerDefragmenter.exe)
       5) Run PowerDefragmenter
       6) Defragment the C:\
       7) Do the TriplePlass Defragment
       8) Reboot

    c. Perform Disk Defragment using Auslogics Disk Defrag
       1) Go to http://www.auslogics.com/disk-defrag/index.php
       2) Download disk-defrag-setup.exe
       3) Run disk-defrag-setup.exe
          Do the custom install and uncheck all of the checkboxes
       4) Press <Start><Run> Auslogics Disk Defrag
       5) Select C:\ -> "Defrag and Optimize"
          NOTE:  Do not check any other drive letters
       6) Reboot

    d. **OPTIONAL** Use Windows Disk Defragmenter in safe mode  (handy for moving "unmovable files"
       1) Restart Windows 7
       2) Begin Presing F8 on the keyboard until the Windows "Boot Option" screen appears
          If your computer gives you a "Keyboard error" while pressing "F8,"
          Then, restart your computer and begin pressing "F8" 3 to 4 seconds after the computer powers up.

       3) Select "Safe Mode" and press Enter
       4) Select <Start> -> All Programs -> Accessories -> System Tools -> Disk Defragmenter
       5) Select "Defragment Now"
          NOTE:  You will *NOT* see any progress bar
                 It runs silently in the background
                 When it is finished you will be notified


 8. Shrink the C:\ drive down (to make 150 GB of space for CentOS)
    NOTE:  The CentOS operating system takes about 40 GB.
           The CentOS swap space takes-up about 10 GB
       -- So, 150 GB of space gives you about 100 GB of free space (when you're done installing CentOS).
           
    a. Right-click on My Computer -> Manage

    b. Select Disk Management [on the left]
       1) Right-click on the C:\ -> Shrink Volume....
          NOTE:  Wait a few minutes for the "Querying Shrink Space" process to finish....

       2) Shrink the volume by 150 GB  (or whatever amount of space you need)
          Enter 153600   (150 GB = 153600 MB)
          Press "Shrink"
       
      Now, you should have a 150.00 GB Unallocated space in the Disk Management screen
       

 9. Enable the virtual memory/pageing file
    a. Right-click on My Computer -> Properties -> Advanced system settings
    b. Select the "Advanced" tab
    c. Next to Startup and Recovery, press "Settings"
    d. In the "Performance options" popup, select "Advanced"
    e. Under "Virtual memory", press "Change..."
    f. Select "System managed size"
       Press "Set"
       Press "OK"
    g. Verify that the c:\pagefile.sys file is there
    h. Reboot


10. **OPTIONAL** Enable the memory.dmp file
    a. Right-click on My Computer -> Properties -> Advanced system settings
    b. Select the "Advanced" tab
    c. Next to Performance, press "Settings"
    d. Under "Write debugging information", change it to "Kernel memory dump"
    e. Pres OK


11. Download a CentOS 7 distribution and write it to a CD-ROM or USB drive
    a. Go to http://isoredirect.centos.org/centos/7/isos/x86_64/
    b. Click on a mirror
    c. Click on CentOS-7-x86_64-Everything-1708.iso
       *OR*
    b. Go to http://mirror.linuxfix.com/centos/7/isos/x86_64/CentOS-7-x86_64-Everything-1708.iso


12. Use Rufus.exe (on Windows) to write the ISO file to your USB drive
    a. Connect your USB drive to Windows
    
    b. Download Rufus portable   
       NOTE:  You do not need to install it
       1) Go to https://rufus.akeo.ie/
       2) Scroll down to downloads, click on a "portable" version
          *or*
            Go to https://rufus.akeo.ie/downloads/rufus-2.12p.exe     [the portable version ends with p.exe]

       3) Save rufus-2.12p.exe to your c:\vault\
      
    c. Run rufus (to write your ISO image to your USB drive)
       1) Run c:\vault\rufus-2.12p.exe
       2) It will prompt you to check for application updates 
          Press No
       3) In the Rufus popup
          a) Set the Device:            (the drive letter of your USB drive)
          b) Set the Partition Scheme:  "MBR partition scheme for BIOS or UEFI"
          c) Check the checkbox "Create a bootable disk" using "ISO Image"
          d) Press the button next to "ISO Image"
            -- Browse to where you saved CentOS-7-x86_64-Everything-1708.iso
          e) Press "Start"

       4) If you get an ISOHybrid image detected warning, then
            Select "Write in ISO Image mode (Recommended)
            press OK

       5) You will get a warning that all data will be destroyed.
          Press OK

      NOTE:  Leave the USB drive connected to your computer


13. Install CentOS 7
    a. Restart your computer  (Your USB drive with the Centos ISO image should still be contected)

    b. Boot from your USB drive
       NOTE:
          On a Dell, on bootup press F12 (in 1 second intervals) to tell your computer to boot from USB storage
          On a Asus, on bootup press the Escape key (in 1 second intervals) to show the boot menu

           Select "Enter Setup" on the main menu
           Go to the "Boot" menu  (by using the right arrow key)
               -- UEFI Boot  [Disabled]
               -- PXE ROM    [Disabled]
            Go to the "Save & Exit menubar item  (by using the right arrow key)
            -- Select "Save Changes and Exit"

          On a Asus, on bootup press the Escape key (in 1 second intervals) to show the boot menu
           -- Select your Flash Drive

    c. Select "Install CentOS 7"
    
    d. In the Language screen, select "English (United States)" and press Continue
    
    e. In the "Installation Summary" screen, click on "Installation Destination"
    
    f. In the "Device Selection" screen, you will probably see two local disks
       One of the disks is your real hard drive
       One of the disks is your USB drive (which will be smaller probably 32 or 64 GB)
        1) Single-click on your real hard-drive
        2) Click on "I will configure partitioning"
        3) Click "Done"
    
    g. In the "Manual Partitioning" page,
       It probably says "You haven't created any mount points for your CentOS Linjx 7 installation yet"
       NOTE:  Because you shrank your C:\ drive, you should see on the bottom -- available space 150 GB (or whatever you set it)

       Create the following mount points
          /boot       1 GIB
          swap       12 GiB   <use somewhere between 1x or 2x your total memory.  If 6 GB of RAM, set for 12 GIB>
          /         137 GiB   <remaining amount of space>


       1) Press the "+" to create a mount point
             Mount Point:  /boot/efi
             Capacity:     1 GiB         # NOTE:  1 GB=1000 MB  and  1 GIB=1024 MB
             Press "Add mount point"

       2) Press the "+" to create a mount point
             Mount Point:  swap
             Capacity:     12 GiB       (assumes laptop has 6 GB of RAM)
             Press "Add mount point"

       3) Press the "+" to create a mount point
             Mount Point:  /
             Capacity:     137 GiB      (or use the available space shown on the bottom of the screen)
             Press "Add mount point"

             Press "Done"

        If you get the error:
           "No valid boot loader target device found.  See below for details.
            For a UEFI installation, you must include an EFI System Partition on a GPT-formatted disk mounted at /boot/efi"

            Then it means that you booted un EUFI mode.  You want to boot your USB drive in lagacy/MBR mode instead
            Reboot your laptop and change your BIOS settings so that you boot in legacy/MBR mode (and not EUFI mode)


    h. You will be prompted with a summary of changes
         Press "Accept Changes"
         
         
    i. Back In the Installation Summary, select "Software Selection"
       1) Select "Development and Creative Workstation" [on the left]
       2) Under the "Add-ons for Selected Environment", select the following:
            Additional Development
            Backup Client
            Development Tools
            Email Server
            Graphics Creation Tools
            Office Suite and Productivity
            Platform Develompent
            Technical Writing
            Security Tools
            Smart Card Support

       3) Press Done
    
    j. Back in the Installation Summary, select "Network & Host Name"
       1) In the bottom left, enter your hostname:  myCentos
     
       2) Single-click on your "Ethernet Card"
          Slide the slider to On [on the right side]

       3) Press "Configure"
          a) Click on the "General" tab
          b) Check "Automatically connect to this network when it is available"
          c) Press "Save"

       4) Press "Done"
       
    k. Press "Begin Installation
     
    l. In the "User Settings" screen
       1) Single-click on "Root Password"
          a) Enter your root password
          b) Press "Done"
       
       2) Single-click on "User Creation"
          a) Enter the full name, user name, password
          b) Press "Done"
      

       W A I T     6 0    M I N U T E S    (to install 2300+ packages and perform post-install setup tasks)


    m. In the bottom of the screen, it should say "Complete!"
       1) Press "Reboot"

       2) When your computer shuts-down, Remove the USB Hard drive

       NOTE:  The boot loader will automatically boot Centos after 3 seconds.
              Do not worry, we will customize this to boot Windows as well.
               -- Let it boot into Centos


    n. After reboot, you will see the "Initial Setup" page
       1) Single-click on "License Information"
       2) Click "I accept the license agreement"
          Press "Done"
       3) Press "Finish Configuration"  [in the bottom right corner]
       
     
    o. You should see the welcome screen with the name of the account
       1) Single-click on your account name
       2) Enter your password
          Press "Signin"

    p. In the "Welcome" popup screen,
       1) For language, select "English" and press "Next"
       2) For "Typing", select English (US)" and press "Next"
       3) For "Wi-fi", press "Skip"
       4) For "Privacy",
             Under Location Services, choose "Off" and press "Next
       5) For the "Connect Your Online Accounts" press "Skip"
       6) Press "Start using CentOS Linux"
       
     

Part 2: Configure your unix user account to have sudo access
------------------------------------------------------------
You don't want your personal unix account to be root
But, you do want it to have sudo access (so you can temporarily simulate root).  Here's how.
 1. Add your user to the sudoers    (so your unix account can become root using sudo -s)
    unix> su -
          <Enter the root password>

    unix> visudo
           
          # Add this line to the end:
          <your unix username> ALL=(ALL) ALL
  
    unix> exit
    unix> sudo -l
    
    
 2. Add this to your .bashrc
    unix> vi ~/.bashrc

      # User specific aliases and functions
      alias c=clear
      alias r='fc -e -'
      alias ls='ls -F'
      alias rls='while [ 1 ]; do clear; echo `date`; ls -ltr; sleep 3; done'
      alias x=exit    
      
      # Set bash prompt editing vi-style
      set -o vi

      # Setup the prompt to show the username, hostname, and working directory
      export PS1='\u@\h (\!) $PWD > '


 3. Adjust your terminal windows colors
    a. Open a terminal  (right-click on the desktop -> Open in Terminal)
    b. Right-click -> Uncheck "Show Menubar"
    c. Right-click -> Profiles -> Profile Preferences
       1) In the "Colors" tab
          Uncheck "Use colors from system theme"
          Built-in schems:  White on blck
          Built-in schemes: XTerm

       2) In the "Scrolling" tab
          Scrollback:  1000000

       3) In the "General" tab
          Initial terminal size:  132 columns     24 rows

       4) Press Close

    d. Open a new terminal
       1) Pull Edit / PReferences
       2) Click on the 'General' tab
          a) Uncheck "Show menubar by default in new terminals"

       3) Click on the 'Shortcuts' tab
          a) Double-click on 'New Terminal in New Window' and press Ctrl-T


  4. Setup vi defaults
     NOTE:  Add the :syntax off line to your .vimrc
     
     unix> vi ~/.vimrc
     
     :syntax off


  5. Setup Control-T to open a new terminal
     a. Pull System Tools / Settings
     b. Select Keyboard
     c. Click on the "Shortcuts" tab
     d. Click on "Custom Shortcuts"
     e. Press +
        Name:  Run a Terminal
           Command:  gnome-terminal

     f. Double-click on your 'Run a Terminal' item
        Press "Edit"
        press Ctrl-T
        Close this little edit shortcut window

     g. Close the keyboard window

     h. Verify that it works
        1) Press Control-T twice and you should see two terminal windows 




Part 3: Adjust the Grub Boot Loader to Show a "Windows 7" option on bootup
--------------------------------------------------------------------------
Assumption:
  A) Your Windows partition is bootable from /dev/sda2
  B) In the grub.conf,  (hd0,1) refers to    /dev/sda2
     Run fdisk -l and look for the Boot partition to verify that /dev/sda2 is the bootable windows partition
             
 1. Adjust the /etc/grub.conf 
    unix> sudo -s
    unix> vi /etc/grub.d/40_custom
  
    menuentry "Windows 7" {
     set root='(hd0,2)'
     chainloader +1
   } 
 
 
   # NOTE:
   #  In the 40_custom file, you might have to try a few different partitions to find Windows
   #   if you have Windows installed on the first partition of your first disk, you will use (hd0,1)
   #      set root='(hd0,1)'   failed
   #      set root='(hd0,2)'   worked!   Windows 7 would boot up
   
   
 2. Rebuild the grub boot loader
    unix> grub2-mkconfig -o /boot/grub2/grub.cfg 
      
 3. Reboot
    unix> sudo reboot
    
 4. On the grub boot menu, Select Windows 7
    -- Select Windows 7
    -- Verify that Windows 7 actually boots up

 5. **OPTIONAL** Set the default grub menu to be Windows 7
    a. Reboot back to Centos 7
    b. Tell grub to use menu option #3 (Windows 7) as the default option
       unix> sudo -s
       unix> grub2-set-default 2     # NOTE:  setting the value to 2 refers to menu option #3  (for Windows 7)
    
    c. Rebuild the grub boot loader
       unix> grub2-mkconfig -o /boot/grub2/grub.cfg
       
    d. Reboot
       unix> sudo reboot
       
       Now, The 3rd menu option (Windows 7) is your default menu choice
       
       


Part 4: Mount your Windows Parition so you can access your Windows files from CentOS
------------------------------------------------------------------------------------
Assumption:  Your Windows partition that holds your C:\ drive is mapped to /dev/sda2
             Run fdisk -l and look for the Boot partition to verify that /dev/sda2 is the bootable windows partition

 1. Setup the epel packages for yum
    unix> sudo yum install epel-release

 2. Install the ntfs-3g package
    unix> sudo yum install ntfs-3g
 
 3. Install the fuse driver (to mount detected drives)
    unix> sudo yum install fuse
    unix> sudo modprobe fuse
    
 4. Create a CentOS mount directory for Windows
    unix> sudo mkdir /mnt/windows
    
 5. Mount the Windows C:\ drive on /dev/sda2 to /mnt/windows
    unix> sudo mount -t ntfs-3g /dev/sda2 /mnt/windows

 6. Verify that your Windows C:\ drive appears under /mnt/windows
    unix> ls /mnt/windows
    You should see the same files and directories under your Windows C:\ drive
    
 7. Configure this mount point so it is mounted automatically on every reboot
    unix> sudo vi /etc/fstab
    
       # Add this line to mount the Windows C:\ drive to /mnt/windows
       /dev/sda2    /mnt/windows    ntfs-3g        defaults    0    0
    
 8. Verify it works:
    a. Reboot the centos machine
       unix> sudo reboot
       
    b. Verify that you can see these files
       unix> ls  /mnt/windows
             -- You should see your Windows C:\ drive
             
           
    
Part 5: Install Development Tools
---------------------------------
 1. Download & Install Java 8
    a. Download Java JDK to your c:\vault
       On your Windows box, download jdk-8u151-linux-x64.rpm
       1) Go to http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
       2) Browse to Java SE Development Kit 8u151
       3) Click Accept License Agreement
       4) Click on jdk-8u151-linux-x64.rpm
       5) Save it to your Downloads
         
          CAREFUL:  You want to install the jdk- file  (not the jre- file)
       
       # Install the Java jdk 8.0.73
       unix> sudo rpm -ivh ~/Downloads/jdk-8u151-linux-x64.rpm
   
       # Verify it worked
       unix> /usr/java/latest/bin/java -version
       
       You should see this:
          java version "1.8.0_151"
          Java(TM) SE Runtime Environment (build 1.8.0_151-b12)
          Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)


 2. Make sure this version of Java is in your path
    a. Set your .bashrc to set your JAVA_HOME
       unix> vi ~/.bashrc
      
          # Setup JAVA_HOME to use Java 1.8 and add it to the path
          export JAVA_HOME=/usr/java/jdk1.8.0_151
          export PATH=${JAVA_HOME}/bin:$PATH
    
    b. Verify this version of java is in your path and JAVA_HOME is set
       1) Open a new terminal  (press Ctrl-T)
       2) unix> java -version
       
       You should see this:
          java version "1.8.0_151"
          Java(TM) SE Runtime Environment (build 1.8.0_151-b12)
          Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)


 3. Install Maven 3.3.9
    NOTE:  Maven 3.3.9 requires Java 1.7 or later
   
    a. Download Maven apache-maven-3.3.1-bin.zip
       1) Go to https://maven.apache.org/download.cgi
       2) Look for apache-maven-3.3.9-bin.tar.gz
          *OR*
          Go to http://mirror.olnevhost.net/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
          
       3) Save apache-maven-3.3.9-bin.tar.gz to your Downloads
       
       
    b. Install Maven to your /opt
       unix> cd /opt
       unix> sudo mv ~/Downloads/apache-maven-3.3.9-bin.tar.gz  . 
       unix> sudo tar zxvf apache-maven-3.3.9-bin.tar.gz
       unix> sudo rm apache-maven-3.3.9-bin.tar.gz

    c. Change ownership of the /opt/apache-maven-3.3.9 to your regular account
       unix> sudo chown -R adam:adam /opt/apache-maven-3.3.9
    
    d. Update your /opt/apache-maven-3.3.9/conf/settings.xml with any special settings you need
    
    e. Adjust your .bashrc with M2_HOME and adding it your path
       unix> vi ~/.bashrc
    
       # Add these to the end of your .bashrc
       export MAVEN_OPTS=" -Xmx2048m "
       export M2_HOME=/opt/apache-maven-3.3.9
       export PATH=${PATH}:${M2_HOME}/bin

    f. Verify that maven works
       unix> source ~/.bashrc
       unix> mvn -version
       
       Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T11:41:47-05:00)
       Maven home: /opt/apache-maven-3.3.9
       Java version: 1.7.0_55, vendor: Oracle Corporation
       Java home: /usr/java/jdk1.7.0_55/jre
       Default locale: en_US, platform encoding: UTF-8
       OS name: "linux", version: "2.6.32-573.18.1.el6.x86_64", arch: "amd64", family: "unix"

    g. Get your maven effective settings
       unix> mvn help:effective-settings
       
       Your downloads should work
       
       You should see this:
       [INFO] ------------------------------------------------------------------------
       [INFO] BUILD SUCCESS
       [INFO] ------------------------------------------------------------------------
       [INFO] Total time: 03:45 min
       [INFO] Finished at: 2016-02-23T14:02:56-05:00
       [INFO] Final Memory: 14M/119M
       [INFO] ------------------------------------------------------------------------


 4. Download & Install Intellij Community Edition (for Linux)
    a. Download IntelliJ Community Edition for Linux
       1) Go to https://www.jetbrains.com/idea/download
       2) Select Linux
       3) Click "Download" under Community
          *OR*
          Go to https://www.jetbrains.com/idea/download/download-thanks.html?platform=linux&code=IIC
       3) Save ideaIC-2016.1.3.tar.gz to your "Downloads" directory
   
    b. Install IntelliJ
       1) Install Intellij to your /opt     
          unix> cd /opt
          unix> sudo mv ~/Downloads/ideaIC-2016.1.3.tar.gz .
          unix> sudo tar zxvf ideaIC-2016.1.3.tar.gz
          unix> sudo rm ideaIC-2016.1.3.tar.gz

       2) Change ownership of the /opt/apache-maven-3.3.9 to your regular account
          unix> sudo chown -R adam:adam /opt/ideaIC-2016.1.3
        
       3) Add the intellij/bin to your PATH
          unix> vi ~/.bashrc
          
          export IDEA_HOME=/opt/idea-IC-145.1617.8
          export PATH=${PATH}:${IDEA_HOME}/bin

       3) Startup Intellij
          unix> source ~/.bashrc
          unix> idea.sh

       4) You will be prompted if you want to import settings
          Click "I do not have a previous version of Intellij IDEA" and press OK
 
       5) Provide the Activation Code
       
       6) In the Set UI theme, go with defaults and press "Next"
       7) In the "Create Desktop Entry" page, use defaults and press Next
       8) In the "Tune IDEA to your tasks), go with defaults and click Next
       9) In the "Download featured plugins", go with defaults and press "Start using intellij IDEA"
      10) Close Intellij
      
    c. Add a shortcut for Intellij to your top Panel
       1) Left click on Applications -> Programming -> RIGHT_CLICK on Intellij IDEA -> Add this launcher to panel
       
    d. Configure centOS shortcuts so that they do not conflict with intellij
       1) Adjust Ctrl-Alt-Left and Ctrl-Alt-Right 
          a) Pull System -> Preferences -> Keyboard Shortcuts
          b) Scroll down to "Switch to workspace on the left of the current workspace"
          c) Single-click on "Switch to workspace on the left of the current workspace"
             -- Press the backspace key to disable it
          
          d) Single-click on "Switch to workspace on the right of the current workspace"
             -- Press the backspace key to disable it
          d) Press Close
          
       2) Adjust Alt-F1 so it is not captured by centOS   
          a) Pull System -> Preferences -> Keyboard Shortcuts
          b) Scroll to "Show the panel's main menu"   (Alt+F1)
             -- Press the backspace key to disable it
          b) Press Close
       
      3) Setup Ctrl-T to open a terminal
          a) Pull System -> Preferences -> Keyboard Shortcuts
          b) Scroll to "Run a terminal"
             -- Single click on the row that has "Run a terminal"
             -- Press Ctrl-T
          c) Press Close
             
             
 5. Compile & Install the latest version of git
    NOTE:  This is needed because Intellij does not like the older version of git that is installed from the yum repositories
    
    # Install development tools
    unix> sudo yum groupinstall "Development Tools"
    unix> sudo yum install zlib-devel perl-ExtUtils-MakeMaker asciidoc xmlto openssl-devel
    
    # Install curl-devel (so that git can clone https calls)
    unix> sudo yum install curl-devel
    
    # Download the git 2.9.2 release
    a) Go to https://github.com/git/git/archive/v2.9.2.zip
    b) Save to your "Downloads"
    *OR*
    unix> cd /opt
    unix> sudo wget -O git.zip https://github.com/git/git/archive/v2.9.2.zip
          *OR*
          Go to https://github.com/git/git/releases
          Click on the latest release zip


    # Compile & Install Git 2.9.2
    unix> sudo -s
    unix> cd /opt
    unix> unzip git.zip
    unix> rm git.zip
    unix> cd git-2.9.2
    unix> make configure
    unix> ./configure --prefix=/usr/local
    unix> make all doc
    unix> make install install-doc
    unix> exit
    
    # Verify that the Git version is now updated
    unix> git --version
    git version 2.9.2
    
    # Update Intellij and tell it where the latest git version is
    1) Get the path of your new git
       unix> which git
       /usr/local/bin/git
    
    2) Configure Intellij to use your new version of Git
       a) Startup intellij
          unix> idea.sh
       
       b) If a previous project appears, then close it
       c) On the Intellij welcome screen, 
          Pull Configure -> Settings
       d) Search for git  
       e) Click on Version Control -> Git
       f) Path to Git Executable to be:   /usr/local/bin/git
       g) Press the "Test" button
         -- It should show "Git executed successfully...Git version is 2.9.2.0"
       h) Press OK
       i) Press OK
       j) Close IntelliJ
       
       
 6. Install the telnet command
    NOTE:  This will not install the telnet service -- only the telnet client
    unix> sudo yum install telnet
 
 
 7. Increase the maximum number of open files from 1024 to 65535
    a. Show max open files
       unix> sudo -s
       unix> ulimit -a | grep 'open file'
             open files      (-n) 1024

    b. Increase the max number of open files to 65536
       unix> vi /etc/sysctl.conf
       
         # Increase max number of open files
         fs.file-max = 65536
    
       
       unix> vi /etc/security/limits.conf 
            
         # Increase max number of open files
         *          soft     nproc          65535
         *          hard     nproc          65535
         *          soft     nofile         65535
         *          hard     nofile         65535


    c. Reboot the operating system
       unix> reboot
       
    d. Verify the limit is greater by running ulimit again
       unix> ulimit -a | grep 'open file' 
             -- You should see 65535


 8. Update Everything
    1. Turn off the screen update (as it might intefere with the long yum update)
       1) Login to CentOS VM
       2) Pull System / Preferences / Screensaver
          -- Uncheck "Activate screensaver when computer is idle"
          -- Press Close
    
    2. Run Yum Update
       unix> sudo yum update
             Press Y <Enter>
       
          W A I T     1 0     M I N U T E S
       
    3. Reboot
       unix> sudo reboot
       
   
 9. Install Accumulo Quick-Install
    [see learnAccumulo / howToSetupAccumuloQuickInstall.txt]


10. Install Postgres 9.3
    [see learnPostgreSQL / howToInstallPostgresOnCentOS.txt]


11. **OPTIONAL** Install Openvpn
    [see learnCentOS / howToInstallOpenVPN.txt]
    

12. **OPTIONAL** Install Putty
    [see learnCentOS / howToInstallPutty.txt]
    
     
13. Install Chrome
    [see learnCentos / howToInstallChrome.txt]
    

14. Install FireBug

              
