How to Upgrade the MATE Window Manager (on Centos 7)
----------------------------------------------------
Problem:  My Centos 7 is running Mate 1.16 and I want to upgrade to the 1.23

References
----------
https://tylersguides.com/guides/install-mate-on-centos-8/
https://wiki.mate-desktop.org/pages/building.html
https://pub.mate-desktop.org/releases/1.23
https://superuser.com/questions/453361/how-can-i-perform-a-full-texlive-installation-all-packages-in-centos
https://www.systutorials.com/how-to-install-tex-live-on-centos-7-linux/
http://www.linuxfromscratch.org/blfs/view/svn/pst/texlive.html


PROBLEM:  Atril depends on SyncTex 1.21 but the version of latex on Centos 7 is old
Solution: Download & Install Latest

INCOMPLETE -- NOT FULLY TESTED


Approach
--------
 1. Try the yum commands
    -- Except that the latest binaries are not present in the EPEL repository

 2. Build mate from source


Part 1: Use Yum to install MATE
-------------------------------
 1. Identify what version you have installed
    a. Pull System -> About Mate
       -- You will see the version 1.16.2

    b. Have Yum tell you what is installed
        unix> sudo yum list installed | grep -i mate
        mate-applets.x86_64                    1.16.0-2.el7                  @epel
        mate-backgrounds.noarch                1.16.0-1.el7                  @epel
        mate-calc.x86_64                       1.8.0-1.el7                   @epel
        mate-control-center.x86_64             1.16.1-1.el7                  @epel
        mate-control-center-filesystem.x86_64  1.16.1-1.el7                  @epel
        mate-desktop.x86_64                    1.16.2-1.el7                  @epel
        mate-desktop-libs.x86_64               1.16.2-1.el7                  @epel
        mate-dictionary.x86_64                 1.16.1-2.el7                  @epel
        mate-disk-usage-analyzer.x86_64        1.16.1-2.el7                  @epel
        mate-icon-theme.noarch                 1.16.2-1.el7                  @epel
        mate-media.x86_64                      1.16.0-1.el7                  @epel
        mate-menus.x86_64                      1.16.0-1.el7                  @epel
        mate-menus-libs.x86_64                 1.16.0-1.el7                  @epel
        mate-menus-preferences-category-menu.x86_64
        mate-notification-daemon.x86_64        1.16.1-1.el7                  @epel
        mate-panel.x86_64                      1.16.2-1.el7                  @epel
        mate-panel-libs.x86_64                 1.16.2-1.el7                  @epel
        mate-polkit.x86_64                     1.16.0-2.el7                  @epel
        mate-screensaver.x86_64                1.16.1-1.el7                  @epel
        mate-screenshot.x86_64                 1.16.1-2.el7                  @epel
        mate-search-tool.x86_64                1.16.1-2.el7                  @epel
        mate-session-manager.x86_64            1.16.1-3.el7                  @epel
        mate-settings-daemon.x86_64            1.16.2-1.el7                  @epel
        mate-system-log.x86_64                 1.16.1-2.el7                  @epel
        mate-system-monitor.x86_64             1.16.0-2.el7                  @epel
        mate-terminal.x86_64                   1.16.3-2.el7                  @epel
        mate-themes.noarch                     3.22.19-2.el7                 @epel
        mate-user-guide.noarch                 1.16.0-1.el7                  @epel
        mate-utils-common.noarch               1.16.1-2.el7                  @epel

        -- It looks like you have version 1.16 installed


 2. Upgrade your yum EPL Repo
    a. Updateeyour EPL Repo for Centos 7.x
       unix> sudo yum search epel-release
       unix> sudo yum info epel-release
       unix> sudo yum install epel-release

   b. Verify your yum repo list
      unix> sudo yum repolist
      -- You should see this line:
       epel/x86_64                                Extra Packages for Enterprise Linux 7 - x86_64                              13,217

   c. List all *mate* software available in an EPEL
      unix> sudo yum --disablerepo="*" --enablerepo="epel" list available | grep -i mate


 3. Install Mate using your yum EPL Repo
    unix> sudo yum groupinstall "mate-desktop"

    -- If this does not upgrade to the latest, then you will have to build from source




Part 2: Build Mate from source code
-----------------------------------
 1. Login to Centos 7 with the gnome (or any non-mate window manager)
    -- Do not login with the Mate window Manager

 2. Uninstall MATE 1.16.2
    unix> sudo yum groupremove mate-desktop

 3. Create these directories:   mate-src, mate-build, and mate-installed
    unix> cd
    unix> mkdir mate-src mate-build mate-installed

 4. Download all of the source code
    a. Create a text file with this information in it:
       unix> vi /tmp/mate.downloads.txt

                caja-1.24.0.tar.xz
                caja-dropbox-1.24.0.tar.xz
                caja-extensions-1.24.0.tar.xz
                engrampa-1.24.0.tar.xz
                eom-1.24.0.tar.xz
                libmatekbd-1.24.0.tar.xz
                libmatemixer-1.24.0.tar.xz
                libmateweather-1.24.0.tar.xz
                marco-1.24.0.tar.xz
                mate-applets-1.24.0.tar.xz
                mate-backgrounds-1.24.1.tar.xz
                mate-calc-1.24.0.tar.xz
                mate-common-1.24.1.tar.xz
                mate-control-center-1.24.0.tar.xz
                mate-desktop-1.24.0.tar.xz
                mate-icon-theme-1.24.0.tar.xz
                mate-indicator-applet-1.24.0.tar.xz
                mate-media-1.24.0.tar.xz
                mate-menus-1.24.0.tar.xz
                mate-netbook-1.24.0.tar.xz
                mate-notification-daemon-1.24.0.tar.xz
                mate-panel-1.24.0.tar.xz
                mate-polkit-1.24.0.tar.xz
                mate-power-manager-1.24.1.tar.xz
                mate-screensaver-1.24.0.tar.xz
                mate-sensors-applet-1.24.0.tar.xz
                mate-session-manager-1.24.0.tar.xz
                mate-settings-daemon-1.24.0.tar.xz
                mate-system-monitor-1.24.0.tar.xz
                mate-terminal-1.24.0.tar.xz
                mate-user-guide-1.24.0.tar.xz
                mate-user-share-1.24.0.tar.xz
                mate-utils-1.24.0.tar.xz
                mozo-1.24.0.tar.xz
                pluma-1.24.0.tar.xz
                python-caja-1.24.0.tar.xz

    b. Download all of the files to this directory:  mate-src
       unix> cd ~/mate-src
       unix> for file in $(cat /tmp/mate.downloads.txt);  do wget https://pub.mate-desktop.org/releases/1.24/${file}; done
       unix> wget https://pub.mate-desktop.org/releases/1.23/atril-1.23.2.tar.xz

    c. Download source files for dependencies
       unix> cd ~/mate-src
       unix> wget https://gitlab.freedesktop.org/xorg/lib/libxpresent/-/archive/master/libxpresent-master.tar.bz2
       unix> wget http://git.yoctoproject.org/cgit.cgi/libfakekey/snapshot/libfakekey-0.3.tar.bz2
       unix> wget http://ftp.gnome.org/pub/gnome/sources/glib/2.58/glib-2.58.1.tar.xz

    c. Unzip all of the files to this directory:  mate-build
       unix> cd ~/mate-build
       unix> for file in ~/mate-src/* ; do tar xf $file; done



 5. Compile and Install the libsynctex.so library
    a. Install dev files for libXaw
       unix> sudo yum install libXaw-devel poppler-glib-devel

    b. Create the destination directory
       unix> sudo rm -rf    /opt/texlive/2020
       unix> sudo mkdir -p  /opt/texlive/2020/lib   /opt/texlive/2020/bin   /opt/texlive/2020/include/synctex

    c. Add the directory /opt/texlive/2020/lib directory to the ld.so.conf
       -- So ldconfig will know to use these newly-compiled librariese
       unix> sudo -s
       unix> echo "/opt/texlive/2020/lib"  >  /etc/ld.so.conf.d/texlive.2020.conf
       unix> chmod ugo+r /etc/ld.so.conf.d/texlive.2020.conf
       unix> ldconfig -v   # Tell ldd to include this new directory when linking
       unix> exit

    d. Download texlive 2020 source code
       unix> cd
       unix> wget ftp://tug.org/texlive/historic/2020/texlive-20200406-source.tar.xz

    e. Unzip the source
       unix> cd
       unix> rm -rf textlive-20200406-source
       unix> tar xvf texlive-20200406-source.tar.xz

    f. Compile *only* the synctex package  (to generate libsynctex.so)
       export TEXARCH=$(uname -m | sed -e 's/i.86/i386/' -e 's/$/-linux/')
       cd texlive-20200406-source/texk/web2c
        ./configure     --enable-build-in-source-tree                               \
                             --prefix=/opt/texlive/2020                                  \
                             --bindir=/opt/texlive/2020/bin/$TEXARCH                     \
                             --datarootdir=/opt/texlive/2020                             \
                             --includedir=/opt/texlive/2020/include                      \
                             --infodir=/opt/texlive/2020/texmf-dist/doc/info             \
                             --libdir=/opt/texlive/2020/lib                              \
                             --mandir=/opt/texlive/2020/texmf-dist/doc/man               \
                             --disable-native-texlive-build                              \
                             --disable-static                                            \
                             --enable-shared                                             \
                             --disable-dvisvgm                                           \
                             --with-system-cairo                                         \
                             --with-system-fontconfig                                    \
                             --with-system-freetype2                                     \
                             --with-system-graphite2                                     \
                             --with-system-icu                                           \
                             --with-system-libgs                                         \
                             --with-system-libpng                                        \
                             --with-system-pixman                                        \
                             --with-system-zlib

        make synctex
         -- If the make finishes successfully, then libsynctex.so should be here:

        ls -l .libs
        -- You should see this:
                    lrwxrwxrwx. 1 adam adam     16 Apr 26 19:28 libsynctex.la -> ../libsynctex.la
                    -rw-rw-r--. 1 adam adam    940 Apr 26 19:28 libsynctex.lai
                    lrwxrwxrwx. 1 adam adam     19 Apr 26 19:28 libsynctex.so -> libsynctex.so.2.0.0*
                    lrwxrwxrwx. 1 adam adam     19 Apr 26 19:28 libsynctex.so.2 -> libsynctex.so.2.0.0*
                    -rwxrwxr-x. 1 adam adam 430400 Apr 26 19:28 libsynctex.so.2.0.0*
                    -rwxrwxr-x. 1 adam adam  65896 Apr 26 19:28 synctex*


    g. Install the library and symlinks to /opt/texlive/2020/lib
       cd /home/$USER/texlive-20200406-source/texk/web2c/.libs
       sudo -s
       cp synctex  /opt/texlive/2020/bin
       cp libsynctex.la  libsynctex.so.2.0.0    libsynctex.lai  /opt/texlive/2020/lib
       cd /opt/texlive/2020/lib
       ln -s libsynctex.so.2.0.0 libsynctex.so.2
       ln -s libsynctex.so.2.0.0 libsynctex.so
       ldconfig                                  # Update the ldconfig cache
       exit

    h. Install the synctex.pc (so configure can find the library)
       cd /home/$USER/texlive-20200406-source/texk/web2c
       sudo cp synctex.pc  /usr/local/lib/pkgconfig

    i. Copy the include files to /opt/texlive/2020/include/synctex
       sudo cp *.h /opt/texlive/2020/include/synctex

    i. Verify that the /opt/texlive/2020/lib directory has these files:
       unix> ls -l  /opt/texlive/2020/lib
       -- You should see this:
                 -rw-r--r--. 1 root root    940 Apr 26 19:34 libsynctex.lai
                 lrwxrwxrwx. 1 root root     19 Apr 26 19:35 libsynctex.so -> libsynctex.so.2.0.0*
                 lrwxrwxrwx. 1 root root     19 Apr 26 19:35 libsynctex.so.2 -> libsynctex.so.2.0.0*
                 -rwxr-xr-x. 1 root root 430400 Apr 26 19:34 libsynctex.so.2.0.0*


    j. Verify the libsynctex.so libraries are found in the ldconfig cache
       unix> ldconfig -p | grep /opt/texlive/2020/lib
       -- You should see this:
             	libsynctex.so.2 (libc6,x86-64) => /opt/texlive/2020/lib/libsynctex.so.2
             	libsynctex.so (libc6,x86-64) => /opt/texlive/2020/lib/libsynctex.so


    k. Verify that the synctex program can find its shared libraries
       unix> ldd /opt/texlive/2020/bin/synctex
       -- You should see this:
                    linux-vdso.so.1 =>  (0x00007fffe572e000)
                    libsynctex.so.2 => /opt/texlive/2020/lib/libsynctex.so.2 (0x00007f1c0e2bc000)
                    libz.so.1 => /lib64/libz.so.1 (0x00007f1c0e0a6000)
                    libm.so.6 => /lib64/libm.so.6 (0x00007f1c0dda4000)
                    libc.so.6 => /lib64/libc.so.6 (0x00007f1c0d9d6000)
                    /lib64/ld-linux-x86-64.so.2 (0x00007f1c0e4d7000)



 6. Install dependent libraries (including python3) to compile MATE
    unix> sudo yum install libxml2-devel libxslt-devel glib2-devel libIDL-devel \
                            dbus-devel dbus-glib-devel polkit-devel flex popt-devel \
                            bison bzip2-devel libgcrypt-devel libcanberra-devel gtk3-devel \
                            libart_lgpl-devel libglade2-devel libtasn1-tools libxklavier-devel libsoup-devel \
                            icon-naming-utils unique-devel libcanberra-gtk3 libcanberra-devel libwnck3-devel \
                            librsvg2-devel libSM-devel libXdamage-devel \
                            gobject-introspection-devel upower-devel intltool  \
                            libtasn1-devel libtool gamin-devel rarian-devel dconf-devel \
                            libsecret-devel libgnome-keyring-devel    \
                            iso-codes-devel gucharmap wireless-tools-devel xorg-x11-util-macros file-libs djvulibre libmount-devel libnotify-devel \
                            mesa-libGLES mesa-libGLES-devel xorg-x11-xtrans-devel enchant-devel gtksourceview3-devel  libpeas-devel \
                            python3  vte291-devel  libXScrnSaver-devel  libudisks2-devel  libgtop2-devel  gtkmm30-devel  \
                            texlive-kpathsea-lib-devel  poppler-glib-devel   libevent libevent-devel


 7. Compile MATE dependent libraries (that cannot be installed with Yum)
    a. Compile & Install libxpresent-master
       unix> cd ~/mate-build
       unix> cd libxpresent-master
       unix> mkdir m4
       unix> ./autogen.sh
       unix> make
       unix> sudo make install
       unix> cd ..
       unix> cp -r libxpresent-master ../mate-installed

    b. Compile & Install libfakekey  (used to simulate X11 Keypress events)
       unix> cd ~/mate-build
       unix> cd libfakekey-0.3
       unix> ./autogen.sh
       unix> make
       unix> sudo make install
       unix> cd ..
       unix> cp -r libfakekey-0.3 ../mate-installed

    c. Compile and Install glib2 2.58.1   (required to compile caja)
       unix> cd ~/mate-build
       unix> cd glib-2.58.1
       unix> ./autogen.sh
       unix> make
       unix> sudo make install




 8. Compile MATE in this specific order
    Notes:
     A) The -std=gnu99 fixes the NGROUP_MAX not defined problem
     B) We cannot install atril-1.24 because it requires glib-2.62 (which requires meson to build)


     a. Create this file:   /tmp/mate.packages.txt

        unix> vi /tmp/mate.packages.txt

            mate-common-1.24.1
            mate-desktop-1.24.0
            libmatekbd-1.24.0        --enable-oss
            libmatemixer-1.24.0      --enable-locations-compression
            libmateweather-1.24.0
            mate-menus-1.24.0
            caja-1.24.0                  CFLAGS="-std=gnu99"
            marco-1.24.0
            mate-settings-daemon-1.24.0
            mate-session-manager-1.24.0
            mate-panel-1.24.0
            mate-control-center-1.24.0   CFLAGS="-std=gnu99"   CPPFLAGS="-D__sun"
            mate-polkit-1.24.0
            mate-notification-daemon-1.24.0
            mate-backgrounds-1.24.1    USE_AUTOGEN
            mate-icon-theme-1.24.0
            pluma-1.24.0
            mate-terminal-1.24.0
            mate-screensaver-1.24.0
            mate-calc-1.24.0
            mate-utils-1.24.0
            mate-system-monitor-1.24.0
            eom-1.24.0
            caja-extensions-1.24.0
            atril-1.23.2   --enable-pixbuf --enable-introspection   CFLAGS="-std=gnu99"
            mate-media-1.24.0
            mate-power-manager-1.24.1
            python-caja-1.24.0
            mozo-1.24.0
            mate-applets-1.24.0
            mate-sensors-applet-1.24.0
            mate-indicator-applet-1.24.0
            caja-dropbox-1.24.0
            mate-user-guide-1.24.0
            mate-user-share-1.24.0
            eengrampa-1.24.0  --enable-magic --enable-run-in-place
            mate-netbook-1.24.0


      b. Create a bash script that will compile and build all packages
         unix> vi ~/mate-build/compileAll.sh

              #!/bin/bash
              ####################################################################
              # Filename:  compileAll
              #
              # Purpose:   Compile & Install all of the 30+ Mate C programs
              ####################################################################
              readonly SCRIPT_NAME=`basename $0`

              echo "${SCRIPT_NAME} started as of `date`"

              export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/usr/local/lib/x86_64-pc-linux-gnu/pkgconfig"
              export PATH=${PATH}:/usr/local/bin               # Add /usr/local/bin to the PATH to find mate-autogen

              # Compile the packages in the order specified by /tmp/mate.packages.txt
              for d in $(awk '{print $1}' /tmp/mate.packages.txt)
              do
                     echo -e "\nStarted $d"

                     cd /home/adam/mate-build

                     OPTIONS=$(grep $d  /tmp/mate.packages.txt | sed -e 's/^ *//' | sed -e 's/^[-.0-9a-zA-Z]*//' | sed -e 's/^ *//')
                     DIR=$(echo $d | awk '{print $1}')
                     cd $DIR                  || { echo cd failed for $DIR; exit 1; }

                     export CFLAGS=""
                     if [[ "$OPTIONS" =~ CFLAGS ]]; then
                        # I found CFLAGS.  So, pull them out (without the CFLAGS= part)
                        export CFLAGS=`echo ${OPTIONS}  |  sed -r -e 's/.*CFLAGS="([^"]+)".*$/\1/'  `
                     fi

                     export CPPFLAGS=""
                     if [[ "$OPTIONS" =~ CPPFLAGS ]]; then
                        # I found CPPFLAGS.  So, pull them out (without the CPPFLAGS= part)
                        export CPPFLAGS=`echo ${OPTIONS}  | sed -r -e 's/.*CPPFLAGS="([^"]+)".*$/\1/'`
                     fi

                     echo -e "\nBuilding this pkg:  DIR-->${DIR}<--  CONFIGURE_OPTIONS-->${CONFIGURE_OPTIONS}<--   CFLAGS-->${CFLAGS}<--   CPPFLAGS-->${CPPFLAGS}<--"

                     if [[ "$OPTIONS" =~ USE_AUTOGEN ]]; then
                         # I found USE_AUTOGEN.  So, do not run configure
                        ./autogen.sh || { echo autogen.sh failed for $DIR; exit 1; }
                     else
                         # Run configure
                         export CONFIGURE_OPTIONS=""
                         export CONFIGURE_OPTIONS=` echo ${OPTIONS}  | sed -r -e  's/CFLAGS="[^"]+"//' | sed -r -e  's/CPPFLAGS="[^"]+"//'  `
                        ./configure $CONFIGURE_OPTIONS || { echo configure failed for $DIR; exit 1; }
                     fi

                     make -j 1                      || { echo make failed for $DIR; exit 1; }
                     make install                   || { echo make install failed for $DIR; exit 1; }
                     cd ..
                     cp -r -f $DIR ../mate-installed

                     echo -e "Finished $d"
               done

               echo "${SCRIPT_NAME} finished successfully as of `date`"



      c. Make the script executable
         unix> chmod u+x ~/mate-build/compileAll.sh

      d. Execute the script
         a. Open a new terminal
         b. Run the script
            unix> cd
            unix> sudo bash ~/mate-build/compileAll.sh | tee /tmp/compileAll.log

         c. Watch the log file
            unix> tail -10000f /tmp/compileAll.log | grep -i "Building this pkg"


 9. Try out the MATE window manager
    unix> sudo systemctl set-default graphical.target
    unix> sudo systemctl enable gdm.service
    unix> sudo systemctl restart gdm.service




