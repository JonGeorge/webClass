How to Upgrade the MATE Window Manager (on Centos 7)
----------------------------------------------------
Problem:  My Centos 7 is running Mate 1.16 and I want to upgrade to the 1.23

References
----------
https://tylersguides.com/guides/install-mate-on-centos-8/
https://wiki.mate-desktop.org/pages/building.html
https://pub.mate-desktop.org/releases/1.23

INCOMPLETE -- NOT FULLY TESTED


Approach
--------
 1. Try the yum commands
    -- Except that the latest binaries are not present in the EPEL repository

 2. Build mate from source


Part 1: Use Yum to install MATE
-------------------------------
 1. Identify what version you have installed
    a. Pull System -> About Mate
       -- You will see the version 1.16.2

    b. Have Yum tell you what is installed
        unix> sudo yum list installed | grep -i mate
        mate-applets.x86_64                    1.16.0-2.el7                  @epel
        mate-backgrounds.noarch                1.16.0-1.el7                  @epel
        mate-calc.x86_64                       1.8.0-1.el7                   @epel
        mate-control-center.x86_64             1.16.1-1.el7                  @epel
        mate-control-center-filesystem.x86_64  1.16.1-1.el7                  @epel
        mate-desktop.x86_64                    1.16.2-1.el7                  @epel
        mate-desktop-libs.x86_64               1.16.2-1.el7                  @epel
        mate-dictionary.x86_64                 1.16.1-2.el7                  @epel
        mate-disk-usage-analyzer.x86_64        1.16.1-2.el7                  @epel
        mate-icon-theme.noarch                 1.16.2-1.el7                  @epel
        mate-media.x86_64                      1.16.0-1.el7                  @epel
        mate-menus.x86_64                      1.16.0-1.el7                  @epel
        mate-menus-libs.x86_64                 1.16.0-1.el7                  @epel
        mate-menus-preferences-category-menu.x86_64
        mate-notification-daemon.x86_64        1.16.1-1.el7                  @epel
        mate-panel.x86_64                      1.16.2-1.el7                  @epel
        mate-panel-libs.x86_64                 1.16.2-1.el7                  @epel
        mate-polkit.x86_64                     1.16.0-2.el7                  @epel
        mate-screensaver.x86_64                1.16.1-1.el7                  @epel
        mate-screenshot.x86_64                 1.16.1-2.el7                  @epel
        mate-search-tool.x86_64                1.16.1-2.el7                  @epel
        mate-session-manager.x86_64            1.16.1-3.el7                  @epel
        mate-settings-daemon.x86_64            1.16.2-1.el7                  @epel
        mate-system-log.x86_64                 1.16.1-2.el7                  @epel
        mate-system-monitor.x86_64             1.16.0-2.el7                  @epel
        mate-terminal.x86_64                   1.16.3-2.el7                  @epel
        mate-themes.noarch                     3.22.19-2.el7                 @epel
        mate-user-guide.noarch                 1.16.0-1.el7                  @epel
        mate-utils-common.noarch               1.16.1-2.el7                  @epel

        -- It looks like you have version 1.16 installed


 2. Upgrade your yum EPL Repo
    a. Updateeyour EPL Repo for Centos 7.x
       unix> sudo yum search epel-release
       unix> sudo yum info epel-release
       unix> sudo yum install epel-release

   b. Verify your yum repo list
      unix> sudo yum repolist
      -- You should see this line:
       epel/x86_64                                Extra Packages for Enterprise Linux 7 - x86_64                              13,217

   c. List all *mate* software available in an EPEL
      unix> sudo yum --disablerepo="*" --enablerepo="epel" list available | grep -i mate


 3. Install Mate using your yum EPL Repo
    unix> sudo yum groupinstall "mate-desktop"

    -- If this does not upgrade to the latest, then you will have to build from source




Part 2: Build Mate from source code
-----------------------------------
 1. Switch to the gnome class window manager
    -- Login with the gnome

 2. Uninstall MATE 1.16.2
    unix> sudo yum groupremove mate-desktop

 3. Create these directories:   mate-src, mate-build, and mate-installed
    unix> cd
    unix> mkdir mate-src mate-build mate-installed

 4. Download all of the source code
    a. Create a text file with this information in it:
       unix> vi /tmp/mate.files.txt

                atril-1.23.2.tar.xz
                caja-1.23.4.tar.xz
                caja-dropbox-1.23.0.tar.xz
                caja-extensions-1.23.1.tar.xz
                engrampa-1.23.3.tar.xz
                eom-1.23.2.tar.xz
                libmatekbd-1.23.0.tar.xz
                libmatemixer-1.23.0.tar.xz
                libmateweather-1.23.0.tar.xz
                marco-1.23.2.tar.xz
                mate-applets-1.23.1.tar.xz
                mate-backgrounds-1.23.0.tar.xz
                mate-calc-1.23.0.tar.xz
                mate-common-1.23.3.tar.xz
                mate-control-center-1.23.3.tar.xz
                mate-desktop-1.23.3.tar.xz
                mate-icon-theme-1.23.3.tar.xz
                mate-indicator-applet-1.23.0.tar.xz
                mate-media-1.23.1.tar.xz
                mate-menus-1.23.0.tar.xz
                mate-netbook-1.23.0.tar.xz
                mate-notification-daemon-1.23.1.tar.xz
                mate-panel-1.23.3.tar.xz
                mate-polkit-1.23.0.tar.xz
                mate-power-manager-1.23.2.tar.xz
                mate-screensaver-1.23.1.tar.xz
                mate-sensors-applet-1.23.0.tar.xz
                mate-session-manager-1.23.0.tar.xz
                mate-settings-daemon-1.23.3.tar.xz
                mate-system-monitor-1.23.1.tar.xz
                mate-terminal-1.23.1.tar.xz
                mate-user-guide-1.23.1.tar.xz
                mate-utils-1.23.2.tar.xz
                mozo-1.23.1.tar.xz
                pluma-1.23.3.tar.xz
                python-caja-1.23.1.tar.xz


    b. Download all of the files to this directory:  mate-src
       unix> cd ~/mate-src
       unix> for file in $(cat /tmp/mate.files.txt);  do wget https://pub.mate-desktop.org/releases/1.23/${file}; done

    c. Download source files for dependencies
       unix> cd ~/mate-src
       unix> wget https://gitlab.freedesktop.org/xorg/lib/libxpresent/-/archive/master/libxpresent-master.tar.bz2
       unix> wget wget http://git.yoctoproject.org/cgit.cgi/libfakekey/snapshot/libfakekey-0.3.tar.bz2
       unix> wget http://ftp.gnome.org/pub/gnome/sources/glib/2.58/glib-2.58.1.tar.xz

    c. Unzip all of the files to this directory:  mate-build
       unix> cd ~/mate-build
       unix> for file in ~/mate-src/* ; do tar xf $file; done



 5. Install dependencies
    a. Install dependent libraries (including python3)
       unix> sudo yum install libxml2-devel libxslt-devel glib2-devel libIDL-devel \
                                    dbus-devel dbus-glib-devel polkit-devel flex popt-devel \
                                    bison bzip2-devel libgcrypt-devel libcanberra-devel gtk3-devel \
                                    libart_lgpl-devel libglade2-devel libtasn1-tools libxklavier-devel libsoup-devel \
                                    icon-naming-utils unique-devel libcanberra-gtk3 libcanberra-devel libwnck3-devel \
                                    librsvg2-devel libSM-devel libXdamage-devel \
                                    gobject-introspection-devel upower-devel intltool  \
                                    libtasn1-devel libtool gamin-devel rarian-devel dconf-devel \
                                    libsecret-devel libgnome-keyring-devel    \
                                    iso-codes-devel gucharmap wireless-tools-devel xorg-x11-util-macros file-libs djvulibre libmount-devel libnotify-devel \
                                    mesa-libGLES mesa-libGLES-devel xorg-x11-xtrans-devel enchant-devel gtksourceview3-devel  libpeas-devel \
                                    python3  vte291-devel  libXScrnSaver-devel  libudisks2-devel  libgtop2-devel  gtkmm30-devel


     b. Compile and Install libxpresent-master
        unix> cd ~/mate-build
        unix> cd libxpresent-master
        unix> mkdir m4
        unix> ./autogen.sh
        unix> make
        unix> sudo make install
        unix> cd ..
        unix> cp -r libxpresent-master ../mate-installed


     c. Compile & Install libfakekey  (used to simulate X11 Keypress events)
        unix> cd ~/mate-build
        unix> cd libfakekey-0.3
        unix> ./autogen.sh
        unix> make

        NOTE:  If you get errors, you may have to run this command:
                autoreconf --force --install

        unix> sudo make install
        unix> cd ..
        unix> cp -r libfakekey-0.3 ../mate-installed

     d. Compile and Install glib2 2.58.1   (required to compile caja)
        unix> cd ~/mate-build
        unix> cd glib-2.58.1
        unix> ./autogen.sh
        unix> make
        unix> sudo make install


 6. Compile MATE in this specific order
     a. Create this file:   /tmp/mate.packages.txt
        unix> vi /tmp/mate.packages.txt

            mate-common-1.23.3
            mate-desktop-1.23.3
            libmatekbd-1.23.0
            libmatemixer-1.23.0  --enable-oss
            libmateweather-1.23.0 --enable-locations-compression
            mate-menus-1.23.0
            caja-1.23.4                   CFLAGS="-std=c99"
            marco-1.23.2
            mate-settings-daemon-1.23.3
            mate-session-manager-1.23.0
            mate-panel-1.23.3
            mate-control-center-1.23.3    CFLAGS="-std=c99"   CPPFLAGS="-D__sun"
            mate-polkit-1.23.0
            mate-notification-daemon-1.23.1
            mate-backgrounds-1.23.0        USE_AUTOGEN
            mate-icon-theme-1.23.3
            pluma-1.23.3
            mate-terminal-1.23.1
            mate-screensaver-1.23.1
            mate-calc-1.23.0
            mate-utils-1.23.2
            mate-system-monitor-1.23.1
            eom-1.23.2
            atril-1.23.2   --enable-pixbuf --enable-introspection
            mate-media-1.23.1
            mate-power-manager-1.23.2
            python-caja-1.23.1
            mozo-1.23.1
            mate-applets-1.23.1
            mate-sensors-applet-1.23.0
            mate-indicator-applet-1.23.0
            caja-dropbox-1.23.0
            mate-user-guide-1.23.1
            caja-extensions-1.23.1
            engrampa-1.23.3  --enable-magic --enable-run-in-place
            mate-netbook-1.23.0

      b. Create a bash script that will compile and build all packages
         unix> vi ~/compileAll.sh

              export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig"
              export PATH=${PATH}:/usr/local/bin                   # Add /usr/local/bin to the PATH to find mate-autogen

              for d in $(awk '{print $1}' /tmp/mate.packages.txt)
              do
                     echo -e "\nStarted $d"

                     cd /home/adam/mate-build

                     OPTIONS=$(grep $d  /tmp/mate.packages.txt | sed -e 's/^ *//' | sed -e 's/^[-.0-9a-zA-Z]*//' | sed -e 's/^ *//')
                     DIR=$(echo $d | awk '{print $1}')
                     cd $DIR                  || { echo cd failed for $DIR; break; }

                     export CFLAGS=""
                     if [[ "$OPTIONS" =~ CFLAGS ]]; then
                        # I found CFLAGS.  So, pull them out (without the CFLAGS= part)
                        export CFLAGS=`echo ${OPTIONS}  |  sed -r -e 's/.*CFLAGS="([^"]+)".*$/\1/'  `
                     fi

                     export CPPFLAGS=""
                     if [[ "$OPTIONS" =~ CPPFLAGS ]]; then
                        # I found CPPFLAGS.  So, pull them out (without the CPPFLAGS= part)
                        export CPPFLAGS=`echo ${OPTIONS}  | sed -r -e 's/.*CPPFLAGS="([^"]+)".*$/\1/'`
                     fi

                     echo -e "\nBuilding this pkg:  DIR-->${DIR}<--  CONFIGURE_OPTIONS-->${CONFIGURE_OPTIONS}<--   CFLAGS-->${CFLAGS}<--   CPPFLAGS-->${CPPFLAGS}<--"

                     if [[ "$OPTIONS" =~ USE_AUTOGEN ]]; then
                         # I found USE_AUTOGEN.  So, do not run configure
                        ./autogen.sh || { echo autogen.sh failed for $DIR; break; }
                     else
                         # Run configure
                         export CONFIGURE_OPTIONS=""
                         export CONFIGURE_OPTIONS=` echo ${OPTIONS}  | sed -r -e  's/CFLAGS="[^"]+"//' | sed -r -e  's/CPPFLAGS="[^"]+"//'  `
                        ./configure $CONFIGURE_OPTIONS || { echo configure failed for $DIR; break; }
                     fi

                     make -j 1                      || { echo make failed for $DIR; break; }
                     make install                   || { echo make install failed for $DIR; break; }
                     cd ..
                     cp -r -f $DIR ../mate-installed

                     echo -e "Finished $d"
               done





      c. Make the script executable
         unix> chmod u+x ~/compileAll.sh

      d. Execute the script
         a. Open a new terminal
         b. Run the script
            unix> cd
            unix> sudo bash ./compileAll.sh | tee /tmp/compileAll.log

         c. Watch the log file
            unix> tail -10000f /tmp/compileAll.log | grep -i "Building this pkg"


 7. Try out the MATE window manager
    unix> sudo systemctl set-default graphical.target
    unix> sudo systemctl enable gdm.service
    unix> sudo systemctl restart gdm.service
