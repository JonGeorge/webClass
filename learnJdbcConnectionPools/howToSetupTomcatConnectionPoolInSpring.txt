How to setup Tomcat Connection Pool using Spring
------------------------------------------------

Add to your pom.xml
--------------------
  mysql
  mysql-connector-java
  5.1.32
  
  org.apache.tomcat
  tomcat-jdbc
  7.0.53
  provided
  
  
  
Create your Connection Pool bean in spring xml file
---------------------------------------------------
<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"  destroy-method="close">
    <property name="driverClassName"  value="com.mysql.jdbc.Driver"/>
    <property name="url"              value="jdbc:mysql://127.0.0.1:3306/world"  />
    <property name="username"         value="root" />
    <property name="password"         value="secret" />
    <property name="initialSize"        value="1" />
    . . .
</bean>

<!-- Setup your DAO class by calling its constructor and passing-in the data source -->
<bean id="myDao"  class="stuff.dao.MyDao">
   <constructor-arg index="0"  ref="dataSource"/>
</bean>
    
  
  
<!-- Move the data source values to a property file -->
<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
   <property name="locations" value="classpath:com/foo/myapp.properties"
</bean>



In your property file
---------------------
jdbc.driverClassName=com.mysql.jdbcDriver



Replace the hard-coded value in the springbean
<property name="driverClassName"  value="${jdbc.driverClassName}"/>

