How to Setup Virtual Environment for your Project
-------------------------------------------------
virtualenv is a tool to create isolated Python environments. 
virtualenv creates a folder which contains all the necessary executables to use the packages that a Python project would need.


References
----------
http://docs.python-guide.org/en/latest/dev/virtualenvs/


Procedure
---------
 1. Install virtualenv
    DOS> pip install virtualenv
    You are using pip version 7.0.1, however version 8.1.2 is available.
    You should consider upgrading via the 'pip install --upgrade pip' command.
    Collecting virtualenv
      Downloading virtualenv-15.0.1-py2.py3-none-any.whl (1.8MB)
        100% |################################| 1.8MB 227kB/s
    Installing collected packages: virtualenv
    Successfully installed virtualenv-15.0.1
   
    DOS> virtualenv --version
    15.0.01


 2. Setup a venv/ directory in your project
    DOS> cd /d c:\tools\intellij\workspace\pythonScripts
    DOS> virtualenv venv
    New python executable in c:\tools\intellij\workspace\pythonScripts\venv\Scripts\python.exe
    Installing setuptools, pip, wheel...done.

    NOTES:
      A) virtualenv venv will create a folder (called venv) in the current directory 
         which holds the Python executable files, and a copy of the pip library
         which you can use to install other packages.
      B) The name of the virtual environment (in this case, it was venv) can be anything
      
      
 3. Activate the virtual environment
    DOS> cd /d c:\tools\intellij\workspace\pythonScripts
    DOS> venv\scripts\activate.bat
    (venv) c:\tools\intellij\workspace\pythonScripts>
    
    Notice, that the directory prompt has changed
    
    
 4. Install packages as usual (within your virtual environment)
    (venv) DOS> pip install requests
    
        Collecting requests
        Using cached requests-2.10.0-py2.py3-none-any.whl
        Installing collected packages: requests
        Successfully installed requests-2.10.0
        
        
 5. When done, deactivate the environment
    DOS> cd /d c:\tools\intellij\workspace\pythonScripts
    DOS> venv\scripts\deactivate.bat
    
    
 NOTE:  To delete the entire virtual environment, just erase the venv/ directory
 

 6. Get a list of packages installed within this virtual environment
    a. Re-enter the virtual environment
       DOS> venv\scripts\activate.bat
    
    b. List packages that were installed
       DOS> pip freeze > requirements.txt
       
    c. List the contents of requirements.txt
       DOS> type requirements.txt
       requests==2.10.0
       

**OPTIONAL**  Setup a new project directory with these requirements
  DOS> mkdir -p c:\tools\intellij\workspaces\project2
  DOS> cd /d c:\tools\intellij\workspace\project2
  DOS> copy c:\tools\intellij\workspace\pythonScripts\requirements.txt .
  DOS> virtualenv venv
  DOS> venv\scripts\activate.bat
  
  # Install all modules from requirements.txt
  (venv) DOS> pip install -r requirements.txt
                
  # List all modules installed in this virtual env
  (venv) DOS> pip list

  # Decactivate this virtual environment
  (venv) DOS> venv\scripts\deactivate.bat
  
  # List all modules installed *outside* of this virtual env
  DOS> pip list
  
  

