How to Combine Sub-Files into one File
--------------------------------------

Assumptions:
 A) You have Python 3.4 installed (32-bit)
 B) You have PyCharm installed
 C) You have used the combine.py to split-up a file into pieces
    and you want to combine the pieces
 
 
Procedures
----------
 1. Create a new Python script:  combine.py
    a. Startup PyCharm
    b. Right-click on project1 -> New -> Python File
       Name:  combine.py
       
    c. Copy this to combine.py
       WARNING:  Do not add any leading spaces
 
        #######################################################################
        # Filename:  combine.py
        # Author:    <your name>
        #######################################################################
        # Purpose:
        #   Combine the sub-files into one file
        #
        #  Design:
        #    1) Verify that the user passed-in all of the required parameters
        #    2) Loop through each smaller file
        #       a) open the smaller file
        #       b) append a chunk to the larger file
        #       c) close the smaller file
        #
        # Usage
        #   DOS> py split.py -src="part*.bin" -dest=longview2.exe  -delSubFiles=Y <enter>
        #
        # Assumptions
        #   A) py is in the PATH
        #######################################################################
        import os
        import time
        import sys
        import argparse
        import glob
        import io
        
        #######################################################################
        # verifyCommandLineArguments()
        #######################################################################
        def verifyCommandLineArguments(aArgs):
            print("verifyCommandLineArguments()")
        
            if not aArgs:
                print("Error:  No arguments were provided")
                sys.exit(1)
        
            elif not aArgs.src:
                print("Error:  No --src argument was provided")
                sys.exit(1)
        
            elif not aArgs.dest:
                print("Error:  No --dest was provided")
                sys.exit(1)
        
            print("Command-line args are valid")
            return
        
        # P R O G R A M         S T A R T S        H E R E
        gsScriptName = os.path.basename(__file__)
        gsCWD = os.getcwd()
        
        # Print the date/time when this script started
        print("%s has started as of %s" % (gsScriptName, time.strftime("%c")))
        
        
        # Parse Command-line arguments
        parser = argparse.ArgumentParser(prog=gsScriptName)
        parser.add_argument('--src')
        parser.add_argument('--dest')
        parser.add_argument('--delSubFiles', default='Y')
        goCommandLineArgs = parser.parse_args()
        
        # Verify Command-line arguments
        verifyCommandLineArguments(goCommandLineArgs)
        
        # Get a list of paths that match
        fileList = glob.glob(goCommandLineArgs.src)
        
        if len(fileList) == 0:
            print("Error in %s:  I could not find any sub-files to combine" % gsScriptName)
            sys.exit(1)
        
        # Open the combined-file for writing
        # NOTE:  When we leave this 'with' block, the file is closed automatically
        with open(goCommandLineArgs.dest, "wb") as fCombinedFile:
        
            # Loop through the file list
            for smallFile in fileList:
        
                # Read a chunk from the large file
                print("\tReading from sub-file: %s" % smallFile)
                with open(smallFile, "rb") as fSubFile:
        
                    while (True):
                        chunk = fSubFile.read(io.DEFAULT_BUFFER_SIZE)
        
                        if chunk != b"":
                            # Write data from this sub-file to the combined file
                            fCombinedFile.write(chunk)
                        else:
                            # Break out of this while loop
                            break
        
        
        # Print the date/time when this script finished
        print("%s has finished as of %s" % (gsScriptName, time.strftime("%c")))
        
        # Python script ends here
        sys.exit(0)




 2. Take a sub files and attempt to combine them
  
        