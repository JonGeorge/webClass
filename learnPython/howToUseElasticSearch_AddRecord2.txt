How to Add a Record to an ElasticSearch Instance
------------------------------------------------

Assumptions:
 A) You have python installed locally
 

Procedures
----------
 1. Download & Install ElasticSearch on your local windows box
    [see learnElasticSearch / howToInstallElasticSearchOnWindows.txt]

    
 2. Startup your ElasticSearch instance
    a. Open a DOS window by pressing <Start><Run>CMD
    b. In the DOS window, type-in this:
       DOS> cd c:\tools\elasticsearch-1.7.0\bin
       DOS> elasticsearch.bat

    
 3. Install the elasticsearch module (using pip)
    a. Open a DOS window by pressing <Start><Run>CMD
    b. In the DOS window, type-in this:
       DOS> pip install elasticsearch

    
 4. Startup PyCharm (or your favorite IDE)
    a. Create this file:  addRecordToElasticSearch2.py
    
    b. Copy this to your addRecordToElasticSearch2.py
    
        #######################################################################
        # Filename:  addRecordToElasticSearch2.py
        # Author:    <your name>
        #######################################################################
        # Purpose:
        #   Connect to a local ElasticSearch instance, create an index, and add a record
        #
        # Usage
        #   DOS> python addRecordToElasticSearch2.py
        #
        # Assumptions
        #   A) python is in the PATH
        #   B) elasticsearch module is installed
        #   C) ElasticSearch instance is running on localhost:9200
        #######################################################################
        import os
        import time
        from datetime import datetime
        from elasticsearch import Elasticsearch
        
        gsScriptName = os.path.basename(__file__)
        print("%s started as of %s." % (gsScriptName, time.strftime("%c")))
        
        # Connect to the ElasticSearch at localhost:9200
        es = Elasticsearch(hosts=[{'host': 'localhost', 'port': 9200}], use_ssl=False)
        
        # Create an index in elasticsearch, ignore status code 400 (which means that an index already exists)
        res = es.indices.create(index='my-index', ignore=400)
        print res
        
        # Setup the document record
        doc = {
            'author': 'John Smith',
            'text': 'Using python to talk to ElasticSearch is cool.',
            'timestamp': datetime.now(),
        }
        
        # Add a record to ElasticSearch  (ElasticSearch will generate the unique ID)
        # NOTE:  if res['created'] == true, then the record was created
        res = es.index(index="my-index", doc_type="test-type", id=None, body=doc)
        print res
        
        recordId = res['_id']
        print("Record created with an id of %s\n" % recordId)
        
        # Get the record from ElasticSearch using this id
        res = es.get(index="my-index", doc_type="test-type", id=recordId)
        print res
        
        print("%s finished of %s." % (gsScriptName, time.strftime("%c")))
        exit(0)


 5. Step through your code with a debugger
    a. Set a breakpiont on a line in the script
    b. Debug the script
       In Pycharm, Right-click on your python script -> Debug 'addRecordToElasticSearch.py'
    
       The console should show this:
        
        addRecordToElasticSearch2.py started as of 06/12/16 18:03:40.
        {u'status': 400, u'error': u'IndexAlreadyExistsException[[my-index] already exists]'}
        {u'_type': u'test-type', u'_id': u'AVVGpEr4cqW9Z16GuNkz', u'created': True, u'_version': 1, u'_index': u'my-index'}
        Record created with an id of AVVGpEr4cqW9Z16GuNkz
        
        {u'_type': u'test-type', u'_source': {u'text': u'Using python to talk to ElasticSearch is cool.', u'author': u'John Smith', u'timestamp': u'2016-06-12T18:03:40.152000'}, u'_index': u'my-index', u'_version': 1, u'found': True, u'_id': u'AVVGpEr4cqW9Z16GuNkz'}
        addRecordToElasticSearch2.py finished of 06/12/16 18:03:40.       
           