How to List all System Attribute Name/Values
--------------------------------------------

Solution:
  Use dir(sys) to get a list of attribute names
  Use getattr(sys, <attribute-name>) to get the attribute value
  
Sample Code
-----------
import sys
attributeList = dir(sys)
for attrName in attributeList:
    attrValue = getattr(sys, attrName)
    print("%s\t%s" % (attrName,attrValue))
    

Running this code would generate this:
--------------------------------------
__displayhook__	<built-in function displayhook>
__doc__	This module provides access to some objects used or maintained by the
interpreter and to functions that interact strongly with the interpreter.

Dynamic objects:

argv -- command line arguments; argv[0] is the script pathname if known
path -- module search path; path[0] is the script directory, else ''
modules -- dictionary of loaded modules

displayhook -- called to show results in an interactive session
excepthook -- called to handle any uncaught exception other than SystemExit
  To customize printing in an interactive session or to install a custom
  top-level exception handler, assign other functions to replace these.

exitfunc -- if sys.exitfunc exists, this routine is called when Python exits
  Assigning to sys.exitfunc is deprecated; use the atexit module instead.

stdin -- standard input file object; used by raw_input() and input()
stdout -- standard output file object; used by the print statement
stderr -- standard error object; used for error messages
  By assigning other file objects (or objects that behave like files)
  to these, it is possible to redirect all of the interpreter's I/O.

last_type -- type of last uncaught exception
last_value -- value of last uncaught exception
last_traceback -- traceback of last uncaught exception
  These three are only available in an interactive session after a
  traceback has been printed.

exc_type -- type of exception currently being handled
exc_value -- value of exception currently being handled
exc_traceback -- traceback of exception currently being handled
  The function exc_info() should be used instead of these three,
  because it is thread-safe.

Static objects:

float_info -- a dict with information about the float inplementation.
long_info -- a struct sequence with information about the long implementation.
maxint -- the largest supported integer (the smallest is -maxint-1)
maxsize -- the largest supported length of containers.
maxunicode -- the largest supported character
builtin_module_names -- tuple of module names built into this interpreter
version -- the version of this interpreter as a string
version_info -- version information as a named tuple
hexversion -- version information encoded as a single integer
copyright -- copyright notice pertaining to this interpreter
platform -- platform identifier
executable -- absolute path of the executable binary of the Python interpreter
prefix -- prefix used to find the Python library
exec_prefix -- prefix used to find the machine-specific Python library
float_repr_style -- string indicating the style of repr() output for floats
dllhandle -- [Windows only] integer handle of the Python DLL
winver -- [Windows only] version number of the Python DLL
__stdin__ -- the original stdin; don't touch!
__stdout__ -- the original stdout; don't touch!
__stderr__ -- the original stderr; don't touch!
__displayhook__ -- the original displayhook; don't touch!
__excepthook__ -- the original excepthook; don't touch!

Functions:

displayhook() -- print an object to the screen, and save it in __builtin__._
excepthook() -- print an exception and its traceback to sys.stderr
exc_info() -- return thread-safe information about the current exception
exc_clear() -- clear the exception state for the current thread
exit() -- exit the interpreter by raising SystemExit
getdlopenflags() -- returns flags to be used for dlopen() calls
getprofile() -- get the global profiling function
getrefcount() -- return the reference count for an object (plus one :-)
getrecursionlimit() -- return the max recursion depth for the interpreter
getsizeof() -- return the size of an object in bytes
gettrace() -- get the global debug tracing function
setcheckinterval() -- control how often the interpreter checks for events
setdlopenflags() -- set the flags to be used for dlopen() calls
setprofile() -- set the global profiling function
setrecursionlimit() -- set the max recursion depth for the interpreter
settrace() -- set the global debug tracing function

__excepthook__	<built-in function excepthook>
__name__	sys
__package__	None
__stderr__	<open file '<stderr>', mode 'w' at 0x0047D0D0>
__stdin__	<open file '<stdin>', mode 'r' at 0x0047D020>
__stdout__	<open file '<stdout>', mode 'w' at 0x0047D078>
_clear_type_cache	<built-in function _clear_type_cache>
_current_frames	<built-in function _current_frames>
_getframe	<built-in function _getframe>
_mercurial	('CPython', '', '')
api_version	1013
argv	['C:/tools/intellij/workspace/pythonScripts/printingLists.py']
builtin_module_names	('__builtin__', '__main__', '_ast', '_bisect', '_codecs', '_codecs_cn', '_codecs_hk', '_codecs_iso2022', '_codecs_jp', '_codecs_kr', '_codecs_tw', '_collections', '_csv', '_functools', '_heapq', '_hotshot', '_io', '_json', '_locale', '_lsprof', '_md5', '_multibytecodec', '_random', '_sha', '_sha256', '_sha512', '_sre', '_struct', '_subprocess', '_symtable', '_warnings', '_weakref', '_winreg', 'array', 'audioop', 'binascii', 'cPickle', 'cStringIO', 'cmath', 'datetime', 'errno', 'exceptions', 'future_builtins', 'gc', 'imageop', 'imp', 'itertools', 'marshal', 'math', 'mmap', 'msvcrt', 'nt', 'operator', 'parser', 'signal', 'strop', 'sys', 'thread', 'time', 'xxsubtype', 'zipimport', 'zlib')
byteorder	little
call_tracing	<built-in function call_tracing>
callstats	<built-in function callstats>
copyright	Copyright (c) 2001-2015 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.
displayhook	<built-in function displayhook>
dllhandle	503316480
dont_write_bytecode	False
exc_clear	<built-in function exc_clear>
exc_info	<built-in function exc_info>
exc_type	None
excepthook	<built-in function excepthook>
exec_prefix	C:\tools\python27
executable	C:\tools\python27\python.exe
exit	<built-in function exit>
flags	sys.flags(debug=0, py3k_warning=0, division_warning=0, division_new=0, inspect=0, interactive=0, optimize=0, dont_write_bytecode=0, no_user_site=0, no_site=0, ignore_environment=0, tabcheck=0, verbose=0, unicode=0, bytes_warning=0, hash_randomization=0)
float_info	sys.float_info(max=1.7976931348623157e+308, max_exp=1024, max_10_exp=308, min=2.2250738585072014e-308, min_exp=-1021, min_10_exp=-307, dig=15, mant_dig=53, epsilon=2.220446049250313e-16, radix=2, rounds=1)
float_repr_style	short
getcheckinterval	<built-in function getcheckinterval>
getdefaultencoding	<built-in function getdefaultencoding>
getfilesystemencoding	<built-in function getfilesystemencoding>
getprofile	<built-in function getprofile>
getrecursionlimit	<built-in function getrecursionlimit>
getrefcount	<built-in function getrefcount>
getsizeof	<built-in function getsizeof>
gettrace	<built-in function gettrace>
getwindowsversion	<built-in function getwindowsversion>
hexversion	34015984
long_info	sys.long_info(bits_per_digit=15, sizeof_digit=2)
maxint	2147483647
maxsize	2147483647
maxunicode	65535
meta_path	[]
modules	{'copy_reg': <module 'copy_reg' from 'C:\tools\python27\lib\copy_reg.pyc'>, 'sre_compile': <module 'sre_compile' from 'C:\tools\python27\lib\sre_compile.pyc'>, 'locale': <module 'locale' from 'C:\tools\python27\lib\locale.pyc'>, '_sre': <module '_sre' (built-in)>, 'functools': <module 'functools' from 'C:\tools\python27\lib\functools.pyc'>, 'encodings': <module 'encodings' from 'C:\tools\python27\lib\encodings\__init__.pyc'>, 'site': <module 'site' from 'C:\tools\python27\lib\site.pyc'>, '__builtin__': <module '__builtin__' (built-in)>, 'sysconfig': <module 'sysconfig' from 'C:\tools\python27\lib\sysconfig.pyc'>, 'operator': <module 'operator' (built-in)>, '__main__': <module '__main__' from 'C:/tools/intellij/workspace/pythonScripts/printingLists.py'>, 'types': <module 'types' from 'C:\tools\python27\lib\types.pyc'>, 'encodings.encodings': None, 'abc': <module 'abc' from 'C:\tools\python27\lib\abc.pyc'>, '_weakrefset': <module '_weakrefset' from 'C:\tools\python27\lib\_weakrefset.pyc'>, 'errno': <module 'errno' (built-in)>, 'encodings.codecs': None, 'sre_constants': <module 'sre_constants' from 'C:\tools\python27\lib\sre_constants.pyc'>, 're': <module 're' from 'C:\tools\python27\lib\re.pyc'>, '_abcoll': <module '_abcoll' from 'C:\tools\python27\lib\_abcoll.pyc'>, 'ntpath': <module 'ntpath' from 'C:\tools\python27\lib\ntpath.pyc'>, '_codecs': <module '_codecs' (built-in)>, 'zope': <module 'zope' (built-in)>, 'nt': <module 'nt' (built-in)>, '_warnings': <module '_warnings' (built-in)>, 'genericpath': <module 'genericpath' from 'C:\tools\python27\lib\genericpath.pyc'>, 'stat': <module 'stat' from 'C:\tools\python27\lib\stat.pyc'>, 'zipimport': <module 'zipimport' (built-in)>, 'encodings.__builtin__': None, 'warnings': <module 'warnings' from 'C:\tools\python27\lib\warnings.pyc'>, 'UserDict': <module 'UserDict' from 'C:\tools\python27\lib\UserDict.pyc'>, 'encodings.cp1252': <module 'encodings.cp1252' from 'C:\tools\python27\lib\encodings\cp1252.pyc'>, 'sys': <module 'sys' (built-in)>, 'codecs': <module 'codecs' from 'C:\tools\python27\lib\codecs.pyc'>, 'os.path': <module 'ntpath' from 'C:\tools\python27\lib\ntpath.pyc'>, '_functools': <module '_functools' (built-in)>, '_locale': <module '_locale' (built-in)>, 'signal': <module 'signal' (built-in)>, 'traceback': <module 'traceback' from 'C:\tools\python27\lib\traceback.pyc'>, 'linecache': <module 'linecache' from 'C:\tools\python27\lib\linecache.pyc'>, 'encodings.aliases': <module 'encodings.aliases' from 'C:\tools\python27\lib\encodings\aliases.pyc'>, 'exceptions': <module 'exceptions' (built-in)>, 'sre_parse': <module 'sre_parse' from 'C:\tools\python27\lib\sre_parse.pyc'>, 'os': <module 'os' from 'C:\tools\python27\lib\os.pyc'>, '_weakref': <module '_weakref' (built-in)>}
path	['C:\\tools\\intellij\\workspace\\pythonScripts', 'C:\\tools\\intellij\\workspace\\pythonScripts', 'C:\\Windows\\system32\\python27.zip', 'C:\\tools\\python27\\DLLs', 'C:\\tools\\python27\\lib', 'C:\\tools\\python27\\lib\\plat-win', 'C:\\tools\\python27\\lib\\lib-tk', 'C:\\tools\\python27', 'C:\\tools\\python27\\lib\\site-packages']
path_hooks	[<type 'zipimport.zipimporter'>]
path_importer_cache	{'C:/tools/intellij/workspace/pythonScripts/printingLists.py': <imp.NullImporter object at 0x004784A8>, 'C:\\tools\\python27\\lib\\plat-win': <imp.NullImporter object at 0x004784A0>, 'C:\\tools\\python27\\lib\\lib-tk': None, 'C:\\tools\\python27\\DLLs': None, 'C:\\tools\\intellij\\workspace\\pythonScripts': None, 'C:\\tools\\python27': None, 'C:\\tools\\python27\\lib\\site-packages': None, 'C:\\tools\\python27\\lib\\encodings': None, 'C:\\Windows\\system32\\python27.zip': <imp.NullImporter object at 0x00478028>, 'C:\\tools\\python27\\lib': None}
platform	win32
prefix	C:\tools\python27
py3kwarning	False
setcheckinterval	<built-in function setcheckinterval>
setprofile	<built-in function setprofile>
setrecursionlimit	<built-in function setrecursionlimit>
settrace	<built-in function settrace>
stderr	<open file '<stderr>', mode 'w' at 0x0047D0D0>
stdin	<open file '<stdin>', mode 'r' at 0x0047D020>
stdout	<open file '<stdout>', mode 'w' at 0x0047D078>
subversion	('CPython', '', '')
version	2.7.10 (default, May 23 2015, 09:40:32) [MSC v.1500 32 bit (Intel)]
version_info	sys.version_info(major=2, minor=7, micro=10, releaselevel='final', serial=0)
warnoptions	[]
winver	2.7


