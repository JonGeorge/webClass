How to Use Python to Generate an Excel Spreadsheet (using XlsxWriter)
---------------------------------------------------------------------
XlsxWriter has some advantages and disadvantages over the alternative Python modules for writing Excel files.

Advantages:
 + It supports more Excel features than any of the alternative modules.
 + It has a high degree of fidelity with files produced by Excel. In most cases the files produced are 100% equivalent to files produced by Excel.
 + It has extensive documentation, example files and tests.
 + It is fast and can be configured to use very little memory even for very large output files.

Disadvantages:
 - It cannot read or modify existing Excel XLSX files.



Assumptions:
 A) You have Python 3.4 installed (32-bit)
 B) You have PyCharm installed
 
 
References
----------
http://xlsxwriter.readthedocs.org/ 
https://github.com/jmcnamara/XlsxWriter/tree/master/examples



Procedures
----------
 1. Verify that you have pip
    a. Open a DOS window by pressing <Start><Run>CMD
    b. In the DOS window, type-in this:
       DOS> pip --version
       
       You should see this:
         pip 7.1.2 from c:\tools\python34-32\lib\site-packages (python 3.4)


  
 2. Install XlsxWriter using pip
    a. Open a DOS window by pressing <Start><Run>CMD
    b. In the DOS window, type-in this:
       DOS> pip install XlsxWriter
    
      You should see this:
        Collecting XlsxWriter
        Downloading XlsxWriter-0.8.4-py2.py3-none-any.whl (134kB)
        100% |################################| 135kB 2.6MB/s
        Installing collected packages: XlsxWriter
        Successfully installed XlsxWriter-0.8.4


  
 3. Create the generateSpreadsheet.py 
    a. Startup PyCharm
    b. Right-click on project1 -> New -> Python File
       Name:  generateSpreadsheet.py
       
    c. Copy this to generateSpreadsheet.py
       WARNING:  Do not add any leading spaces
        
        #######################################################################
        # Filename:  generateSpreadsheet.py
        # Author:    <your name>
        #######################################################################
        # Purpose:
        #   To demonstrate how to generate an Excel spreadsheet using a Python script
        #
        # Usage
        #   DOS> py generateSpreadsheet.py
        #
        # Assumptions
        #   A) py is in the PATH
        #######################################################################
        import os
        import time
        import sys
        import xlsxwriter
        
        gsScriptName = os.path.basename(__file__)
        gsCWD = os.getcwd()
        
        # Print the date/time when this script started
        print("%s has started as of %s." % (gsScriptName, time.strftime("%c")))
        
        # Construct the path of the spreadsheet
        gsSpreadsheetFilePath = gsCWD + '/' + 'sample1.xlsx'
        
        # Delete the file if it exists
        if os.path.exists(gsSpreadsheetFilePath):
                # This spreadsheet exists -- so remove it
                os.remove(gsSpreadsheetFilePath)
        
        
        # Create a spreadsheet with 'Hello world' in cell A1
        print("Generating a spreadsheet\n\t%s" % gsSpreadsheetFilePath)
        oWorkbook = xlsxwriter.Workbook(gsSpreadsheetFilePath)
        oWorksheet = oWorkbook.add_worksheet()
        oWorksheet.write('A1', 'Hello world')
        oWorkbook.close()
        
        
        # Print the date/time when this script finished
        print("%s has finished as of %s." % (gsScriptName, time.strftime("%c")))
        
        # Python script ends here
        sys.exit(0)


  
 4. Attempt to run the generateSpreadsheet.py script
    a. Right-click on generateSpreadsheet.py -> Run 'generateSpreadsheet'

    b. You should see the following output
        generateSpreadsheet.py has started as of 03/23/16 20:20:23.
        Generating a spreadsheet
            C:\tools\PycharmProjects\project1/sample1.xlsx
        generateSpreadsheet.py has finished as of 03/23/16 20:20:26.           
        
    c. Verify that the spreadsheet is viewable in excel
       1) Open sample1.xlsx with excel
       2) You should see 'Hello world' in cell A1
       
 
 
