How to Parse Command-Line Arguments (using argparse)
----------------------------------------------------


Assumptions:
 A) You have Python 3.4 installed (32-bit)
 B) You have PyCharm installed
 C) You want to pass-in arguments into a python program
 

References
----------
https://docs.python.org/2/library/argparse.html



Procedures
----------
 1. Create the parseCommandLineArgs.py 
    a. Startup PyCharm
    b. Right-click on project1 -> New -> Python File
       Name:  generateSpreadsheet.py
       
    c. Copy this to parseCommandLineArgs.py
       WARNING:  Do not add any leading spaces

        #######################################################################
        # Filename:  parseCommandLineArgs.py
        # Author:    <your name>
        #######################################################################
        # Purpose:
        #   Split-up a file into smaller files
        #
        #  Design:
        #    1) Verify that the user passed-in all of the required parameters
        #    2) Determine the number of smaller files to create
        #    3) Loop through each smaller file
        #       a) open the smaller file
        #       b) write a chunk to that smaller file
        #       c) close the smaller file
        #    4) Write the last chunk to the last smaller file
        #
        # Usage
        #   DOS> python parseCommandLineArgs.py --src="BigFile.exe" --maxSubFileSize=7m --subFilePrefix="part" --subFileSuffix="bin"
        #
        # Assumptions
        #   A) python is in the PATH
        #######################################################################
        import os
        import time
        import sys
        import argparse
        
        
        #######################################################################
        # verifyCommandLineArguments()
        #######################################################################
        def verifyCommandLineArguments(aArgs):
            print("verifyCommandLineArguments()")
        
            if not aArgs:
                print("Error:  No arguments were provided")
                sys.exit(1)
        
            elif not aArgs.src:
                print("Error:  No --src argument was provided")
                sys.exit(1)
        
            elif not aArgs.maxSubFileSize:
                print("Error:  No --maxSubFileSize was provided")
                sys.exit(1)
        
            print("Command-line args are valid");
            return
        
        
        # P R O G R A M         S T A R T S        H E R E
        gsScriptName = os.path.basename(__file__)
        gsCWD = os.getcwd()
        
        # Print the date/time when this script started
        print("%s has started as of %s" % (gsScriptName, time.strftime("%c")))
        
        
        # Parse Command-line arguments
        parser = argparse.ArgumentParser(prog=gsScriptName)
        parser.add_argument('--src')
        parser.add_argument('--maxSubFileSize')
        parser.add_argument('--subFilePrefix', default='part')
        parser.add_argument('--subFileSuffix', default='bin')
        goCommandLineArgs = parser.parse_args()
        
        # Verify Command-line arguments
        verifyCommandLineArguments(goCommandLineArgs)
        
        
        #   goCommandLineArgs.src              holds the --src
        #   goCommandLineArgs.maxSubFileSize   holds the --maxSubFileSize
        #   goCommandLineArgs.subFilePrefix    holds the --subFilePrefix
        #   goCommandLineArgs.subFileSuffix    holds the --subFileSuffix
        
        
        
        # Print the date/time when this script finished
        print("%s has finished as of %s" % (gsScriptName, time.strftime("%c")))
        
        # Python script ends here
        sys.exit(0)
        
        

 
  
 2. Attempt to run the parseCommandLineArgs.py script
    a. Right-click on parseCommandLineArgs.py -> Debug 'split'

       You should see the following output
        parseCommandLineArgs.py has started as of 03/27/16 12:26:02.
        verifyCommandLineArguments()
        Error:  No --src argument was provided       
        
                
    b. Add two command-line arguments 
       1) Pull Run / Edit Configurations
       2) Single-click on "split" [on the left]
       3) Script Parameters:   --src="BigFile.exe"  --maxSubFileSize=1M
       4) Press Apply
       5) Press OK
       6) Right-click in parseCommandLineArgs.py -> Debug 'split'
       
       You should see the following output
        parseCommandLineArgs.py has started as of 03/27/16 12:29:28
        verifyCommandLineArguments()
        Command-line args are valid
        parseCommandLineArgs.py has finished as of 03/27/16 12:29:28   
       
 

