How to Scrape Web Sites with Beautiful Soup
-------------------------------------------

Assumpions:
 A) You have Python 2.7.10 installed
 B) You want to scrape a website:   https://github.com/traderres
 C) You want to store that data in ElasticSearch
 
References
----------
http://web.stanford.edu/~zlotnick/TextAsData/Web_Scraping_with_Beautiful_Soup.html


Procedure
---------
 1. Verify that you have pip
    a. Open a DOS window by pressing <Start><Run>CMD
    b. In the DOS window, type-in this:
       DOS> pip --version
       
       You should see this:
         pip 7.1.2 from c:\tools\python34-32\lib\site-packages (python 3.4)


 2. Install beautifulsoup4 
    a. Open a DOS window by pressing <Start><Run>CMD
    b. In the DOS window, type-in this:
       DOS> pip install beautifulsoup4
    
        Collecting beautifulsoup4
        Downloading beautifulsoup4-4.4.1-py2-none-any.whl (81kB)
        100% |################################| 81kB 499kB/s
        Installing collected packages: beautifulsoup4
        Successfully installed beautifulsoup4-4.4.1
        
     NOTE:  You should see the files installed to here:
          %PYTHON_HOME%\Lib\site-packages\beautifulsoup4-4.4.1.dist-info\
 
  
  3. **OPTIONAL** install iPython using pip    
       DOS> pip install ipython[all]
       
        Collecting ipython[all]
        Downloading ipython-4.2.0-py2-none-any.whl (736kB)
        100% |################################| 737kB 390kB/s
        Collecting traitlets (from ipython[all])
        Downloading traitlets-4.2.1-py2.py3-none-any.whl (67kB)
        100% |################################| 69kB 426kB/s
        Collecting pickleshare (from ipython[all])
        Downloading pickleshare-0.7.2-py2.py3-none-any.whl
        Collecting simplegeneric>0.8 (from ipython[all])
        Downloading simplegeneric-0.8.1.zip
         . . . (and more)
  
       
    NOTE:  You should see the files installed to here:
          %PYTHON_HOME%\Lib\site-packages\iPython\


 4. Create the file:  scrapeWebsite.py 
    a. Startup PyCharm
    b. Right-click on project1 -> New -> Python File
       Name:  listPictureMetadata.py
       
    c. Copy this to scrapeWebsite.py
       WARNING:  Do not add any leading spaces
        
      #######################################################################
      # Filename:  scrapeWebsite.py
      # Author:    <your name>
      #######################################################################
      # Purpose:
      #   Extract the contents of a website
      #
      # Usage
      #   DOS> py listPictureMetadata.py --site="https://github.com/traderres" <enter>
      #
      # Assumptions
      #   A) py is in the PATH
      #######################################################################
      import os
      import time
      import sys
      import argparse
      from bs4 import BeautifulSoup
      import urllib
      from IPython.display import Image
      
      #######################################################################
      # verifyCommandLineArguments()
      #######################################################################
      def verifyCommandLineArguments(aArgs):
      
          if not aArgs:
              print("Error:  No arguments were provided")
              sys.exit(1)
      
          elif not aArgs.site:
              print("Error:  No --site argument was provided")
              sys.exit(1)
      
          return
      
      # P R O G R A M         S T A R T S        H E R E
      gsScriptName = os.path.basename(__file__)
      gsCWD = os.getcwd()
      
      # Print the date/time when this script started
      print("%s has started as of %s" % (gsScriptName, time.strftime("%c")))
      
      
      # Parse Command-line arguments
      parser = argparse.ArgumentParser(prog=gsScriptName)
      parser.add_argument('--site')
      goCommandLineArgs = parser.parse_args()
      
      
      # Verify Command-line arguments
      verifyCommandLineArguments(goCommandLineArgs)
      
      r = urllib.urlopen(goCommandLineArgs.site).read()
      soup = BeautifulSoup(r)
      print type(soup)
      
      # Show the web page
      print soup.prettify();
      
      
      # Python script ends here
      sys.exit(0)
      
      
