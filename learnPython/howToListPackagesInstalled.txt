How to List the Python Packages that are Installed
--------------------------------------------------


Solution #1:  List all packages over *multiple* lines using conda list
----------------------------------------------------------------------
Assumption:  You have installed Anaconda Python
 1. unix> conda list
	# packages in environment at /opt/anaconda2:
	#
	_nb_ext_conf              0.2.0                    py27_0
	alabaster                 0.7.8                    py27_0
	anaconda                  4.1.1               np111py27_0
	anaconda-client           1.4.0                    py27_0
	anaconda-navigator        1.2.1                    py27_0
	argcomplete               1.0.0                    py27_1
	astropy                   1.2.1               np111py27_0
	babel                     2.3.3                    py27_0
	backports                 1.0                      py27_0
	backports_abc             0.4                      py27_0



Solution #2:  List all packages on a *single* line using listPackages.py
------------------------------------------------------------------------
 1. Create this python script
    unix> vi listPackages.py
          
      import pip
      
      # Get the list of packages from pip
      installed_packages = pip.get_installed_distributions()
      
      # Display the packageListTuple on one line
      packageListTuple = [(e.key, e.version) for e in installed_packages]
      print(packageListTuple)


2. Run the python script
   unix> python listPackages.py
   [('alabaster', '0.7.8'), ('babel', '2.3.4'), ('backports.shutil-get-terminal-size', '1.0.0'), ('backports.ssl-match-hostname', '3.5.0.1'), ('backports-abc', '0.4'), ('beautifulsoup4', '4.4.1'), ('certifi', '2016.2.28'), ('colorama', '0.3.7'), ('configparser', '3.5.0'), ('decorator', '4.0.9'), ('docutils', '0.12'), ('entrypoints', '0.2.2'), ('functools32', '3.2.3.post2'), ('futures', '3.0.5'), ('imagesize', '0.7.1'), ('ipykernel', '4.3.1'), ('ipyparallel', '5.0.1'), ('ipython', '4.2.0'), ('ipython-genutils', '0.1.0'), ('ipywidgets', '5.1.5'), ('jinja2', '2.8'), ('jsonschema', '2.5.1'), ('jupyter-client', '4.2.2'), ('jupyter-core', '4.1.0'), ('markupsafe', '0.23'), ('mistune', '0.7.2'), ('nbconvert', '4.2.0'), ('nbformat', '4.0.1'), ('nose', '1.3.7'), ('notebook', '4.2.0'), ('path.py', '8.2.1'), ('pathlib2', '2.1.0'), ('pickleshare', '0.7.2'), ('pip', '7.0.1'), ('pygments', '2.1.3'), ('pytz', '2016.4'), ('pyzmq', '15.2.0'), ('qtconsole', '4.2.1'), ('requests', '2.10.0'), ('setuptools', '21.2.1'), ('simplegeneric', '0.8.1'), ('singledispatch', '3.4.0.3'), ('six', '1.10.0'), ('snowballstemmer', '1.2.1'), ('sphinx', '1.4.1'), ('testpath', '0.3'), ('tornado', '4.3'), ('traitlets', '4.2.1'), ('widgetsnbextension', '1.2.3')]




Solution #3:  List all packages over *multiple* lines using listPackages.py
---------------------------------------------------------------------------
 1. Create this python script
    unix> vi listPackages.py

      import pip
      
      # Get the list of packages from pip
      installed_packages = pip.get_installed_distributions()
      
      # Display the package list on multiple lines
      for item in installed_packages:
          print("%s %s" % (item.key, item.version))


2. Run the python script
   unix> python listPackages.py
    alabaster 0.7.8
    babel 2.3.4
    backports.shutil-get-terminal-size 1.0.0
    backports.ssl-match-hostname 3.5.0.1
    backports-abc 0.4
    beautifulsoup4 4.4.1


