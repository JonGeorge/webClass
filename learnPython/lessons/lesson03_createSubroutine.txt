Lesson:  How to create a subroutine
-----------------------------------


Procedure
---------
 1. Startup PyCharm
    NOTE:  If a project opens up, pull File -> Close
    
    a. In the main screen, press "Create New Project"
     
    b. In the next screen
       Location:  C:\tools\PycharmProjects\project1
       Interpreter:  <path of your python interpreter>
       Press "Create"
     
    c. Right-click on project1 -> New Python File
       Name:  subroutines.py
     
       Copy this to subroutines.py
       
		       
		#######################################################################
		# Filename:  subroutines.py
		# Author:    <your name>
		#######################################################################
		# Purpose:
		#   To be used as a standard template for python scripts
		#
		# Usage
		#   DOS> python subroutines.py
		#
		# Assumptions
		#   A) python is in the PATH
		#######################################################################
		import os
		import sys
		import time
		
		
		#############################################
		# printinfo()
		#############################################
		def printinfo(name, age):
		    print("Name=%s  Age=%d" % (name, age))
		
		    # Exit the function and return nothing
		    return
		
		
		#############################################
		# printinfo2()
		#############################################
		def printinfo2(name, age=10):
		    print("Name=%s  Age=%d" % (name, age))
		
		    # Exit the function and return nothing
		    return
		
		
		#############################################
		# printinfo3()
		#############################################
		def printinfo3(name, age=10):
		    print("Name=%s  Age=%d" % (name, age))
		
		    # Exit the function and return a list of stuff
		    return (name, age)
		
		
		gsScriptName = os.path.basename(__file__)
		
		# Print the date/time when this script started
		print("%s has started as of %s." % (gsScriptName, time.strftime("%c")))
		
		
		# Call printinfo() to print the passed-in values
		printinfo("Adam", 44)
		
		# Call printinfo2() and use the default value of age=10
		printinfo2( name="Ben")
		
		# Call printinfo3() and get a list of stuff back
		(myName, myAge) = printinfo3(name="George", age=46)
		
		
		
		
		# Print the date/time when this script finished
		print("%s has finished as of %s." % (gsScriptName, time.strftime("%c")))
		
		# Python script ends here
		sys.exit(0)

		
 2. Activate the debugger
    a. Set a breakpoint (by clicking in the left margin)
    b. Right-click on the file -> Debug subroutines
    c. Press F8 to step over the code
    
    