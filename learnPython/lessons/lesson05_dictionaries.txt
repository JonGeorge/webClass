Lesson:  Working with Dictionaries
----------------------------------
A Dictionary (or "dict") is a way to store data just like a list,
but instead of using only numbers to get the data, you can use almost anything. 
This lets you treat a dict like it's a database for storing and organizing data.

Dictionaries are created with { }


Creating a Dictionary
---------------------
The following code creates a dictionary called stuff
  stuff = {	
  		'name': 'Zed', 
  		'age': 39, 
  		'height': 6 * 12 + 2
  }


Example:  Create a dictionary that maps the state name to short name
--------------------------------------------------------------------
	states = {
	    'Oregon':     'OR',
	    'Florida':    'FL',
	    'California': 'CA',
	    'New York':   'NY',
	    'Michigan':   'MI'
	}
	


Loop through all keys/values in the states dictionary
-----------------------------------------------------
 1. Fast way to loop through key/values
    Why?  iteritems() Return an *iterator* over the dictionary’s (key, value) pairs.  
   		for stateName, stateAbbrev in states.iteritems():
     		print("%s is abbreviated %s" % (stateName, stateAbbrev))
     	
     		
 2. Slower way to loop through key/values
    Why slow?  items() Return a *copy* of the dictionary’s list of (key, value) pairs.
    	for stateName, stateAbbrev in states.items():
     		print("%s is abbreviated %s" % (stateName, stateAbbrev))




Loop through only the dictionary keys
-------------------------------------
 1. Fast way to loop through the dict keys:
  		for stateName in states:
		    print("stateName is %s" % stateName)
		
		*SAME AS*
		
	 	for stateName in states.iterkeys():
		    print("stateName is %s" % stateName)
	
    Why is this fast?  
    Answer:  iterkeys(), itervalues(), iteritems() returns an *iterator* which is faster than returning a copy
	         So, we are using the states.iterkeys() method


 2. Slower way to loop through the dict keys
    Why slow?  keys() returns a *copy* of the dictionary's keys
 		for stateName in states.keys():
	   		print("stateName is %s" % stateName)
	   		
	  
	   		
Loop through only the dictionary values
---------------------------------------
 1. Fast way to loop through the dict values
 		for stateAbbrev in states.itervalues():
		    print("stateAbbrev is %s" % stateAbbrev)

 2. Slower way to loop through the dict values
    NOTE:  We are looping through the keys and pulling the value out each time
 		for stateName in states.iterkeys():
		    print("stateAbbrev is %s" % states[stateName])
		    

		
   		