How to Debug a Spring MVC web application using Intellij, Maven, and the Cargo Plugin
-------------------------------------------------------------------------------------


Assumptions:  
 A) You have Intellij 14 Community Edition installed
 B) You have Maven installed
 C) Your Maven configuration can download files from a maven repository
 D) You want to use the Cargo maven plugin to run your local Tomcat
 E) You have Tomcat setup here:  C:\tools\apache-tomcat-7.0.55

 
 
Procedures
----------
 1. Create a Spring MVC Web App                 
    [see howToCreateSpringMvcWebApp_usingIntellijMaven_cargoPlugin.txt]

    DOS>  mvn clean install cargo:run
            will have your webapp deployed to your tomcat and startup Tomcat in debug mode
 

 2. Add jquery
    [see howToAddJQueryToSpringMvcAppUsingIntellij.txt] 
    


 3. Add Bootstrap
    [see howToAddBootstrapToSpringMvcUsingIntellij.txt]
    
    
  
 4. Add Angular 
    [see howToAddAngularToSpringMvcWebApp.txt]

    
 
 5. Add DataTables.net
    [see learnDataTablesNet/howToAddDataTablesNetToSpringMvcWebApp.txt]
    
    
 
 6. Add SiteMesh (to act as a layout mechanism for the web app)
    [see howToAddSiteMeshToSpringMvcWebApp.txt]
    
    
    
 7. Place your stdHeader.jsp, stdFooter.jsp, and stdJspIncludes.jsp into the layout.jsp
    a. Edit your WEB-INF/jsp/layout.jsp so it looks like this:
 
        <%@ page session="false" language="java" contentType="text/html; charset=ISO-8859-1" pageEncoding="ISO-8859-1" %>
        <%@ taglib prefix='c'      uri='http://java.sun.com/jsp/jstl/core' %>
        <%@ taglib prefix='spring' uri='http://www.springframework.org/tags' %>
        <%@ taglib prefix='form'   uri='http://www.springframework.org/tags/form' %>
        
        <%-- Allow all JSPs to have the contextPath variable --%>
        <c:set var="contextPath" value="${pageContext.request.contextPath}" />
        
        <!DOCTYPE HTML>
        <html>
            <head>
                <title><sitemesh:write property='title'/></title>
            
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
            
                <%-- Load Bootstrap CSS --%>
                <link href="${contextPath}/resources/bootstrap-3.3.4/css/bootstrap.min.css" rel="stylesheet" media="screen">
            
                <%-- Load Bootstrap CSS Themes --%>
                <link href="${contextPath}/resources/bootstrap-3.3.4/css/bootstrap-theme.min.css" rel="stylesheet" media="screen">
            
                <%-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries --%>
                <!--[if lt IE 9]>
                  <script src="${contextPath}/resources/bootstrap-3.3.4/assets/html5shiv.js"></script>
                  <script src="${contextPath}/resources/bootstrap-3.3.4/assets/respond.min.js"></script>
                <![endif]-->
            
                <link rel="stylesheet" href="${contextPath}/resources/DataTables-1.10.9/media/css/jquery.dataTables.min.css?compile=false"  />
                
                <%-- P A G E      H E A D    S E C T I O N  --%>
                <sitemesh:write property='head'/>
            </head>
            <body>
                <%-- Standard Header is here  --%>
                <%@ include file="/WEB-INF/jsp/stdHeader.jsp" %>
        
                <%-- P A G E     B O D Y     --%>
                <sitemesh:write property='body'/>
        
                <%-- Standard Footer is here --%>
                <%@ include file="/WEB-INF/jsp/stdFooter.jsp" %>
        
                <%-- Load jQuery --%>
                <script src="${contextPath}/resources/jquery-1.11.3/jquery-1.11.3.min.js" type="text/javascript"></script>
        
                <%-- Load bootstrap copmiled plugins --%>
                <script src="${contextPath}/resources/bootstrap-3.3.4/js/bootstrap.min.js" type="text/javascript"></script>
        
                <%-- Load Angular --%>
                <script src="${contextPath}/resources/angular-1.3.16/angular.min.js" type="text/javascript"></script>
        
                <%-- Load DataTables.net --%>
                <script src="${contextPath}/resources/DataTables-1.10.9/media/js/jquery.dataTables.min.js?compile=false" type="text/javascript" ></script>
        
                <%-- I N S E R T        P A G E        J A V A S C R I P T    using <content tag="bottom_js">  --%>
                <sitemesh:write property="page.bottom_js"/>
            </body>
        </html>
            
    
    b. Edit your WEB-INF/jsp/welcome.jsp so it looks like this:
       NOTE:  Local javascript must be stored in <content tag="bottom_js">...</content>
       
        <html>
        
        <head>
            <title>Welcome Page</title>
        </head>
        
        <body>
            <h2>welcome.jsp</h2>
        
            <br/>
        
            Hello ${userInfo.userName} <br/>
            Are you an administrator: ${userInfo.isAdministrator }
        
            Table is here
            <table id="position" class="display"></table>
        
            <br/>
            <br/>
        
            <content tag="bottom_js">
                <script type="text/javascript">
        
                        var myDataSet =
                        [
                                [ "Person 1", "Person 1's position"],
                                [ "Person 2", "Person 2's position"],
                                [ "Person 3", "Person 3's position"],
                                [ "Person 4", "Person 4's position"],
                                [ "Person 5", "Person 5's position"],
                                [ "Person 6", "Person 6's position"],
                                [ "Person 7", "Person 7's position"],
                                [ "Person 8", "Person 8's position"],
                                [ "Adam", "System Architect"],
                                [ "Ben", "Mgmt Consultant"],
                                [ "Peter", "Doctor"],
                                [ "Justin", "Psychologist"],
                                [ "Joel", "Policy Analyst"]
                        ];
        
        
                        $(document).ready( function ()
                        {
        
                            $('#position').DataTable(
                            {
                                data:   myDataSet,
                                columns: [
                                    { title: "Name" },
                                    { title: "Position" }
                                ]
                             } );
        
                        } );
        
                 </script>
            </content>
        
        </body>
        </html> 
            
    
    c. Delete this file:  /WEB-INF/jsp/stdJspIncludes.jsp 
    
       
 
 8. Add a Bootstrap menubar to the main layout template  (so it appears on every page)
    a. Edit the stdHeader.jsp so that it looks like this:
         
            <%-- B O O T S T R A P     M E N U     B A R --%>
            <nav role="navigation" class="navbar navbar-inverse navbar-fixed-top">
                <!-- Grouping Brand with Toggle for better mobile display -->
                <div class="navbar-header">
                    <button type="button" data-target="#navbarCollapse" data-toggle="collapse" class="navbar-toggle">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a href="#" class="navbar-brand">Brand</a>
                </div>

                <!-- Next nav links in the Navbar -->
                <div id="navbarCollapse" class="collapse navbar-collapse">
                    <ul class="nav navbar-nav">
                        <li class="active"><a href="#"><span class="glyphicon glyphicon-home"></span> Home</a></li>
                        <li class="dropdown">
                            <a data-toggle="dropdown" class="dropdown-toggle" href="#"><span class="glyphicon glyphicon-certificate"></span> DotNetFunda <b class="caret"></b></a>
                            <ul role="menu" class="dropdown-menu">
                                <li><a href="#">Articles</a></li>
                                <li><a href="#">Interviews</a></li>
                                <li><a href="#">Forums</a></li>
                                <li class="divider"></li>
                                <li><a href="#">About Us</a></li>
                                <li><a href="#">Contact Us</a></li>
                            </ul>
                        </li>
                        <li class="dropdown">
                            <a data-toggle="dropdown" class="dropdown-toggle" href="#"><span class="glyphicon glyphicon-book"></span> ITFunda <b class="caret"></b></a>
                            <ul role="menu" class="dropdown-menu">
                                <li><a href="#">Training</a></li>
                                <li><a href="#">Placement</a></li>
                                <li class="divider"></li>
                                <li><a href="#">FAQ's</a></li>
                                <li><a href="#">Write Us</a></li>
                            </ul>
                        </li>
                        <li><a href="#"><span class="glyphicon glyphicon-gift"></span> KidsFunda</a></li>
                        <li><a href="#"><span class="glyphicon glyphicon-film"></span> FundooVideo</a></li>
                    </ul>
                    <form role="search" class="navbar-form navbar-left">
                        <div class="form-group">
                            <%-- S E A R C H     B O X  --%>
                            <input type="text" placeholder="Search" class="form-control">
                        </div>
                    </form>
                    <ul class="nav navbar-nav navbar-right">
                        <li><a href="#">Contact</a></li>
                        <li class="dropdown">
                            <a data-toggle="dropdown" class="dropdown-toggle" href="#"><span class="glyphicon glyphicon-user"></span> Krishna <b class="caret"></b></a>
                            <ul role="menu" class="dropdown-menu">
                                <li><a href="#"><span class="glyphicon glyphicon-phone"></span> Friends</a></li>
                                <li><a href="#"><span class="glyphicon glyphicon-envelope"></span> Messages</a></li>
                                <li><a href="#"><span class="glyphicon glyphicon-globe"></span> Notifications</a></li>
                                <li class="divider"></li>
                                <li><a href="#"><span class="glyphicon glyphicon-cog"></span> Settings</a></li>
                                <li><a href="#"><span class="glyphicon glyphicon-off"></span> Logout</a></li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </nav>
    
    
    
    b.  Add this to the layout.jsp right *ABOVE* the closing </head>
       
            <style text="type/css">
               body {
                   /* Add some padding to the top because the navbar is fixed to the top */
                   padding-top: 50px;
               }
            </style>
 
 
 
 9. Setup JAWR to bundle and minify JS and CSS files 
    [see howToBundleJsAndCssUsingJawr.txt]


    
10. Add a MyApplicationWatcher class (that gets called when web app starts up)
    [see howToCreateApplicationWatcher.txt]


    
11. Setup a rolling log appender when running in production mode
    [see sampleLogbackXmlRollingFileAppender.txt]
    
    Copy the file contents from sampleLogbackXmlRollingFileAppender.txt to here:
      /src/main/resources/logback.xml
      
    Now, your webapp (when deployed) will only log to the log file   


    
12. Setup a Mysql Database
    a. Install MySql somewhere
    b. Turn it on
    c. Make sure your Tomcat can reach the MySql database


    
13. Add a JDBC Connection Pool to a MySql Database  (mysqlDataSource spring bean) 
    [see learnJdbcConnectionPools / mysql / howToSetupSpringBeanConnectPoolWithTomcat7.txt]
   
    When having Tomcat manage your connection pool, the connector jar must be in the <Tomcat-Home>/lib directory
    CRITICAL:  Copy the mysql-connector-java-5.1.32.jar to your <Tomcat-Home>/lib
    
    You will find this jar file here in your local maven repo:
           C:\tools\local_maven_repo\mysql\mysql-connector-java\5.1.32\mysql-connector-java-5.1.32.jar


    
14. Verify that the connection pool releases connection on web shutdown
    [see learnJdbcConnectionPools / mysql / howToVerifyConnectionsAreReleasedOnShutdown.txt]


    
15. Move the plain-text JDBC settings (in applicationContext.xml) to a property file
    [see learnPropertyFiles / howToMovePropertiesFromSpringBeansToPropertyFile.txt]
    
    NOTE:  Create a property file with the same name as the webapp -- e.g., springMvcWebAppE.properties


    
16. Encode certain the JDBC password property values within the springMvcWebAppE.properties file
    [see learnPropertyFiles / howToEncryptPropertyValues.txt]     


    
17. Setup an error controller and error page  
    INCOMPLETE   
  
   

18. Setup security with a login page, logout page, and a Security Filter
    INCOMPLETE


   
19. Externalize the web app's property file
    a. Create a src/main/config/ directory
    b. Copy /src/main/resources/springMvcWebAppE.properties to /src/main/config/
    c. Copy your springMvcWebAppE.properties to your <Tomcat-Home>/lib
    d. Deploy your /springMvcWebAppE.war to your Tomcat
       -- It should pick up the property file properly
       
    e. Now, change a value in the <Tomcat-Home>/lib//springMvcWebAppE.properties
    f. Use the Tomcat manager webapp to stop and start the /springMvcWebAppE.war
    g. Your webapp should pickup the property change
    

    
20. Add a new page with an openLayers map on it
    INCOMPLETE



21. Use Angular to make an AJAX call to get data and display it using dataTables.net
    INCOMPLETE


  
22. Use Angular to display a new view 
    INCOMPLETE
    

    
23. Have back-end run a Solr search and return results to a view
    INCOMPLETE
    
    
    
