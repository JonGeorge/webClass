Lesson:  Debug your Web Application using IntelliJ Ultimate Edition
-------------------------------------------------------------------

  
Assumptions:  
 A) You have created a Web Application
 B) You have purchased and installed IntelliJ Ultimate Edition
 

Procedure
---------
 1. **OPTIONAL** open-up port 8080 so that an outside browser can connect to your Jetty app-server
    unix> sudo -s
    unix> iptables -I INPUT -p tcp -m tcp --dport 8080 -j ACCEPT
    unix> service iptables save
    unix> service iptables restart
    unix> iptables -S                  # to list the current rule
    unix> exit



 2. Download & Install Apache-Tomcat 8.0.23 onto your local machine
    a. Download Tomcat 8
       1) Go to http://archive.apache.org/dist/tomcat/tomcat-8/v8.0.23/bin/
       2) Click on apache-tomcat-8.0.23.tar.gz
       3) Save apache-tomcat-8.0.23.zip  to your /opt
       
       *OR*
       
       unix> cd /tmp
       unix> wget http://archive.apache.org/dist/tomcat/tomcat-8/v8.0.23/bin/apache-tomcat-8.0.23.tar.gz
       unix> sudo mv apache-tomcat-8.0.23.tar.gz  /opt/
       
           
     b. Install Tomcat 8
        unix> cd /opt
        unix> sudo tar zxvf apache-tomcat-8.0.23.tar.gz
        unix> sudo rm apache-tomcat-8.0.23.tar.gz
        
        unix> sudo chown adam:adam -R /opt/apache-tomcat-8.0.23
        
        
           
     c. Configure the Tomcat 8 manager user/password
        unix> cd /opt/apache-tomcat-8.0.23/conf/
        unix> cp tomcat-users.xml tomcat-users.xml.ORIG
        unix> vi tomcat-users.xml

        Change the file so that it looks like this:
      
            <?xml version='1.0' encoding='utf-8'?>
            <tomcat-users xmlns="http://tomcat.apache.org/xml"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://tomcat.apache.org/xml tomcat-users.xsd"
              version="1.0">
            
              <role rolename="manager-gui"/>
              <user username="tomcat" password="secret" roles="manager-gui"/>
            </tomcat-users>

     d. Configure Tomcat 8 to use a specific verison of Java
        unix> cd /opt/apache-tomcat-8.0.23/bin
        unix> touch setenv.sh
        unix> chmod ugo+x setenv.sh
        unix> vi setenv.sh
        
          export JAVA_HOME=/usr/java/jdk1.8.0_74
     
     e. Verify it works
        1) Startup your Tomcat
           unix> cd /opt/apache-tomcat-8.0.23/bin
           unix> ./startup.sh
   
        2) Open a browser
           Browse to http://localhost:8080/
          
        3) Verify that you can get into the Tomcat manager
           Browse to http://localhost:8080/
           Click on "Manager App"
           Username:  tomcat
           Password:  secret
           -- You should see the Tomcat Web Application Manager
          
        4) Shutdown Tomcat
           unix> cd /opt/apache-tomcat-8.0.23/bin
           unix> ./shutdown.sh
    
    

 3. Configure Intellij to use Tomcat
    a. In Intellij, pull Run / Edit Configurations...
    b. On the left Click "+" 
       -- Browse to the bottom (you might have to click "6 items more (irrelevant)"
       -- Click on Tomcat Server -> Local
       
    c. In the Tomcat -> Local Window
       Name:  my-tomcat
       
       In the "Server" tab
          Application server:   
       
          Press "Configure..."
            Tomcat Home:  /opt/apache-tomcat-8.0.23
            Press OK
         
          After launch:  Firefox
          http://localhost:8080/webapp1
          
          HTTP port: 8080
     
      In the "Deployment" tab
         Press +  -> Artifact -> webapp1:war exploded
         
         Application context:  /webapp1
         
      
      In the "Server" tab
        On 'Update' action:    Update resources
        on frame deactivation: Do nothing
      
      Press OK
       
          
          
 4. Use IntelliJ to set a breakpoint
    a. In Intellij, Pull File / Save All
    b. Set a breakpoint
       -- Browse to src/main/java -> app1.controllers -> WelcomeController.java
       -- Single-click in the left margin and add a breakpoint on this line
             logger.debug("mainPage() started");



 5. Pull Run / Debug 'my-tomcat'
    -- A web browser will open for you automatically
    -- You should see your breakpoint
    -- Press F9 to continue
        
       
 6. Stop the debugger
    In Intellij, Pull Run / Stop 'my-tomcat'
   
 
       
    
    
What happens when you start the debugger
----------------------------------------
 1) Your browser opens to here:  http://localhost:8080/webapp1
    
 2) Your Jetty instance will call WelcomeController.handleDefaultPage() 
    which forwards the user to 
      http://localhost:8080/webapp1/welcome
       
 3) Your WelcomeController has this line in it:
    @RequestMapping("/welcome")
    public ModelAndView mainPage( Model aModel )
    {
    
    }
    
    So your mainPage() method is executed
    
    
 4) The WelcomeController.mainPage() method then does the following
    a) Creates a UserInfo object
    b) Binds that UserInfo object to your welcome.jsp
    c) Forward the user to the welcome.jsp page  [with the UserInfo object bound to it].
     
     -- As a result, the user sees the welcome.jsp page  [with the information attached to it]
     