Lesson 2:  Setup a Postgres Database
------------------------------------
Postgres is an open-source relational database management system.
It has one key advantage over MySql:  It implements row-level security.

Although CentOS contains postgres packages within its default repositories, 
we will use the packages available from the postgres project itself.
This ensures that we have access to the latest version of the software without having to install from source.


Procedure
---------
 1. Install the Postgres database on your Linux server
    [see learnPostgreSQL / howToInstallPostgresOnCentOS.txt]
     *OR*
     Go to https://github.com/traderres/webClass/blob/master/learnPostgreSQL/howToInstallPostgresOnCentOS.txt
    

 2. Install the pgAdmin Tool (which will let you graphically browse the database)
     [see learnPostgreSQL / howToInstallPostgressAdminToolOnCentOS.txt]
      *OR*
     Go to https://github.com/traderres/webClass/blob/master/learnPostgreSQL/howToInstallPostgressAdminToolOnCentOS.txt
     
     
 3. Create a table called "users" and add some records
    a. Putty to the unix server running postgressql
    
    b. Login to the postgres database from the command-prompt
       unix> sudo su - postgres
       unix> psql
       
    
        
    c. Create a table called 'users'
       postgres=#  Create table users( id serial primary key, 
                   name      varchar(50) not null,
                   isActive  boolean not null
                   );
                   
       postgres=# \dt
    
                     List of relations
             Schema | Name  | Type  |  Owner   
            --------+-------+-------+----------
             public | junk  | table | postgres
             public | users | table | postgres
            (2 rows)



    d. Describe the users table
       postgres-# \d users
              Column  |         Type          |                     Modifiers                      
            ----------+-----------------------+----------------------------------------------------
             id       | integer               | not null default nextval('users_id_seq'::regclass)
             name     | character varying(50) | not null
             isactive | boolean               | not null
            Indexes:
                "users_pkey" PRIMARY KEY, btree (id)




    e. Set the generated id to start at 100 and increment by 1
       postgres=# alter sequence users_id_seq restart with 100 increment by 1;



    f. Insert some records into the 'users' table
       postgres=#  insert into users(name, isActive) values('Adam', false);
       INSERT 0 1
      
       postgres=#  insert into users(name, isActive) values('Ben', true);
       INSERT 0 1
    
       postgres=#  insert into users(name, isActive) values('Justin', true);
       INSERT 0 1
       
       postgres=# select * from users;
       
                 id  |  name  | isactive 
                -----+--------+----------
                 100 | Adam   | f
                 101 | Ben    | t
                 102 | Justin | t
                (3 rows)



       
        NOTES:
          A) The "INSERT 0 1" message means the insert succeeded
          B) The type is serial so that postgres automatically adds an ID
  

      
       
        
    g. Logout
       postgres=# \q
        
        
   
    
    
        
 
    
  