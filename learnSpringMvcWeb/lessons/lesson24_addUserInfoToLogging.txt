Lesson:  How to Add Spring User Info to your Logging (using Logback)
--------------------------------------------------------------------

Problem:  You are debugging a problem in your web app 
          But, your log file does not show the name of the user that caused the problem
          -- It would be really helpful to have this user information on each line of the log file



Solution #1: Extend PatternLayout class
---------------------------------------
 1. Add this class:  UserConverter
 
        package app1.utilities;
        
        import ch.qos.logback.classic.pattern.ClassicConverter;
        import ch.qos.logback.classic.spi.ILoggingEvent;
        import org.springframework.security.core.Authentication;
        import org.springframework.security.core.context.SecurityContextHolder;
        
        /**
         * Created by adam on 2/2/2017.
         */
        public class UserConverter extends ClassicConverter
        {
            @Override
            public String convert(ILoggingEvent event)
            {
                Authentication auth = SecurityContextHolder.getContext().getAuthentication();
                if (auth != null) {
                    return auth.getName();
                }
                return "NO_USER";
            }
        }



 2. Add this class:  SessionConverter

        package app1.utilities;
        
        import ch.qos.logback.classic.pattern.ClassicConverter;
        import ch.qos.logback.classic.spi.ILoggingEvent;
        import org.springframework.web.context.request.RequestAttributes;
        import org.springframework.web.context.request.RequestContextHolder;
        
        /**
         * Created by adam on 2/2/2017.
         */
        public class SessionConverter extends ClassicConverter
        {
            @Override
            public String convert(ILoggingEvent event)
            {
                RequestAttributes attrs = RequestContextHolder.getRequestAttributes();
                if (attrs != null) {
                    return attrs.getSessionId();
                }
                return "NO_SESSION";
            }
        } 
 
 
 
 3. Add this class:  PatternLayoutWithUserContext
 
        package app1.utilities;
        
        import ch.qos.logback.classic.PatternLayout;
        
        /**
         * Created by adam on 2/2/2017.
         */
        public class PatternLayoutWithUserContext extends PatternLayout
        {
            static
            {
                PatternLayout.defaultConverterMap.put("user", UserConverter.class.getName());
                PatternLayout.defaultConverterMap.put("session", SessionConverter.class.getName());
            }
        }



 4. Update your logback.xml    to show your new %user and %session variables              

        <?xml version="1.0" encoding="windows-1252" ?>
        <!DOCTYPE project>
        
        <configuration debug="true">
        
            <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
                <encoder name="enc" class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
                    <layout class="app1.utilities.PatternLayoutWithUserContext">
                        <param name="Pattern" value="%d{MM/dd/yyyy HH:mm:ss} %-5level %c [%user %session] - %msg%n" />
                    </layout>
                </encoder>
            </appender>
        
            <logger name="org.springframework" level="INFO" additivity="false">
                <appender-ref ref="CONSOLE"/>
            </logger>
        
            <logger name="app1" level="DEBUG" additivity="false">
                <appender-ref ref="CONSOLE"/>
            </logger>
        
            <root level="WARN">
                <appender-ref ref="CONSOLE"/>
            </root>
        
        </configuration>

        
 5. Activate your Intellij Debugger
    If you are using the jetty-plugin (see step 4c), then 
       Pull Run / Debug 'webapp1 [jetty:run]'
       
       
 6. Connect to the site and watch the console
    a. Open a browser
    b. Go to http://localhost:8080/webapp1
       -- You should see NO_USER and NO_SESSION when there is no session
       -- You should see the username/sessionID when a user has authenticated with Spring Security
       
 