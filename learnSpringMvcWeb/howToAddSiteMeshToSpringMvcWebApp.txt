How to Add SiteMesh to Spring MVC Web App
-----------------------------------------

Assumptions
-----------
 A) You have a spring MVC Web App that you want to setup a layout for
 B) You have Apache Maven installed
 


References
----------
http://wiki.sitemesh.org/wiki/display/sitemesh3/Getting+Started+with+SiteMesh+3



Procedures
----------
 1. Add this maven dependency to your web app's pom.xml
 
        <dependency>
            <groupId>org.sitemesh</groupId>
            <artifactId>sitemesh</artifactId>
            <version>3.0.1</version>
        </dependency>



 2. Add the filter to your WEB-INF/web.xml 
    Edit /src/main/webapp/WEB-INF/web.xml
    
    Add this to the end:
    
    
      <filter>
         <filter-name>sitemesh</filter-name>
         <filter-class>org.sitemesh.config.ConfigurableSiteMeshFilter</filter-class>
      </filter>
    
      <filter-mapping>
         <filter-name>sitemesh</filter-name>
         <url-pattern>/*</url-pattern>
      </filter-mapping>



 3. Create a layout.jsp page
    Create this file:  /src/main/webapp/WEB-INF/jsp/layout.jsp
 
        <html>
           <head>
             <title><sitemesh:write property='title'/></title>
        
             <!-- Include any CSS Files in the head tag -->
             <sitemesh:write property='head'/>
           </head>
           <body>
               <sitemesh:write property='body'/>
        
               <!-- Include any JS Files on the bottom of the page -->
             
               <!-- Insert local javscript that is found inside of <content tag="bottom_js">...</content> tags   --%>
               <sitemesh:write property="page.bottom_js"/>
            </body>
        </html>



 4. Create a sitemesh configuration file:  /WEB-INF/sitemesh3.xml:
    This tells SiteMesh that requests matching the path /* (i.e. all requests) should be decorated with /decorator.html that we just created.
     
        <sitemesh>
            <mapping path="/*" decorator="/WEB-INF/jsp/layout.jsp"/>
            <mapping path="/resources/*" exclude="true"/>
        
            <content-processor>
                <tag-rule-bundle class="org.sitemesh.content.tagrules.html.Sm2TagRuleBundle" />
            </content-processor>
        </sitemesh>

  


 5. Verify that it is working:
    a. Start-up your webapp
       ASSUMPTION:  You are using the cargo plugin
       CMD> cd /d c:\tools\intellij\workspace\springMvcWebApp
       CMD> mvn clean install cargo:run
    
    b. Open a browser
       Browse to http://localhost/springMvcWebApp/
       
    c. Right-click on the page -> View Page Source
         -- In the page, you should see this:
         
          <!-- Include any CSS Files in the head tag -->
          
          <!-- Include any JS Files on the bottom of the page -->
          
  
  
 
Summary
-------
    SiteMesh is installed by dropping the library jar in /WEB-INF/lib and creating a filter (with mapping) in /WEB-INF/web.xml
    It can be configured by creating a /WEB-INF/sitemesh3.xml file, or through other configuration methods
    The filter intercepts requests to Content, runs it through the Content Processor and merges with a Decorator
    The Content is defined by an HTML page, that contains the vanilla HTML content of the site
    The Decorator is also defined by an HTML page, that contains the look and feel of the site, and placeholder <sitemesh:write> tags to indicate where the Content should be merged in
    The Content Processor contains the rules for extracting and transforming the content - it has some simple default rules and can be customized
 