How to Implement a Form Wizard in Spring MVC
--------------------------------------------
Suppose you want to setup a series of web pages and have a user continue to hold form information from page 1 to page 2.


Assumptions:
 1) You have a Spring MVC Web App
 2) You have a series of web pages that you want the user to follow

 
References
----------
http://www.intertech.com/Blog/understanding-spring-mvc-model-and-session-attributes/
http://stackoverflow.com/questions/17722641/spring-sessionattribute-how-to-retrieve-the-session-object-in-same-controller

 

Procedure
---------
 1. Create a SpringMvcWebApp [see howToCreateSpringMvcWebApp_usingIntellijMaven_jettyPlugin2.txt]
    NOTE:  Call the webapp springMvcWebAppWiz
    
 
 
 2. Create a FormBean
    Right-click on /src/main/java/app1/model -> New Java Class -> 
    Name:  FormBean
    
    Copy this to your new FormBean Class
    
        package app1.model;
        
        /**
         * Created by adam on 1/16/2016.
         */
        public class FormBean
        {
            private String message;
            private String name;
            private String age;
            private int id;
        
            public FormBean()
            {
            }
        
            public FormBean(String aMessage, int aId)
            {
                this.message = aMessage;
                this.id = aId;
            }
        
            public String getMessage() { return this.message; }
            public void setMessage(String aMessage) { this.message = aMessage; }
        
            public int getId() { return this.id; }
            public void setId(int aId) { this.id = aId; }
        
            public String getName() { return this.name; }
            public void setName(String aName) { this.name = aName; }
        
            public String getAge() { return this.age; }
            public void setAge(String aAge) { this.age = aAge; }
        
        }
    
 
 
 3. Create a Wizard Controller
    a. Right-click on app1 / controllers -> New Class
       Class Name:  WizardController
        
    b. Copy this to your WizardController
    
         
        package app1.controllers;
        
        import app1.model.FormBean;
        import org.slf4j.Logger;
        import org.slf4j.LoggerFactory;
        import org.springframework.stereotype.Controller;
        import org.springframework.web.HttpSessionRequiredException;
        import org.springframework.web.bind.annotation.*;
        import org.springframework.web.bind.support.SessionStatus;
        import org.springframework.web.servlet.ModelAndView;
        import javax.servlet.http.HttpSession;
        import java.util.Random;
        
        /**
         * Created by adam on 1/18/2016.
         */
        @Controller
        @SessionAttributes("formBean")    // Tell Spring the name of the model to be copied to the HttpSession before rendering a view
        public class WizardController
        {
            private final static Logger logger = LoggerFactory.getLogger(WizardController.class);
        
        
            /**********************************************************************
             * showPage1()
             *  1) Render page1.jsp
             *
             ***********************************************************************/
            @RequestMapping("/wizard/page1")
            public ModelAndView showPage1( HttpSession aSession)
            {
                logger.debug("handleRequestToPage1() started");
        
                // Create a modelAndView object
                ModelAndView mav = new ModelAndView();
                mav.setViewName("page1.jsp");
        
                if (aSession.getAttribute("formBean") == null)
                {
                    // This is the first time -- so create a new FormBean
                    FormBean formBean = new FormBean();
                    mav.addObject("formBean", formBean);
                }
        
                logger.debug("handleRequestToPage1() finished");
                return mav;
            }
        
        
            /**********************************************************************
             * showPage1_try3()
             *
             * Handle 2 cases:
             *  1) The user typing in /wizard on the URL -- take him to the starting page
             *  2) The user's session expires and has his POST sent to /wizard -- take him to the starting page
             ***********************************************************************/
            @RequestMapping(value="/wizard")
            public ModelAndView showPage1_try3( HttpSession aSession)
            {
                return showPage1(aSession);
            }
        
        
        
            /**********************************************************************
             * showPage1_try2()
             *
             * The user was on the 2nd page and clicked "gotoPage1"
             ***********************************************************************/
            @RequestMapping(value="/wizard", params = "gotoPage1", method=RequestMethod.POST)
            public ModelAndView showPage1_try2(  HttpSession aSession)
            {
                return showPage1(aSession);
            }
        
        
            /**********************************************************************
             * showPage2()
             * -- The user has entered some fields (a name)
             *
             * 1) Add that data to the formBean sessionAttribute
             * 2) Render page2.jsp
             ***********************************************************************/
            @RequestMapping(value="/wizard", params = "gotoPage2", method=RequestMethod.POST)
            public ModelAndView showPage2( @ModelAttribute FormBean aFormBean, HttpSession aSession)
            {
                logger.debug("showPage2() started");
        
                // Create a modelAndView object
                ModelAndView mav = new ModelAndView();
                mav.addObject("formBean", aFormBean);
                mav.setViewName("page2.jsp");
        
                logger.debug("showPage2() finished");
                return mav;
            }
        
        
            /**********************************************************************
             * showPage3()
             * -- Display the Review Page
             ***********************************************************************/
            @RequestMapping(value="/wizard", params = "gotoPage3", method=RequestMethod.POST)
            public ModelAndView showPage3( @ModelAttribute FormBean aFormBean, HttpSession aSession)
            {
                logger.debug("showPage3() started");
        
                // Create a modelAndView object
                ModelAndView mav = new ModelAndView();
                mav.addObject("formBean", aFormBean);
                mav.setViewName("page3.jsp");
        
                logger.debug("showPage3() finished");
                return mav;
            }
        
        
            /**********************************************************************
             * submitInformation()
             * -- The user has entered clicked the form to *SUBMIT* the transaction
             *
             * 1) Run the transaction
             * 2) Get the generated ticket id
             * 3) If the transaction works, then *redirect* the user to the thank you page
             * 4) If the transaction fails, then forward the user back to the showFinalReview()
             ***********************************************************************/
            @RequestMapping(value="/wizard", params = "submitTransaction", method=RequestMethod.POST)
            public ModelAndView submitTransaction( @ModelAttribute FormBean aFormBean, HttpSession aSession, SessionStatus aStatus)
            {
                logger.debug("submitTransaction() started");
        
        
                try {
                    // Run some transaction to create the request
                    int iRandomNumber = getRandomIntegerBetween(1,4);
        
                    if (iRandomNumber == 2)
                    {
                        // Something went wrong
                        throw new RuntimeException("Error occurred running transaction");
                    }
        
                    // The transaction worked.
                    int iTicketid = iRandomNumber * 1000;
        
                    // Remove this bean from the session (without killing the entire HttpSession)
                    aStatus.setComplete();
        
                    // Redirect the user to the thank you page (showing the ticketid)
                    // NOTE:  We redirect on purpose:  If the user clicks "refresh" on the last page, then nothing happens and no errors appear
                    ModelAndView mav = new ModelAndView();
                    mav.addObject("ticketid", iTicketid);
                    mav.setViewName("redirect:/wizard/thankyou");
        
                    logger.debug("submitTransaction() finished successfully");
        
                    return mav;
                }
                catch(Exception e)
                {
                    logger.debug("Error in submitTransaction()", e);
        
                    // Get the error message -- and put it on the page
                    ModelAndView mav = showPage3(aFormBean, aSession);
                    mav.addObject("errorMessage", e.getMessage());
                    return mav;
                }
            }
        
        
        
            /**********************************************************************
             * showThankYou()
             * -- The transaction has finished
             * -- Show the thank you page (along with the generated ticketid)
             ***********************************************************************/
            @RequestMapping(value="/wizard/thankyou", method = RequestMethod.GET)
            public ModelAndView showThankYou( @RequestParam("ticketid") String aTicketid)
            {
                logger.debug("showThankYou() started.   aTicketid={}", aTicketid);
        
                // Create a modelAndView object with the ticketid
                ModelAndView mav = new ModelAndView();
                mav.getModelMap().addAttribute("ticketid", aTicketid);
                mav.setViewName("page4.jsp");
        
                logger.debug("showThankYou() finished");
                return mav;
            }
        
        
            /**************************************************************
             * getRandomIntegerBetween()
             **************************************************************/
            private static int getRandomIntegerBetween(int aMinNumber, int aMaxNumber)
            {
                Random random = new Random();
        
                int randomNumber = random.nextInt(aMaxNumber - aMinNumber) + aMinNumber;
        
                return(randomNumber);
            }
        
        }

              
      
        
 4.  Make sure your welcome.jsp page has a link to the 1st page of the form
     So, add this to your welcome.jsp
     
     ASSUMPTION:  You have the ${contextPath} varaible set already using this
         <c:set var="contextPath" value="${pageContext.request.contextPath}" />

     
     Add this to your welcome.jsp page
        <a href="${contextPath}/wizard">Go to Page 1 of wizard</a>
 


 5.  Create this file:  page1.jsp
     Right-click on /src/main/webapp/WEB-INF/jsp -> New -> File
     Filename:  page1.jsp
     
     Copy this to your page1.jsp
     
        <%@ include file="/WEB-INF/jsp/stdJspIncludes.jsp" %>
        
        <!DOCTYPE HTML>
        
        <html xmlns="http://www.w3.org/1999/xhtml">
        
        <head>
            <title>Page 1</title>
        </head>
        
        <body>
        
        <%-- S T A N D A R D       H E A D E R  --%>
        <%@ include file="/WEB-INF/jsp/stdHeader.jsp" %>
        
        <h2>page1.jsp</h2>
        
        <br/>
        
        <c:if test="${not empty errorMessage}">
            <p style="display: block; background-color: #FF3232; color: #FFFFFF">
                Error Occurred!!<br/>
                    ${errorMessage}<br/>
            </p>
        </c:if>
        
        <form action="${contextPath}/wizard" method="post">
            Enter Name:  <input name="name" type="text" placeholder="-Name-" value="${formBean.name}"> <br/>
            <input type="submit" name="gotoPage2" value="Continue to Page 2"  />
        </form>
        
        <br/>
        <br/>
        
        <%-- S T A N D A R D       F O O T E R  --%>
        <%@ include file="/WEB-INF/jsp/stdFooter.jsp" %>
        
        </body>
        </html>  



 6.  Create this file:  page2.jsp
     Right-click on /src/main/webapp/WEB-INF/jsp -> New -> File
     Filename:  page2.jsp
     
     Copy this to your page2.jsp  
     
        <%@ include file="/WEB-INF/jsp/stdJspIncludes.jsp" %>
        
        <!DOCTYPE HTML>
        
        <html xmlns="http://www.w3.org/1999/xhtml">
        
        <head>
            <title>Page 2</title>
        </head>
        
        <body>
        
        <%-- S T A N D A R D       H E A D E R  --%>
        <%@ include file="/WEB-INF/jsp/stdHeader.jsp" %>
        
        <h2>page2.jsp</h2>
        
        <br/>
        
        <form action="${contextPath}/wizard" method="post">
            Name is ${formBean.name}<br/>
            <input type="text" name="age" placeholder="-Enter your age-" value="${formBean.age}"><br/>
            <input type="submit" name="gotoPage1" value="Back to Page 1"  />
            <input type="submit" name="gotoPage3" value="Continue to Page 3"  />
        </form>
        
        <br/>
        <br/>
        
        <%-- S T A N D A R D       F O O T E R  --%>
        <%@ include file="/WEB-INF/jsp/stdFooter.jsp" %>
        
        </body>
        </html> 
  


 7.  Create this file:  page3.jsp
     Right-click on /src/main/webapp/WEB-INF/jsp -> New -> File
     Filename:  page3.jsp
     
     Copy this to your page3.jsp  

        <%@ include file="/WEB-INF/jsp/stdJspIncludes.jsp" %>
        
        <!DOCTYPE HTML>
        
        <html xmlns="http://www.w3.org/1999/xhtml">
        
        <head>
            <title>Page 3</title>
        </head>
        
        <p>
        
        <%-- S T A N D A R D       H E A D E R  --%>
        <%@ include file="/WEB-INF/jsp/stdHeader.jsp" %>
        
        <h2>page3.jsp</h2>
        
        <br/>
        
        Review the form
        <p style="margin-left: 10px">
        Name is <b>${formBean.name}</b><br/>
        Age is  <b>${formBean.age}</b><br/>
        </p>
        
        <c:if test="${not empty errorMessage}">
            <%-- An error appeared running the transaction --%>
             <p style="display: block; background-color: #FF3232; color: #FFFFFF">
                Error Occurred!!<br/>
                ${errorMessage}<br/>
            </p>
        </c:if>
        
        
        <form action="${contextPath}/wizard" method="post">
            <input type="submit" name="gotoPage2" value="Back to Edit Details"  />
            <input type="submit" name="submitTransaction" value="Submit Request"  />
        </form>
        
        
        <a href="${contextPath}/page1">Go to Page 1 of wizard</a>
        
        <br/>
        <br/>
        
        <%-- S T A N D A R D       F O O T E R  --%>
        <%@ include file="/WEB-INF/jsp/stdFooter.jsp" %>
        
        </body>
        </html>
         


 8.  Create this file:  page4.jsp
     Right-click on /src/main/webapp/WEB-INF/jsp -> New -> File
     Filename:  page4.jsp
     
     Copy this to your page4.jsp  
        
        <%@ include file="/WEB-INF/jsp/stdJspIncludes.jsp" %>
        
        <!DOCTYPE HTML>
        
        <html xmlns="http://www.w3.org/1999/xhtml">
        
        <head>
            <title>Page 4</title>
        </head>
        
        <body>
        
        <%-- S T A N D A R D       H E A D E R  --%>
        <%@ include file="/WEB-INF/jsp/stdHeader.jsp" %>
        
        <h2>page4.jsp</h2>
        
        <br/>
        
        Thank you for using the form
        <p style="margin-left: 10px">
            Your ticket id is ${ticketid}
        </p>
        
        
        
        <a href="${contextPath}/page1">Go to Page 1 of wizard</a>
        
        <br/>
        <br/>
        
        <%-- S T A N D A R D       F O O T E R  --%>
        <%@ include file="/WEB-INF/jsp/stdFooter.jsp" %>
        
        </body>
        </html>
 
                
        
  9. Handle the situation in which a user's session expires 
      -- Add a method to your WizardController that will catch the HttpSessionRequiredException 
         and forward the user to page1
         
                   
        /**************************************************************
         * handleHttpSessionRequiredException()
         **************************************************************/
        @ExceptionHandler( HttpSessionRequiredException.class)
        public ModelAndView handleHttpSessionRequiredException( Exception aException,
                                                                HttpSession aSession)
        {
            logger.warn("  Exception raised", aException);
    
            // Take the user back to page1
            ModelAndView mavPage1 = showPage1(aSession);
    
            // Display an error message on page1
            mavPage1.addObject("errorMessage",  "I'm sorry, but your session has timed-out.");
            return mavPage1;
        }
 
                
        
 10. Setup a backround timer that will keep sending requests to the WizardController
     so the user's session should *NEVER* expire
     
     ASSUMPTION:  You installed jquery
                  [See howToAddJQueryToSpringMvcAppUsingIntellij.txt]
     
     
     a. Add this to page1.jsp, page2.jsp, and page3.jsp
        NOTE:  page4.jsp does not need it because the session is cleared before viewing the last page
     
     
        <%-- Load jquery --%>
        <script src="${contextPath}/resources/jquery-1.11.3/jquery-1.11.3.min.js"></script>
        
        
        <script type="text/javascript">
            var gsContextPath = '${pageContext.request.contextPath}';
        
            // Assumption:  The timeout is the session timeout - 30 secs
            // NOTE:  If session timeout is 30 min, then pageContext.request.session.maxInactiveInterval holds 1800
            var TIMEOUT_IN_MSEC =  ${pageContext.request.session.maxInactiveInterval} * 1000 - 30000;
        
            function keepMeAlive()
            {
                var sUrl = gsContextPath + '/wizard/keepAlive';
                console.log("Making ajax call to " + sUrl);
        
                $.ajax({
                    type: 'GET',
                    cache: false,
                    url:   sUrl,
                    data: '',
                    success: function(aData, aTextStatus, aXhr)
                    {
                        console.log("Ajax call finished   aData=", aData);
                    },
                    error: function(aXhr, aTextStatus, aErrorThrown)
                    {
                        console.log("Ajax call errored out:  aErrorThrown=" + aErrorThrown);
                    }
                });
            }
    
        
        
            $(document).ready(function()
            {
                console.log("calling setInterval with TIMEOUT_IN_MSEC = " + TIMEOUT_IN_MSEC);
                window.setInterval("keepMeAlive()", TIMEOUT_IN_MSEC);
            });
        </script>
            
  
  
    b. Add this to the WizardController
    
        /**********************************************************************
         * keepAlive()
         * 
         * This is a bogus handler that will acknowledge the ajax calls 
         * to keep the session from expiring
         ***********************************************************************/
        @RequestMapping(value="/wizard/keepAlive", method = RequestMethod.GET)
        @ResponseBody
        public String keepAlive()
        {
            String sResponse = "hi";
            return sResponse;
        }
        
              
            