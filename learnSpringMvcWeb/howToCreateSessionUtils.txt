How to Create a SessionUtils class for a Spring MVC Web App
-----------------------------------------------------------

SessionUtils is a singleton class that is used to get and set session information


UserProfile
-----------
package app1.model;

public class UserProfile
{
    private String username;
    private boolean isAdministrator;
    
    
    public String getUsername() { return this.username; }
    public void setUsername(String aUsername) { this.username = aUsername; }
    
    public boolean getIsAdministrator() { return this.isAdministrator; }
    public void setIsAdminisrator(boolean isAdmin) { this.isAdministrator = isAdmin; }

}



SessionUtils
------------
package app1.utilities;

import javax.servlet.http.HttpServletRequest;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;
import app1.model.UserProfile;

public class SessionUtils
{

    private static final String USER_PROFILE_KEY = "up";    // It does not matter what this string is as long as it's unique
    
    /*************************************************************************
     * getUserProfile()
     * Retrieve the UserDetails object from this user's session
     * NOTE:  Returns null if nothing is found
     *************************************************************************/
    public static UserProfile getUserProfile()
    {
        return getDataFromSession(USER_PROFILE_KEY, null);
    }

    
    
    /*************************************************************************
     * setUserProfile()
     * Store a UserProfile object in this user's session
     *************************************************************************/
    public static void setUserProfile(UserProfile aUserProfile)
    {
        setDataInSession(USER_PROFILE_KEY, aUserProfile);
    }

    
    
    
    /*************************************************************************
     * setDataInSession()
     * 
     * Story any object into the session object
     * NOTE:  Tomcat will by default try to store this in a cookie
     *        But, if Tomcat cannot use cookies, it will use rewrite urls
     *        with a sessionid
     *************************************************************************/
    private static void setDataInSession( String aKey, Object aValue)
    {
        // Get a pointer to the request object
        ServletRequestAttributes servletRequestAttributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();
        HttpServletRequest request = servletRequestAttributes.getRequest();
        
        // Store the key/object in the session
        request.getSession().setAttribute( aKey,  aValue );
    }
    
    /*************************************************************************
     * getDataFromSession()
     * 
     * Retrieve any object from the session
     * NOTE:  If the object is not found, then return the aDefaultValue 
     *************************************************************************/
    private static <T> T getDataFromSession( String aKey, T aDefaultValue )
    {
        // Get a pointer to the request object
        ServletRequestAttributes servletRequestAttributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();
        HttpServletRequest request = servletRequestAttributes.getRequest();
        
        T value = (T) request.getSession().getAttribute( aKey );
        if (value==null)
        {
            // This item was not found in the session -- so use the default value
            value = aDefaultValue;
        }
        
        return value;
    }
}


