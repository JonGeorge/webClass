How to Setup Mod_cluster to Load Balance Tomcat Web Apps
--------------------------------------------------------
Mod_cluster is an apache httpd-based load balancer that uses a communication channel to forward requests 
from apache-httpd to a set of application server nodes.  And, each application server nodes holds an app server -- e.g., Tomcat

Unlike mod_jk and mod_proxy, mod_cluster utilizes an additional connection between the application server nodes and httpd. 
The application server nodes use this connection to send server-side load balance factors and lifecycle events back to httpd via the Mod-Cluster Management Protocol (MCMP), 
a custom set of HTTP methods. With this additional feedback channel, mod_cluster can provide more intelligence and 
granularity than many other load-balancing alternatives.  This provides the following advantages:
 a) Dynamic configuration of httpd workers
 b) Server-side load balance factor calculation
 c) Fine-grained Web app lifecycle control
 d) AJP is optional


References
----------
http://www.devx.com/Java/Article/48086
http://docs.jboss.org/mod_cluster/1.3.0/html/Quick_Start_Guide.html#d0e250


Assumption
 A) You have a Java Web App that you want to run on *multiple* Tomcat instances
 B) You are running Apache httpd on Windows
 

There are a few approaches:
  Approach #1) Download an apache httpd that has the mod-cluster modules
  Approach #2) Add the mod-cluster modules to your existing apache httpd

 

                



A P P R O A C H    #1:  Download an apache httpd daemon that has the mod-cluster modules with it
------------------------------------------------------------------------------------------------
 1. Download and install the httpd binaries with mod-cluster
    a. Go to http://mod-cluster.jboss.org/downloads
    b. Click on "mod_cluster 1.3.1 Final bin downloads"
       or 
       http://mod-cluster.jboss.org/mod_cluster/downloads/1-3-1-Final-bin
       
       
       -- You want to download the mod_cluster native bundles with httpd and openssl (mod_cluster-1.2.6.Final)
          or 
          32-bit Windows:  http://downloads.jboss.org/mod_cluster//1.3.1.Final/windows/mod_cluster-1.3.1.Final-windows-x86-ssl.zip 
          64-bit Windows:  http://downloads.jboss.org/mod_cluster//1.3.1.Final/windows/mod_cluster-1.3.1.Final-windows-amd64-ssl.zip            
    b. Save mod_cluster-1.3.1.Final-windows-x86-ssl.zip to your c:\vault
    
    c. Right-click on c:\vaultmod_cluster-1.3.1.Final-windows-x86-ssl.zip -> 7-zip -> Extract Files...
       In the "Extract to" box, type-in c:\tools
    
        -- You should have these directories:
              C:\tools\httpd-2.4\bin\
              C:\tools\httpd-2.4\cgi-bin\
              C:\tools\httpd-2.4\conf
              
        This is an apache httpd-2.4 installation with the mod-cluster binaries compiled in
        
        
    e. Open a DOS window in *ADMINISTRATOR* mode
       DOS> cd /d c:\tools\httpd-2.4\bin
       DOS> installconf.bat
            NOTE:  Now, you have a httpd.conf file
                   Now, your default apache httpd is listening on port 8000
            
     
    f. Verify that the apache httpd daemon runs on windows    
       1) Attempt to start httpd
          a) Open a DOS window by pressing <Start><Run>CMD
          b) DOS> cd /d c:\tools\httpd-2.4\bin
             DOS> httpd.exe
             
       3) Attempt to connect to it
          a) Open a web browser
          b) Connect to http://localhost:8000/
             -- You should see "It works"
    
       4) Kill the Ctrl-C in the DOS window to stop running httpd.exe
       
        
    g. Setup Apache 2.4 to run as a Windows Service
       1) Open a DOS Window as an *ADMINISTRATOR* by press <Start><Run>CMD   (but do not press enter)
          NOTE:  Right-click on "Command Prompt" -> Run as Administrator
           
       2) DOS> cd /d c:\tools\Apache24\bin
          DOS> httpd -k install
           
          Installing the 'Apache2.4' service
          The 'Apache2.4' service is successfully installed.
          Testing httpd.conf....
          Errors reported here must be corrected before the service can be started.
           
       3) Run the service
          a) Press <Start><Run>Services.msc
          b) Right-click on "Apache2.4" -> Start
          c) Verify that it is running by
             1) Open a web browser
             2) Connect to http://localhost:8000/
                -- You should see the "It works" page
          
          
          NOTE:  To delete this windows service, run this command
          a) Open a DOS window (as *ADMINISTRATOR*)
          b) DOS> sc delete Apache2.4
             [SC] DeleteService SUCCESS          
            
    
 
 2. Configure apache httpd to turn on the mod_ssl module
    a. Edit the httpd.conf file
       It should be here:  c:\tools\httpd-2.4\conf\httpd.conf
      
       Uncomment this line
         LoadModule ssl_module modules/mod_ssl.so
      
    b. Restart the Apache 2.4 service
    
    c. Look at the C:\tools\httpd-2.4\logs\error_log
       You should see what version of OpenSSL was compiled0in to the mod_ssl.so file
       
       [Sat Oct 10 21:35:14.899584 2015] [mpm_winnt:notice] [pid 5628:tid 488] AH00455: Apache/2.4.10 (Win64) OpenSSL/0.9.8r mod_cluster/1.3.1.Final configured -- resuming normal operations

  
  
 3. Verify that mod-cluster is running
    Look at the mod-cluster manager status page:
      http://localhost:6666/mod_cluster_manager
    
    
    
 4. Download Tomcat   [see howToSetupTomcat8.txt]
    -- At this point, you should have Tomcat #1 located at C:\tools\apache-tomcat-7.0.59
    -- This tomcat is listening on port 8080
    -- You can reach this tomcat's manager using http://localhost:8080/manager
    
  
 
 5. Setup Tomcat #1 to load balance with mod-cluster
    a. Download the mod-cluster jar files
       1) Download the mod-cluster server-side binaries for Tomcat
          Go to http://mod-cluster.jboss.org/mod_cluster/downloads/1-3-1-Final-bin
          Click on java bundles for JBoss AS, Tomcat...
          or
          http://downloads.jboss.org/mod_cluster//1.3.1.Final/linux-x86_64/mod_cluster-parent-1.3.1.Final-bin.tar.gz
       
       2) Save mod_cluster-parent-1.3.1.Final-bin.tar.gz to your c:\vault\ 
       
       3) Right-click on c:\vault\mod_cluster-parent-1.3.1.Final-bin.tar.gz -> 7zip -> Extract Here

       4) Right-click on c:\vault\mod_cluster-parent-1.3.1.Final-bin.tar -> 7zip -> Extract Files
          Extract to:  c:\tools\mod-cluster-server-side-binaries
          
          You should now have this directory
 
              c:\tools\mod-cluster-server-side-binaries\JBossWeb-Tomcat\lib


    b. Install the mod-cluster jar files to Tomcat #1's <TOMCAT-HOME>/lib
       1) Copy all of the jars found in 
              c:\tools\mod-cluster-server-side-binaries\JBossWeb-Tomcat\lib
          To your
              <TOMCAT-HOME>/lib

       2) Delete the Tomcat-versioned jar files that you are not using:
          If you are running Tomcat7, then
            delete <TOMCAT-HOME>/lib/mod_cluster-container-tomcat6-1.3.1.Final.jar
            delete <TOMCAT-HOME>/lib/mod_cluster-container-tomcat8-1.3.1.Final.jar
       
          If you are running Tomcat8, then
            delete <TOMCAT-HOME>/lib/mod_cluster-container-tomcat6-1.3.1.Final.jar
            delete <TOMCAT-HOME>/lib/mod_cluster-container-tomcat7-1.3.1.Final.jar     
               
    
          
    c. Configure Tomcat #1 to talk with mod_cluster
       Edit your <TOMCAT-HOME>/conf/server.xml
       
       1) Add this to it
            <Listener className="org.jboss.modcluster.container.catalina.standalone.ModClusterListener" advertise="true"/>
    
       2) Optional:  Setup an AJP listener port
          NOTE:  By default, Tomcat will have an AJP listener listening on port 8009.
                 That is fine.  But, for Tomcat #2, we will use a different port
              
          So, if you see this line in server.xml, then that is fine:
                <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />
    
    
    d. Restart Tomcat #1
    
    
 
 6. Deploy a sample web app to Tomcat #1 (called mywebapp1)  
    [see howToCreateSpringMvcWebApp_usingIntellijMaven_tomcatPlugin.txt]
    
    -- At this point, you should be able to connect directly to your webapp using Tomcat
       at http://localhost:8080/mywebapp1
       
       
 
 7. Verify that the load balancer talks to Tomcat #1
    NOTE:  The load balancer is listening on port 8000
           Tomcat #1 is listening on port 8080
           
    a. Startup the Apache load balancer
       CMD> net start Apache2.4
       
    b. Look at the load balancer status page
       Open a web browser
       Connect to http://localhost:6666/mod_cluster_manager
       -- You should see Virtual Host 1
       
    c. Startup Tomcat #1
       DOS> cd /d C:\tools\apache-tomcat-7.0.55\bin
       DOS> startup.bat
       
    d. Connect to the Tomcat webapp using the load balancer 
       Open a web browser
       Connect to http://localhost:8000/mywebapp1
 
 
 
 
 
 8. Install Tomcat #2 to C:\tools\apache-tomcat-7.0.59b\
    [Follow procedures in howToSetupTomcat8.txt]
 
 
 
 
 9. Setup Tomcat #2 to load balance with mod-cluster
    NOTE:  We are changing this tomcat to listen on port 9080 because both Tomcats are running on the same computer
    
    a. Install the mod-cluster jar files to Tomcat #1's <TOMCAT-HOME-2>/lib
       1) Copy all of the jars found in 
              c:\tools\mod-cluster-server-side-binaries\JBossWeb-Tomcat\lib
          To your
              <TOMCAT-HOME-2>/lib

       2) Delete the Tomcat-versioned jar files that you are not using:
          If you are running Tomcat7, then
            delete <TOMCAT-HOME-2>/lib/mod_cluster-container-tomcat6-1.3.1.Final.jar
            delete <TOMCAT-HOME-2>/lib/mod_cluster-container-tomcat8-1.3.1.Final.jar
       
          If you are running Tomcat8, then
            delete <TOMCAT-HOME-2>/lib/mod_cluster-container-tomcat6-1.3.1.Final.jar
            delete <TOMCAT-HOME-2>/lib/mod_cluster-container-tomcat7-1.3.1.Final.jar     
     
     
    b. Configure Tomcat #2 to talk with mod_cluster  
       Edit your <TOMCAT-HOME>/conf/server.xml
      
       1) Add this to it
           <Listener className="org.jboss.modcluster.container.catalina.standalone.ModClusterListener" advertise="true"/>
 
       2) Change the AJP listener port to 8010
          Change the redirector port to 9443
             <Connector port="8010" protocol="AJP/1.3" redirectPort="9443" /> 
            
       3) Modify the server.xml so that the Connector listens on 9080 with a redirect port of 9443
            <Connector port="9080" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="9443" />
    
       4) Modify the server.xml so that Tomcat #1's shutdown port is 9005
            <Server port="9005" shutdown="SHUTDOWN">
              
         -- You can reach this tomcat's manager using http://localhost:9080/manager
    

    
10. Deploy mywebapp1.war to Tomcat #2

 


11. Verify that the load balancer talks to Tomcat #1 and Tomcat #2
    NOTE:  The load balancer is listening on port 8000
           Tomcat #1 is listening on port 8080
           
    a. Startup the Apache load balancer
       CMD> net start Apache24
 
    b. Startup Tomcat #1
       DOS> cd /d C:\tools\apache-tomcat-7.0.55\bin
       DOS> startup.bat
 
    c. Startup Tomcat #2
       DOS> cd /d C:\tools\apache-tomcat-7.0.55b\bin
       DOS> startup.bat
     
    d. Look at the load balancer status page
       Open a web browser
       Connect to http://localhost:6666/mod_cluster_manager
       -- You should see Virtual Host 1
       -- You should see *TWO NODES*
     
    e. Connect to the Tomcat webapp using the load balancer 
       Open a web browser
       Connect to http://localhost:8000/mywebapp1
 

 
 
 
 


