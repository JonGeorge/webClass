How to Add an OpenLayers Map to a Grails Web App
----------------------------------------------

Assumptions
 A) You have created a Grails web app   [see howToSetupAndDebugGrails2.4WebAppWithIntellijAndEverything.txt]
 B) your web browser users can reach an openLayers server
 
 
 
Approaches
----------
  #1) Add the Angular files manually to your web app *and*
      Create a resources module *and*
      Load the files on your web pages using the Resources Plugin
      NOTE:  Your javascript file *will* be included in the resources bundle

  #2) Add the Angular files manually to your web app *and*
      Load the files on your web pages using the Asset Pipeline Plugin
 



A P P R O A C H      # 1  Add openLayer files manually and load w/Resources Plugin (Also create a Resources Module)
------------------------------------------------------------------------------------------------------------------
 1. Download openLayers 3.10.1
    a. Go to http://openlayers.org/download/
    b. Click on "v3.10.1-dist.zip"
       or
       https://github.com/openlayers/ol3/releases/download/v3.10.1/v3.10.1-dist.zip
          
    c. Save v3.10.1-dist.zip to your c:\vault\
       
    d. Right-click on c:\vault\v3.10.1-dist.zip -> 7zip -> Extract Here 
       Now, you should have a few files here:
             c:\vault\v3.10.1-dist\ol-debug.js
             c:\vault\v3.10.1-dist\ol.css
             c:\vault\v3.10.1-dist\ol.js



 2. Manually add openLayers to your Grails Web App
    a. In Intellij, Right-click on webapp/js -> new -> directory
       Directory name:  openLayers-3.10.1
 
    b. Browse to the c:\vault\v3.10.1-dist\
       Right-click on all files -> Copy
       
    c. In Intellij, Right-click on webapp/js/openLayers-3.10.1 -> Right-Click -> Paste
       Intellij will prompt you to copy files, press OK
     
       Now, you should have these files in your grails app
             /webapp/js/openLayers-3.10.1/ol.css
             /webapp/js/openLayers-3.10.1/ol.js
             /webapp/js/openLayers-3.10.1/ol-debug.js
 
          
          
          
 3. Make sure the Resources plugin is found in your pom.xml
    NOTE:  You should see something like this in your pom.xml
           If not, then add it to your pom.xml
                     
       <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>resources</artifactId>
            <version>1.2.14</version>
            <scope>runtime</scope>
            <type>zip</type>
        </dependency>
    
 
 
 4. Define a resource in your ApplicationResources.groovy file
    Open your grails-app/conf/ApplicationResources.groovy
    
    You probably see this:
        modules = {
            application {
                resource url:'js/application.js'
            }
        }

    
    Change it to this:
        modules = {
            application {
                resource url: 'js/application.js'
                resource url: 'js/openLayers-3.10.1/ol.js'
                resource url: 'js/openLayers-3.10.1/ol.css'
            }
        }    
    
    
 
 5. Make sure your main layout includes the "application" module (in your main.gsp)
    So, your main.gsp must have either of these lines:
    
       <g:javascript library="application"/>
         
        *or*
           
        <r:require modules="application"/>
           
      
   
    
    So, your main.gsp page looks like this

        <!DOCTYPE html>
        <!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
        <!--[if IE 7 ]>    <html lang="en" class="no-js ie7"> <![endif]-->
        <!--[if IE 8 ]>    <html lang="en" class="no-js ie8"> <![endif]-->
        <!--[if IE 9 ]>    <html lang="en" class="no-js ie9"> <![endif]-->
        <!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"><!--<![endif]-->
            <head>
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
                <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
                <title><g:layoutTitle default="Grails"/></title>
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <link rel="shortcut icon" href="${resource(dir: 'images', file: 'favicon.ico')}" type="image/x-icon">
                <link rel="apple-touch-icon" href="${resource(dir: 'images', file: 'apple-touch-icon.png')}">
                <link rel="apple-touch-icon" sizes="114x114" href="${resource(dir: 'images', file: 'apple-touch-icon-retina.png')}">
                <link rel="stylesheet" href="${resource(dir: 'css', file: 'main.css')}" type="text/css">
                <link rel="stylesheet" href="${resource(dir: 'css', file: 'mobile.css')}" type="text/css">
                <g:layoutHead/>
        
                
                <r:require modules="application, bootstrap"/>
                
                <r:layoutResources />
            </head>
            <body>
                <div id="grailsLogo" role="banner"><a href="http://grails.org"><img src="${resource(dir: 'images', file: 'grails_logo.png')}" alt="Grails"/></a></div>
                <g:layoutBody/>
                <div class="footer" role="contentinfo"></div>
                <div id="spinner" class="spinner" style="display:none;"><g:message code="spinner.alt" default="Loading&hellip;"/></div>
                <r:layoutResources />
            </body>
        </html>

        
            
 6. Verify that angular js is loaded
    a. Start-up your webapp
       CMD> cd /d c:\tools\intellij\workspace\grailwebapp2
       CMD> mvn grails:run-app
    
    b. Open a browser
       Browse to http://localhost/grailwebapp2/
         -- In the "Welcome to Grails" page, you should see on the left:  "resources - 1.2.14"
       
    c. Click on your WelcomeController link
    
    d. Right-click on the page -> View Page Source
       1) In the page, you should see this:
             <link href="/grailsWebAppR/static/bundle-bundle_application_head.css" type="text/css" rel="stylesheet" media="screen, projection" />   
       2) Click on this link 
          -- You should see openLayer css file inside of this cssbundle
         
         
       3) In the view-source page, you should see this link:
            <script src="/grailsWebAppR/static/bundle-bundle_application_defer.js" type="text/javascript" ></script>
       4) Click on this link
           -- You should see OpenLayers 3 inside it
         




A P P R O A C H      # 2:  Add openLayer files manually and load w/Asset Pipeline Plugin
----------------------------------------------------------------------------------------
 1. Download openLayers 3.10.1
    a. Go to http://openlayers.org/download/
    b. Click on "v3.10.1-dist.zip"
       or
       https://github.com/openlayers/ol3/releases/download/v3.10.1/v3.10.1-dist.zip
          
    c. Save v3.10.1-dist.zip to your c:\vault\
       
    d. Right-click on c:\vault\v3.10.1-dist.zip -> 7zip -> Extract Here 
       Now, you should have a few files here:
             c:\vault\v3.10.1-dist\ol-debug.js
             c:\vault\v3.10.1-dist\ol.css
             c:\vault\v3.10.1-dist\ol.js
             
             
 2. Manually add openLayers to your Grails Web App
    a. In Intellij, Right-click on grails-app/assets/javascripts/ -> new -> directory
       Directory name:   openLayers-3.10.1
   
    b. Browse to the c:\vault\v3.10.1-dist\
       Right-click on all files -> Copy
       
    c. In Intellij, Right-click on grails-app/assets/javascripts/openLayers-3.10.1 -> Right-Click -> Paste
       Intellij will prompt you to copy files, press OK
     
       Now, you should have these files in your grails app
             /grails-app/assets/javascripts/openLayers-3.10.1/ol.css
             /grails-app/assets/javascripts/openLayers-3.10.1/ol.js
             /grails-app/assets/javascripts/openLayers-3.10.1/ol-debug.js



 3. Make sure the asset-pipeline plugin is found in your pom.xml
    NOTE:  You should see something like this in your pom.xml
    
         <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>asset-pipeline</artifactId>
            <version>2.5.1</version>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>
            
 
 4. Add this to to your application.js
        //= require openLayers-3.10.1/ol.js
        
        
 5. Add this to your application.css
        *= require openLayers-3.10.1/ol.css
 
           
 6. Verify that openLayers are loaded
    a. Start-up your webapp
       CMD> cd /d c:\tools\intellij\workspace\grailWebAppE
       CMD> mvn grails:run-app
    
    b. Open a browser
       Browse to http://localhost/grailWebAppE/
       
    c. Click on your WelcomeController link
    
    d. Right-click on the page -> View Page Source
         -- In the page, you should see this:
  
       <link rel="stylesheet" href="/grailsWebAppE/assets/openLayers-3.10.1/ol.css?compile=false"  />
      
       <script src="/grailsWebAppE/assets/openLayers-3.10.1/ol.js?compile=false" type="text/javascript" ></script>

       Now, all of your web pages have openLayers added in


    NOTE:  the Asset Pipeline will automatically combine files for you. 
 
