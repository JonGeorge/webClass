How to Add OpenLayers 3.20.1 to your Spring MVC Web App using Intellij
----------------------------------------------------------------------

Assumptions:
 A) You have an Intellij webapp already setup using Spring MVC  
    [see howToCreateSpringMvcWebApp_usingIntellijMaven_tomcatPlugin.txt]
    
 B) Your webapp has a src/main/webapp/resources directory
 
 C) If you are using Spring-MVC, then you have this line in dispatch-servlet.xml
           <!-- Map the relative address for certain locations -->
           <mvc:resources  mapping="/resources/**"  location="/resources/" />
           
 D) Your Spring MVC web app has jquery installed
    [see howToAddJQueryToSpringMvcApp.txt]



Procedures
----------
 1. Download and Install OpenLayers 3.20.1
    a. Go to http://openlayers.org/download/
    b. Click on "v3.20.1-dist.zip"
       or
       https://github.com/openlayers/ol3/releases/download/v3.20.1/v3.20.1-dist.zip
          
    c. Save v3.20.1-dist.zip to your c:\vault\
       
    d. Right-click on c:\vault\v3.20.1-dist.zip -> 7zip -> Extract Here 
       Now, you should have a few files here:
             c:\vault\v3.20.1-dist\ol-debug.js
             c:\vault\v3.20.1-dist\ol.css
             c:\vault\v3.20.1-dist\ol.js

                  
         
    d. In Intellij, Right-click on src/main/webapp/resources -> new -> folder
       Folder name:  openLayers-3.20.1
           
    e. Browse to the c:\vault\v3.20.1-dist and highlight everything -> Right-Click -> Copy
    
    f. In Intellij, Right-click on src/main/webapp/resources/openLayers-3.20.1/ -> Right-Click -> Paste
       Intellij will prompt you to copy files, press OK
       
       Now, you should have these directories
          src/main/webapp/resources/openLayers-3.20.1/ol.css
          src/main/webapp/resources/openLayers-3.20.1/ol.js
          src/main/webapp/resources/openLayers-3.20.1/ol-debug.js



    
 2. Add an event handler for /map1 to your WelcomeController.java
    a.  Add this code to your existing WelcomeController.java    
            
        /**********************************************************************
         * showMap1()
         *
         * The user browsed to the /sample page
         *  1) Forward the user to the sample.jsp page
         ***********************************************************************/
        @RequestMapping("/map1")
        public ModelAndView showMap1( Model aModel )
        {
            logger.debug("showMap1() started");
    
            // Create a modelAndView object
            ModelAndView mav = new ModelAndView();
    
            // Show the sample.jsp page
            mav.setViewName("map1.jsp");
    
            return mav;
        }
    
   
   
 3. Create this file:  map1.jsp
    a. Browse to src/main/webapp/WEB-INF/jsp -> Right-click -> New File
    b. Filename:  map1.jsp
    c. Copy this to your map1.jsp
    
        <%@ include file="/WEB-INF/jsp/stdJspIncludes.jsp" %>

        <!DOCTYPE HTML>

        <html xmlns="http://www.w3.org/1999/xhtml">

        <head>
            <title>sample.jsp</title>

            <meta name="viewport" content="width=device-width, initial-scale=1.0">

            <%-- Load openLayers CSS --%>
            <script src="${contextPath}/resources/openLayers-3.20.1/ol.css"></script>
        </head>



         <body>
             <%-- S T A N D A R D       H E A D E R  --%>
             <%@ include file="/WEB-INF/jsp/stdHeader.jsp" %>

             <h2>map1.jsp</h2>

             <br/>


             <%--  B I G      M A P --%>
             <div id="map" class="map" style=" height: 400px; width: 80%; margin-left: 10%; margin-right: 10%;></div>


             <br/>
             <br/>

             <%-- S T A N D A R D       F O O T E R  --%>
             <%@ include file="/WEB-INF/jsp/stdFooter.jsp" %>


            <%-- Load jQuery (necessary for Bootstrap's JavaScript plugins) --%>
            <script src="${contextPath}/resources/jquery/jquery-1.11.3.min.js"></script>

            <%-- Load openLayers js --%>
            <script src="${contextPath}/resources/openLayers-3.20.1/ol.js"></script>

            <script type="text/javascript">

                 function initializeMap()
                 {
                      var layers = [
                        new ol.layer.Tile({
                          source: new ol.source.TileWMS({
                            url: 'http://demo.opengeo.org/geoserver/wms',
                            params: {
                              'LAYERS': 'ne:NE1_HR_LC_SR_W_DR'
                            }
                          })
                        })
                      ];

                      var map = new ol.Map({
                        controls: ol.control.defaults().extend([
                          new ol.control.ScaleLine({
                            units: 'degrees'
                          })
                        ]),
                        layers: layers,
                        target: 'map',
                        view: new ol.View({
                          projection: 'EPSG:4326',
                          center: [0, 0],
                          zoom: 2
                        })
                      });
                 }


                 $(document).ready(function()
                  {
                      initializeMap();
                  });

            </script>


         </body>
       </html>

       
 
 
     
 4. Setup the Jetty maven plugin to startup a Jetty instance
    Right now, the end of your pom.xml should look like this:
    
            <build>
              <finalName>webapp1</finalName>
            </build>
         </project>
     
     
    a. Change the end of the of the pom.xml to this:
    
          <build>
            <finalName>webapp1</finalName>
    
            <plugins>
              <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
        
                <!-- NOTE:  The jetty 9.4.6.v20170531 version requires Java 1.8 -->
                <version>9.4.6.v20170531</version>
        
                <configuration>
                  <httpConnector>
                      <!-- Your local jetty listens on port 8080 -->
                      <port>8080</port>
                  </httpConnector>
        
                  <webApp>
                     <!-- If your project is called webapp1, then jetty listens on http://localhost:8080/webapp1  -->
                     <contextPath>/${project.artifactId}</contextPath>
                  </webApp>
        
                  <!-- Jetty will scan every 10 seconds to pickup front-end changes -->
                  <scanIntervalSeconds>10</scanIntervalSeconds>
                </configuration>
              </plugin>
            </plugins>
         </build>
       </project>

  
  
 5. Use IntelliJ to set a breakpoint
    a. In Intellij, Pull File / Save All
    b. Set a breakpoint
       -- Browse to src/main/java -> app1.controllers -> WelcomeController.java
       -- Single-click in the left margin and add a breakpoint on this line
             logger.debug("mainPage() started");
        
        
        
6. Startup the webapp in debug mode
    a. Open the Maven Projects window
       Pull View -> Tool Window -> Maven Project
    
    b. Single-click on Plugins -> jetty -> jetty:run
    
    c. Right-click on jetty:run -> Debug....  
       -- This will activate the jetty maven plugin in debug mode
          *AND*
       -- This will create a menu option :
          Run -> Debug '<your webapp's name>' [jetty:run]'
        
       NOTE:  The next time, you just pull Run -> Debug '<your web app's name> [jetty:run]'    
 
        
        
 7. Open a web browser to your local webapp's /sample page
    a. Open Firefox
    b. Connect to http://localhost:8080/webapp1/map1
       You should reach your breakpoint
    c. Press F9 to continue
       
  
              
