Lesson #2:  How to use Angular to make a Guessing Game
------------------------------------------------------

Assumptions:  
 A) You have IntelliJ installed
 B) You have Maven installed
 


Procedures
----------
 1. Follow the steps in howToCreateSpringMvcWebApp_usingIntellijMaven_cargoPlugin.txt
    NOTE:  Call the project:   springMvcAngular
    
 
 
 2. Add a generic controller to your WelcomeController
 
     /**********************************************************************
     * showExamplePage()
     ***********************************************************************/
    @RequestMapping("/example/{aViewName}")
    public ModelAndView showExamplePage(@PathVariable String aViewName, Model aModel )
    {
        // Create a modelAndView object
        String sViewName = aViewName + ".jsp";
        ModelAndView mav = new ModelAndView(sViewName);

        // Create a userInfo object
        UserInfo userInfo = new UserInfo();
        userInfo.setUserName("Adam");
        userInfo.setIsAdministrator(true);

        // Add the userInfo information to the view
        mav.addObject("userInfo", userInfo);

        return mav;
    }
    
 
 
 3. Add this link to your welcome.jsp page
  
     <a href="${contextPath}/example/angular2">Angular example #2 - guessing game</a> <br/>
    
 
 
 4. Create this file:  angular2.jsp
    a. Right-click on /src/main/webapp/WEB-INF/jsp -> New File
       Filename:  angular2.jsp
        
    b. Copy this to your file:
	     
		<%@ include file="/WEB-INF/jsp/stdJspIncludes.jsp" %>
		<!DOCTYPE HTML>
		
		<html lang="en" data-ng-app="myApp">
		
		<head>
		    <title>Angular #2</title>
		</head>
		
		<body data-ng-controller="PageController as ctrl">
		
		<%-- S T A N D A R D       H E A D E R  --%>
		<%@ include file="/WEB-INF/jsp/stdHeader.jsp" %>
		
		<h2>angular2.jsp</h2>
		
		
		Guess the number between 1 and 100<br/>
		
		Your Guess: <input type="text" data-ng-model="ctrl.guessedNumber"
		                   data-on-enter="ctrl.verifyNumber()"
		                   data-ng-disabled="ctrl.gameIsOver"
		                   data-ng-focus="ctrl.gameIsOver == false" />
		
		<button data-ng-click="ctrl.verifyNumber()" data-ng-disabled="ctrl.gameIsOver">Verify</button>&nbsp;&nbsp;
		<button data-ng-click="ctrl.restartGame()">Restart</button><br/>
		<br/>
		No of guesses: {{ctrl.totalGuessesMade}} <br/>
		<b>{{ctrl.messageHint}}</b>
		
		
		
		<%-- S T A N D A R D       F O O T E R  --%>
		<%@ include file="/WEB-INF/jsp/stdFooter.jsp" %>
		
		<%-- Load jQuery --%>
		<script src="${contextPath}/resources/jquery-1.11.3/jquery-1.11.3.min.js"></script>
		
		<%-- Load Angular --%>
		<script src="${contextPath}/resources/angular-1.3.16/angular.min.js" type="text/javascript"></script>
		
		<script type="text/javascript">
		    var myApp = angular.module('myApp', []);
		
		
		    myApp.controller('PageController', [ function ()
		    {
		        var self = this;
		
		        self.messageHint = 'Starting Game';
		        self.guessedNumber = '';
		        self.totalGuessesMade = 0;
		        self.hiddenNumber = generateRandomNumber();
		        self.gameIsOver = false;
		
		
		        /************************************************
		         * restartGame()
		         *************************************************/
		        self.restartGame = function()
		        {
		            console.log("restartGame()");
		
		            self.totalGuessesMade = 0;
		            self.messageHint = "Restarting Game";
		            self.hiddenNumber = generateRandomNumber();
		            self.guessedNumber = '';
		            self.gameIsOver = false;
		
		            // Put the mouse on the textbox
		        };
		
		        /************************************************
		         * verifyNumber()
		         *************************************************/
		        self.verifyNumber = function()
		        {
		            self.totalGuessesMade++;
		
		            if (self.guessedNumber > this.hiddenNumber)
		            {
		                self.messageHint = "You're too high";
		            }
		            else if (self.guessedNumber < this.hiddenNumber)
		            {
		                self.messageHint = "You're too low";
		            }
		            else
		            {
		                self.messageHint = "You got it!!!";
		
		                // The user got it -- so set a flag indicating the game is over
		                // NOTE:  This will cause certain buttons to be disabled
		                self.gameIsOver = true;
		            }
		        };
		
		
		        function generateRandomNumber ()
		        {
		            var iRndNumber = Math.floor(Math.random()*101);
		            console.log("generateRandomNumber() returns " + iRndNumber);
		            return iRndNumber;
		        };
		    }]);
		
		
		    myApp.directive('onEnter', function () {
		        return function (scope, element, attrs) {
		            element.bind("keydown keypress", function (event) {
		                if(event.which === 13) {
		                    // The user clicked enter in this form field -- so run the action in data-on-enter="  "
		                    scope.$apply(function (){
		                        scope.$eval(attrs.onEnter);
		                    });
		
		                    event.preventDefault();
		                }
		            });
		        };
		    });
		
		</script>
		
		</body>
		</html>
		 
	 