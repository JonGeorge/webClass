Lesson:  Add a Grid Page using ag-grid community edition
--------------------------------------------------------


References
----------
https://www.ag-grid.com/javascript-grid-npm/
https://www.ag-grid.com/angular-grid/




Procedure
---------
 1. Install the ag-grid
    unix> cd ~/intellijProjects/angularApp1/frontend
	unix> npm install --save ag-grid-community ag-grid-angular
    unix> npm install           # in certain circumstances npm will perform an "auto prune". This step ensures all expected dependencies are present

 2. Import the AgGridModule module
    a. Edit app.module.ts
	b. Add this to the imports:
	     imports: [ ....     AgGridModule, .... ]

 3. Add the CSS files for the angular-grid alpine theme
    a. Edit the angular.json
	b. Change the "styles": [  ] section so that it has these css files
              "./node_modules/ag-grid-community/dist/styles/ag-grid.css",
              "./node_modules/ag-grid-community/dist/styles/ag-theme-alpine.css",	
       
	   When finished the "styles" section looks like this:
            "styles": [
              "./node_modules/@angular/material/prebuilt-themes/deeppurple-amber.css",
              "./node_modules/@fortawesome/fontawesome-free/css/all.css",
              "./node_modules/ag-grid-community/dist/styles/ag-grid.css",
              "./node_modules/ag-grid-community/dist/styles/ag-theme-alpine.css",
              "src/styles.css"
            ],	   
	   
 4. Add a grid to the view-reports page
    a. Edit view-reports.component.html
	b. Replace the contents with this grid
		<ag-grid-angular
			style="width: 500px; height: 150px;"
			class="ag-theme-alpine"
			[rowData]="rowData"
			[columnDefs]="columnDefs">
		</ag-grid-angular>

 5. Create public variables with the rowData and ColumnsDefs
    a. Edit view-reports.components.ts
	b. Add these 2 public variables:
	   	public columnDefs = [
			{field: 'id' },
			{field: 'name' },
			{field: 'priority'},
			{field: 'start_date'},
			{field: 'end_date'}
		];

		public rowData = [
			{ id: 1, name: 'Report 1', priority: 'low', 'start_date': '05/01/2019', 'end_date': '05/05/2019'},
			{ id: 2, name: 'Report 2', priority: 'medium', 'start_date': '06/01/2019', 'end_date': '06/06/2019'},
			{ id: 3, name: 'Report 3', priority: 'high', 'start_date': '07/01/2019', 'end_date': '07/07/2019'}
		];

 6. Try it out.  You should see a light-colored grid in the view reports page
 
 7. Change the AG-Grid theme to ag-theme-alpine-dark
    a. Edit the angular.json
	b. Change the "styles": [  ] section so that it has these css files
              "./node_modules/ag-grid-community/dist/styles/ag-grid.css",
              "./node_modules/ag-grid-community/dist/styles/ag-theme-alpine-dark.css",	
			  
    c. Edit the view-reports.component.html
	d. Change the CSS class so that class="ag-theme-alpine-dark"
			<ag-grid-angular
				style="width: 500px; height: 150px;"
				class="ag-theme-alpine-dark"
				[rowData]="rowData"
				[columnDefs]="columnDefs">
			</ag-grid-angular>	
			
 8. Try it out.  You should see a dark-colored grid in the view reports page

 9. Adjust the grid so it takes the full width of the screen
 
 
