Lesson:  How to adjust the spring-boot webapp so communicates with ES on the BDP
--------------------------------------------------------------------------------



Part 1: Get the ElasticSearch to work on the localbox
-----------------------------------------------------
 1. Add an ElasticSearchResources class  (has the url and httpClient needed to make the calls)
 2. Add an ElasticSearchService class
 3. Add a SearchController (that injects the ElasticSearchService)
    -- It has a few REST calls to search/add/delete records
 4. Verify it works locally
 
 
 
 
 Part 2: Get the ElasticSearch to work on the BDP
 ------------------------------------------------
 1. Add an ES mapping file to your backend
    -- It has special settings so that people with the "app1_es_writer" role can read/write to this ES mapping
 
 2. Grant the app1_es_writer to all of the data nodes on ES
    -- The spring-boot app is using the PKI cert of the data node to make an **outgoing** REST call to ES
    -- So, the data node needs to have hte "app1_es_writer" role granted to it
 
 3. Add ElasticSearch settings to the application.yaml and template application.yaml
 
 4. Package the RDA
 5. Deploy to the BDP
 6. Try it out on the BDP
 


