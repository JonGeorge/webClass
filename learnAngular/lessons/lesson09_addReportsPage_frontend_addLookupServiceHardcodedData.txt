Lesson:  Add a Lookup Service
-----------------------------
Problem: We have lots of dropdowns that need lookup values
Solution: Create a LookupService


Procedure
---------
 1. Add a hard-coded list of priorities in form1.component.ts
      public priorities: any =
        [
          {
            id: 1,
            name: 'Low'
          },
          {
            id: 2,
            name: 'Medium'
          },
          {
            id: 3,
            name: 'High'
          },
          {
            id: 4,
            name: 'Critical'
          }];


 2. Change the form1.component.html to loop through the list of priorities
    -- The value holds the "id" field
    -- The displayed label holds the "name" field

    a. Change this dropdown
          <select matNativeControl  name="priority" [(ngModel)]="report.priority">
            <option value="0">-Select Priority-</option>
            <option value="1">Low</option>
            <option value="2">Medium</option>
            <option value="3">High</option>
          </select>

       To this:
          <mat-select name="priority" [(ngModel)]="report.priority">
            <mat-option mat-value="undefined">-Select Priority-</mat-option>
            <mat-option *ngFor="let priority of priorities"  value="{{priority.id}}">{{priority.name}}</mat-option>
          </mat-select>



 3. Generate the Lookup Service
    unix> cd ~/intellijProjects/angularApp1
    unix> ng generate service services/lookup
          -- Creates src/app/services/lookup.service.ts
          -- Creates src/app/services/lookup.service.spec.ts


 4. Replace the lookup.service.ts with this:

         import { Injectable } from '@angular/core';


         /*
          * Define the LookupDTO class
          */
         export class LookupDTO {
           id: number;
           name: string;

           constructor(aId: number, aName: string) {
             this.id = aId;
             this.name = aName;
           }
         }


         @Injectable({
           providedIn: 'root'
         })
         export class LookupService {

           constructor() { }

           /*
            * Return a list of LookupDTO objects that correspond to the passed-in type name -- e.g, 'priority'
            */
           public getLookupWithType(aType: string)  {

             // Return a hard-coded array of LookupDTO objects
             let listOfDtos: Array<LookupDTO> = [
                 new LookupDTO(1, 'low'),
                 new LookupDTO(2, 'medium'),
                 new LookupDTO(3, 'high'),
                 new LookupDTO(3, 'critical')
               ];

             return listOfDtos;
           }

         }


 5. Edit the form1.component.ts to use the LookupService
    a. Inject Change the constructor so it is injected
          constructor(private lookupService: LookupService) { }

    b. Remove the hard-coded list of priorities
          public priorities: any =
                 [
                   {
                     id: 1,
                     name: 'Low'
                   },
                   {
                     id: 2,
                     name: 'Medium'
                   },
                   {
                     id: 3,
                     name: 'High'
                   },
                   {
                     id: 4,
                     name: 'Critical'
                   }];

    c. Insert a variable called priorities
          public priorities: Array<LookupDTO>;

    d. Change the ngOnInit() to load the list of priorities
          ngOnInit() {
            this.report = new Report();
            this.report.name = null;
            this.report.source = null;
            this.report.priority = null;

            // Use the LookupService to get all of the priorities
            this.priorities = this.lookupService.getLookupWithType('priority')
          }

 6. Try it out and see if it works
    a. Pull Run / Run 'Angular CLI Server'
    b. Pull Run / Debug 'Angular Application'
