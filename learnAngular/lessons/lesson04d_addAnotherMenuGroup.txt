Add Another Manu Group to the NavBar
------------------------------------
A few problems with the navbar:
 A) We want to highlight and open the current navgroup
    -- So, if navgroup1 is open, the close up all other navgroups
	There is no highlighting for the current navgroup
 B) We want to highlight the currently opened nav item
 
 
Procedure
---------
 1. Make sure there is no gap between the left navbar and the content window
    a. Edit the app.component.html
	b. Set the width of the navbar to be 200px
	   Set the fxLayoutGap="0px"
	
	When finished, the app.component.html should look like this:
		<div fxFlexFill fxLayout="column">

		  <div fxFlex="75px">
			<!-- Header is 75 pixels high -->
			<app-header></app-header>
		  </div>


		  <div fxFlex fxLayout="row" fxLayoutGap="0px">
			<div fxFlex="200px" style="padding: 0" *ngIf="this.isSideNavVisible">
			  <!-- Left Side Navigation -->
			  <app-navbar></app-navbar>
			</div>

			<div fxFlex>
			  <!-- Main Viewing Area -->
			  <router-outlet></router-outlet>
			</div>
		  </div>

		</div>


	   
 2. Add the 2nd menu group
    a. Edit the navbar.component.html
	b. Add this section (after the end of menu group 1)
	
		  <!-- Menu Group 2 -->
		  <div class='navHeader'>
			<i class="fa fa-file-alt navHeaderIcon"></i>
			<span class="navHeaderTitle">Analytics</span>
		  </div>

		  <!-- Menu Group 2 Items -->
		  <div class='navGroup' data-ng-class="{'toggled': reportsToggled}">

			<!-- Chart 1 -->
			<mat-list-item class="navItem" [routerLink]="'page/chart1'" >
			  <a title="Chart 1">Chart 1</a>
			  <div fxFlex fxLayoutAlign="end end">
				<a [routerLink]="'page/chart1'" target="_blank">
				  <i class="fas fa-external-link-alt navItemIcon" title="Open Chart 1 in a new window"></i>
				</a>
			  </div>
			</mat-list-item>

			<!-- Chart 2 -->
			<mat-list-item class="navItem" [routerLink]="'page/chart2'">
			  <a title="Chart 2">Chart 2</a>
			  <div fxFlex fxLayoutAlign="end end">
				<a [routerLink]="'page/chart2'" target="_blank">
				  <i class="fas fa-external-link-alt navItemIcon" title="Open Chart 2 in a new window"></i>
				</a>
			  </div>
			</mat-list-item>

		  </div>  <!-- End of Menu Group 2 Items -->

 3. Add components for chart1 and chart2
    unix> cd ~/intellijProjects/angularApp1/frontend
	unix> ng generate component analytics/chart1
	unix> ng generate component analytics/chart2

 4. Add routes
    page/chart1 -> chart1 component
	parg/chart2 -> chart2 component
	a. Edit the app.module.ts
	b. Add these routes to appRoutes
	 	 { path: 'page/chart1',  component: Chart1Component },
 		 { path: 'page/chart2',  component: Chart2Component },
		 
	When finished, the appRoutes list should look like this:
		const appRoutes: Routes = [
		  { path: 'page/addReport',    component: AddReportComponent },
		  { path: 'page/viewReports',  component: ViewReportsComponent },
		  { path: 'page/chart1',       component: Chart1Component },
		  { path: 'page/chart2',       component: Chart2Component },
		  { path: '',                  component: WelcomeComponent},
		  { path: '**',                component: NotFoundComponent}
		];

 5. Adjust the navbar so that clicking on a navbar item is highlighted in the navbar
    a. Edit the navbar.component.css
	b. Add this:
	
		.mat-list-item.active{
		  /* Set the color for the actively clicked navbar item */
		  /* Active mat-list-item has a background gradient that goes to the right */
		  color: #fff;
		  background: linear-gradient(to right, #5e6b7b, rgba(94, 107, 123, 0));
		  font-weight: bold;
		}

		
    c. Add routerLinkActive="active" to the <mat-list-item>
	   -- This tells Angular Material that an additional CSS class of active will be added when clicked
	   
	   Change this:
			<mat-list-item class="navItem" [routerLink]="'page/chart1'">
	   
	   To this:
			<mat-list-item class="navItem" [routerLink]="'page/chart1'" routerLinkActive="active">
	      
	   Apply this to all of the <mat-list-item> tags
	   
	   
	   
 6. Problem:  The navbar groups are not collapsible
    Solution: Adjust the navbar so that clicking on a navbar header opens/closes a nav group
    a. Add a new CSS class to the navbar.component.css called navGroupClosed
		.navGroupClosed {
		  display: none;
		}

    b. Add two properties to the navbar.component.ts:
		public reportsNavGroupClosed: boolean = true;
		public analyticsGroupClosed: boolean = true;	
		
	c. Change the menu groups so that the css class "navGroupClosed" is applied if the property is set to true
	
	   1) Change navHeader div for menu group 1 to this:
			<!-- Menu Group 1 -->
			<div class='navHeader' [ngClass]="{'navGroupClosed': reportsNavGroupClosed == true}"
				 (click)="reportsNavGroupClosed = !reportsNavGroupClosed">
			  	<i class="fa fa-file-alt navHeaderIcon"></i>
			  	<span class="navHeaderTitle">Reports</span>
			</div>
	
	   2) Change the navGroup div to this (for menu group 1):
			<!-- Menu Group 1 Items -->
			<div class='navGroup' [ngClass]="{'navGroupClosed': reportsNavGroupClosed == true}">
	    
	   3) Change navHeader div for menu group 2 to this:
			<!-- Menu Group 2 -->
			<div class='navHeader' [ngClass]="{'navGroupClosed': analyticsGroupClosed == true}"
			   (click)="analyticsGroupClosed = !analyticsGroupClosed">
				<i class="fa fa-file-alt navHeaderIcon"></i>
				<span class="navHeaderTitle">Analytics</span>
			</div>	
 
       4) Change the navGroup div to this (for menu group 2)
			<!-- Menu Group 2 Items -->
			<div class='navGroup' [ngClass]="{'navGroupClosed': analyticsGroupClosed == true}">

 
 7. Problem:  The headers are clickable but the mouse does not show a hand-pointer
    Solution: Create a "clickable" css class and apply it to the nav header
	
	a. Edit the navbar.component.css by adding a "clickable" class
		.clickable {
		  cursor: pointer;
		}

	b. Apply the "clickable" class to the navHeader
	   1) Change this:
			<!-- Menu Group 1 -->
			<div class='navHeader' [ngClass]="{'navGroupClosed': reportsNavGroupClosed == true}"
				 (click)="reportsNavGroupClosed = !reportsNavGroupClosed">
			  <i class="fa fa-file-alt navHeaderIcon"></i>
			  <span class="navHeaderTitle">Reports</span>
			</div>
		
		  To this:
			<!-- Menu Group 1 -->
			<div class='navHeader clickable' [ngClass]="{'navGroupClosed': reportsNavGroupClosed == true}"
				 (click)="reportsNavGroupClosed = !reportsNavGroupClosed">
			  <i class="fa fa-file-alt navHeaderIcon"></i>
			  <span class="navHeaderTitle">Reports</span>
			</div>		
	
	    2) Repeat this for Menu Group 2


 8. Problem:   Opening one navgroup should *close* all other navgroups
    Solution:  Create a method called openNavGroup()
	   toggleNavGroup(1)  opens the reports   navgroup and closes all others *AND* toggles the report navgroup 
	   toggleNavGroup(2)  opens the analytics navgroup and closes all others *AND* toggles the analytics navgroup
	   
	a. Add the toggleNavGroup() method to the navbar.component.ts
		  public toggleNavGroup(aNavGroupNumber: number) {
			if (aNavGroupNumber == 1) {
			  // User clicked on the Reports navgroup (so hide the other navgroup)
			  this.analyticsGroupClosed = true;

			  // Toggle the Reports navgroup (So, it switches from opened to close)(
			  this.reportsNavGroupClosed = ! this.reportsNavGroupClosed;
			}
			else if (aNavGroupNumber == 2) {
			  // User clicked on the Analytics navgroup (so hide the other navgroups)
			  this.reportsNavGroupClosed = true;

			  // Toggle the Analytics navgroup
			  this.analyticsGroupClosed = ! this.analyticsGroupClosed;
			}
		  }

	b. Clicking on the navgroup header should call this metohd:
	   1) Change navgroup 1:
	   
	      From this:
			<!-- Menu Group 1 -->
			<div class='navHeader' [ngClass]="{'navGroupClosed': reportsNavGroupClosed == true}"
				 (click)="reportsNavGroupClosed = !reportsNavGroupClosed">
			  <i class="fa fa-file-alt navHeaderIcon"></i>
			  <span class="navHeaderTitle">Reports</span>
			</div>
		
	      To this:
			<!-- Menu Group 1 -->
			<div class='navHeader clickable' [ngClass]="{'navGroupClosed': reportsNavGroupClosed == true}"
				 (click)="toggleNavGroup(1)">
			  <i class="fa fa-file-alt navHeaderIcon"></i>
			  <span class="navHeaderTitle">Reports</span>
			</div>		
		
	   2) Change navgroup 2:
	   
	      From this:
			  <!-- Menu Group 2 -->
			  <div class='navHeader clickable' [ngClass]="{'navGroupClosed': analyticsGroupClosed == true}"
				   (click)="analyticsGroupClosed = !analyticsGroupClosed">
				<i class="fa fa-file-alt navHeaderIcon"></i>
				<span class="navHeaderTitle">Analytics</span>
			  </div>		  

	      To this:
			  <!-- Menu Group 2 -->
			  <div class='navHeader clickable' [ngClass]="{'navGroupClosed': analyticsGroupClosed == true}"
				   (click)="toggleNavGroup(2)">
				<i class="fa fa-file-alt navHeaderIcon"></i>
				<span class="navHeaderTitle">Analytics</span>
			  </div>


