Lesson:  How to load a Highchart with Data from a REST Call
-----------------------------------------------------------




Procedure
---------
 1. Create a front-end DashboardDTO (that will hold data returned from the REST call
    a. right-click on angularApp1/frontend/src/app -> New Directory
	b. Directory Name:  models
	c. Right-click on angularApp1/frontend/src/app/models -> New File
	   File name:  dashboard.dto.ts
	
	d. Copy this to your new file:
		/*
		 * Define the DashboardDTO class
		 */
		export class DashboardDTO {
		  chartData1: any;
		}


 
 2. Add a dashboard service (that will provide the hard-coded data)
    unix> cd ~/intellijProjects/angularApp1/frontend
	unix> ng generate service services/dashboard
 
 
 3. Update the dashboard service to return an observable (with hard-coded data)
    a. edit dashboard.service.ts
	
	b. Add this method:

	  /*
	   * Return an observable with the DashboardDTO object
	   * NOTE:  This object has information for multiple charts
	   */
	  public getDashboardDTO(): Observable<DashboardDTO>
	  {
		// Create a DashboardDTO object
		let dto: DashboardDTO = new DashboardDTO();

		dto.chartData1 =
		  [
			{
			  name: "Unit 3",
			  y: 989
			},
			{
			  name: "Unit 3R",
			  y: 249
			},
			{
			  name: "Unit 5",
			  y: 1035
			},
			{
			  name: "Unit 5R",
			  y: 324
			}
		  ];

		// Return an observable that holds the DashboardDTO
		return of(dto);
	  }

	

 4. Edit your dashboard.component.ts to use the new dashboard service
    a. Inject the dashboardService (in your constructor)
	   by adding this to the constructor
	       private dashboardService: DashboardService
		   
		   
    b. Change reloadData() so that it gets data from the dashboard service
		
		  private reloadData(): void {
			this.dataIsLoading = true;

			this.chartDataSubscription = this.dashboardService.getDashboardDTO().subscribe( data => {
				// I got the data from the dashboard service
				let dashboardDTO: DashboardDTO = data;

				// Update chart 1 with the data
				this.chartOptions1.series[0].data = dashboardDTO.chartData1;
				Highcharts.chart('chart1', this.chartOptions1);


				// Loop through all charts on the page -- redrawing them
				Highcharts.charts.forEach(function (chart: Chart | undefined) {
				  // Refreh the chart (so that it fits perfectly within the <mat-card> tags
				  chart?.reflow();
				});

			  }).add( () => {
				// The REST call has finished
				this.dataIsLoading = false;
			  })

		  }	


 
