Add a REST call that returns the user's Granted Routes
-------------------------------------------------------
Problem:  We need a REST call that returns information about which routes are granted and not granted
          Also, the front-end UserService will *cache* the result so it doesn't have to keep invoking REST calls for UserInfo data


When protecting front-end elements, the business rules must be stored some where in the project
 1) You can store the business rules all over the front-end
    by adding if statements throughout the front-end
    If (user is granted admin role), then allow this feature to appear or allow this page to be shown
    + Simple
    - Difficult to maintain
    
 2) You can store the business rules in a database table
    + More flexible  (if you change the database records, then UI controls can appear/disappear)
    - Still requires if statements in the front-end but they are *simple* if statement
    - More complex: Requires the creating database tables and the back-end to pull those values
     
 3) You can store the business rules in a separate configuraiton file



Implementation using approach 2
-------------------------------
 A) Create a database table called "roles"       that holds the roles -- e.g., admin, reader
 B) Create a database table called "routes"      that holds the routes (one route for each page)
 C) Create a database table called "role_routes" that holds the relationships
 D) Change the back-end to grant the user the admin role  
    NOTE:  Normally, this would come from some other service
    
 E) Change the back-end UserInfo object so that it includes a map<String, boolean> routesAllowed
       private Map<String, boolean> routesAllowed;
 
 F) Configure the back-end to populate the UserInfo.routesAllowed object on authentication
    -- The key is the route
    -- The value holds true if the user is allowed to see that route.  False otherwise
 
 G) Create a REST call that returns this information back to the front-end
 H) Change the front-end UserService to invoke the real REST call
 I) Change the front-end UserService so it caches the data (so it does *NOT* invoke the same REST call multiple itmes)


Procedure
---------
 
 
 
 
