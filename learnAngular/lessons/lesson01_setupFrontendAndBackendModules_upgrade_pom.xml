Upgrade Maven Dependencies in the Back End
------------------------------------------


Procedure
---------
 1. Edit backend/pom.xml
 
    a. Change the version of spring-boot to 2.3.4.RELEASE

         <dependencyManagement>
            <!-- Set Spring Boot Dependencies -->
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-dependencies</artifactId>
                    <version>2.3.4.RELEASE</version>
                    <type>pom</type>
                    <scope>import</scope>
                </dependency>
            </dependencies>
        </dependencyManagement>
    
    
    b. Change the spring-boot-maven-plugin to 2.3.4.RELEASE    (should match the same version of spring-boot)
            <plugin>
                <!-- This plugin provides the tools needed to repackage the Spring Boot JAR into a runnable JAR
                     Run this command to generate the runnable Spring Boot Jar
                        mvn clean package  *or*
                        mvn clean package spring-boot:repackage
                 -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.3.4.RELEASE</version>
                <configuration>
                    <addResources>true</addResources>
                </configuration>

                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>

            </plugin>    
    
 
 
    c. Change the version of spring-jdbc and spring-web to 5.2.12.RELEASE
         <dependency>
            <!-- Provides Spring libraries for querying SQL Databases -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>5.2.12.RELEASE</version>
        </dependency>

        <dependency>
            <!-- Provides Spring libraries for creating REST endpoints -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>5.2.12.RELEASE</version>
        </dependency>
        
        
    d. Change spring-security and spring-security-config (if applicable) to 5.2.4.RELEASE
        <dependency>
            <!-- Add the dependencies for Spring-Security -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>5.2.4.RELEASE</version>
        </dependency>

        <dependency>
            <!-- Add the dependencies for Spring-Security -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>5.2.4.RELEASE</version>
        </dependency>
   

   e. Update jackson-databind to 2.9.10.7
        <dependency>
            <!-- Implementation for converting objects to JSON -->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.10.7</version>
        </dependency>


  f. Update junit to 4.13.1
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>


2. Verify the webapp compiles
   unix> cd ~/intellijProjects/angularApp1
   unix> mvn clean package -Pprod


3. Verify the webapp runs
   a. Startup the webapp
      unix> java -jar ./backend/target/backend-1.0-SNAPSHOT-exec.jar
   
   b. Open a browser and connect to http://localhost:8080/app1
      -- It should still work
      
      

 
