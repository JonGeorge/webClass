Lesson:  Make the Navbar look better
------------------------------------



Procedure
---------
 1. Change the navbar to look more polished
    a. Replace the navbar.component.css with this:
        .navbar {
          background: #364150;
          color: white;
        }

        .mat-list-item {
          font-family: Verdana, sans-serif;
          font-size: 13px;
          color: white;
          height: 25px;
        }


        .navHeader{
          /* The navHeader has a background gradient that goes to the left */
          background: linear-gradient(to left, #5e6b7b, rgba(94, 107, 123, 0));
          font-family: Verdana, sans-serif;
          font-size: 16px;
          font-weight: bold;
          padding: 0;
          margin-top: 0;
          height: 44px;
          display: flex;
          align-items: center;
        }

        .navHeaderIcon {
          margin-left: 7px;
        }

        .navHeaderTitle {
          margin-left: 8px;
        }

        .mat-list-item.navItem {
          height: 40px;
        }

        .navItem:hover  {
          color: #fff;
          background: linear-gradient(to right, #5e6b7b, rgba(94, 107, 123, 0));
          font-weight: bold;
        }

        .navItemIcon {
          color: #999;
        }


    b. Change the navbar.component.html to this:
	
			<mat-sidenav-container autosize>
			  <mat-sidenav class="navbar" style="width:200px" mode="side" opened="true" [fixedInViewport]="true" [fixedTopGap]="75" [fixedBottomGap]="0">
				<mat-nav-list style="margin-top: 0; padding-top: 0">

					<!-- Menu Group 1 -->
					<div class='navHeader' [ngClass]="{'toggled': reportsToggled == true}"
						 (click)="reportsToggled = !reportsToggled">
					  <i class="fa fa-file-alt navHeaderIcon"></i>
					  <span class="navHeaderTitle">Reports</span>
					</div>

					<div class='navGroup' data-ng-class="{'toggled': reportsToggled}">

						<!-- View Reports -->
						<mat-list-item class="navItem" [routerLink]="'page/viewReports'" >
						  <a title="View Reports">View Reports</a>
						  <div fxFlex fxLayoutAlign="end end">
							 <a [routerLink]="'page/viewReports'" target="_blank">
								<i class="fas fa-external-link-alt navItemIcon" title="Open View Reports in a new window"></i>
							</a>
						  </div>
						</mat-list-item>

						<!-- Add Report -->
						<mat-list-item class="navItem" [routerLink]="'page/addReport'">
						  <a title="Add Report">Add Report</a>
						  <div fxFlex fxLayoutAlign="end end">
							<a [routerLink]="'page/addReport'" target="_blank">
							  <i class="fas fa-external-link-alt navItemIcon" title="Open Add Report in a new window"></i>
							</a>
						  </div>
						</mat-list-item>

						<!-- Audit History -->
						<mat-list-item class="navItem" [routerLink]="'page/auditHistory'" >
						  <a title="Audit History">Audit History</a>
						  <div fxFlex fxLayoutAlign="end end">
							<a [routerLink]="'page/auditHistory'" target="_blank">
							  <i class="fas fa-external-link-alt navItemIcon" title="Open Audit History in a new window"></i>
							</a>
						  </div>
						</mat-list-item>
					</div>  <!-- End of navMenuGroup -->

				</mat-nav-list>
			  </mat-sidenav>
			</mat-sidenav-container>
 
 
  2. Change the navbar so that the open-in-new-window icon only appears when hovering
     Approach:  Set the icon to have the same color as the background
                When hoving, change the color to be brighter
                
     The header and navbar background already is set to this:  #364150
     So, set the .navItemIcon to have the same color
        
		.navItemIcon {
		  color: #364150
		}

		.navItemIcon:hover {
		  color: #999;
		}


      Problem:  It only works if you hover over the litle icon 
                We need it to work when you hover over the entire navItem
                
      Fix:  When hovering over any where on the navItem, change the color of .navItemIcon
	  
		.navItemIcon {
		  /* By default, the navItemIcon is invisible (It's the same color as the navbar background) */
		  color: #364150
		}

		.navItem:hover .navItemIcon {
		  /* When hovering over navItem change the color of the navItemIcon so it appears */
		  color: #999
		}


   When finished, the navbar.component.css looks like this:
		.navbar {
		  background: #364150;
		  color: white;
		}

		.mat-list-item {
		  font-family: Verdana, sans-serif;
		  font-size: 13px;
		  color: white;
		  height: 25px;
		}


		.navHeader{
		  /* The navHeader as a gradient that goes to the left */
		  background: linear-gradient(to left, #5e6b7b, rgba(94, 107, 123, 0));
		  font-family: Verdana, sans-serif;
		  font-size: 16px;
		  font-weight:bold;
		  padding: 0;
		  margin-top: 0;
		  height: 44px;
		  display: flex;
		  align-items: center;
		}

		.navHeaderIcon {
		  margin-left: 7px;
		}

		.navHeaderTitle {
		  margin-left: 8px;
		}

		.mat-list-item.navItem {
		  height: 40px;
		}

		.navItem:hover  {
		  color: #fff;
		  background: linear-gradient(to right, #5e6b7b, rgba(94, 107, 123, 0));
		  font-weight: bold;
		}

		.navItemIcon {
		  /* By default, the navItemIcon is invisible (It's the same color as the navbar background) */
		  color: #364150
		}

		.navItem:hover .navItemIcon {
		  /* When hovering over navItem change the color of the navItemIcon so it appears */
		  color: #999
		}


  When finished, the navbar.component.html looks like this:

		<mat-sidenav-container autosize>
		  <mat-sidenav class="navbar" style="width:200px" mode="side" opened="true" [fixedInViewport]="true" [fixedTopGap]="75" [fixedBottomGap]="0">
			<mat-nav-list style="margin-top: 0; padding-top: 0">

				<!-- Menu Group 1 -->
				<div class='navHeader' [ngClass]="{'toggled': reportsToggled == true}"
					 (click)="reportsToggled = !reportsToggled">
				  <i class="fa fa-file-alt navHeaderIcon"></i>
				  <span class="navHeaderTitle">Reports</span>
				</div>

				<div class='navGroup' data-ng-class="{'toggled': reportsToggled}">

					<!-- View Reports -->
					<mat-list-item class="navItem" [routerLink]="'page/viewReports'" >
					  <a title="View Reports">View Reports</a>
					  <div fxFlex fxLayoutAlign="end end">
						 <a [routerLink]="'page/viewReports'" target="_blank">
							<i class="fas fa-external-link-alt navItemIcon" title="Open View Reports in a new window"></i>
						</a>
					  </div>
					</mat-list-item>

					<!-- Add Report -->
					<mat-list-item class="navItem" [routerLink]="'page/addReport'">
					  <a title="Add Report">Add Report</a>
					  <div fxFlex fxLayoutAlign="end end">
						<a [routerLink]="'page/addReport'" target="_blank">
						  <i class="fas fa-external-link-alt navItemIcon" title="Open Add Report in a new window"></i>
						</a>
					  </div>
					</mat-list-item>

					<!-- Audit History -->
					<mat-list-item class="navItem" [routerLink]="'page/auditHistory'">
					  <a title="Audit History">Audit History</a>
					  <div fxFlex fxLayoutAlign="end end" >
						<a [routerLink]="'page/auditHistory'" target="_blank">
						  <i class="fas fa-external-link-alt navItemIcon" title="Open Audit History in a new window"></i>
						</a>
					  </div>
					</mat-list-item>
				</div>  <!-- End of navMenuGroup -->

			</mat-nav-list>
		  </mat-sidenav>
		</mat-sidenav-container>
		

 3. Run the Debugger on 'Full WebApp'
    -- The navigation bar should look nicer
	-- The open in a new window option should work



 4. Get the navbar groups to work correctly
    a. Add to the src/styles.css
	
		.clickable {
		  cursor: pointer;
		}


    b. Update navbar.component.ts  so that there is a function called toggleNavGroup and a public with the state
	   Replace its contents with this:
	   
			import { Component, OnInit } from '@angular/core';

			@Component({
			  selector: 'app-navbar',
			  templateUrl: './navbar.component.html',
			  styleUrls: ['./navbar.component.css']
			})
			export class NavbarComponent implements OnInit {
			  public reportNavGroupClosed: boolean = true;

			  constructor() { }

			  ngOnInit(): void {
			  }

			  public toggleNavGroup(aNavGroupNumber: number): void {
				if (aNavGroupNumber == 1) {
				  // User clicked on the "Industry" navgroup

				  // Toggle the "industry" navgroup
				  this.reportNavGroupClosed = ! this.reportNavGroupClosed;
				}
			  }

			}
    
    c. Update navbar.component.css with a new CSS class called navGroupClosed:
	    .navGroupClosed {
		  display: none;
		}

    d. Update navbar.component.html so that
	    1) The nav group header's click event calls toggleNavGroup()
	    2) The div for the navigation buttons sets its class to navGroupClosed when this.reportNavGroupClosed==true

		<mat-sidenav-container autosize>
		  <mat-sidenav class="navbar" style="width:200px" mode="side" opened="true" [fixedInViewport]="true" [fixedTopGap]="75" [fixedBottomGap]="0">
			<mat-nav-list style="margin-top: 0; padding-top: 0">

			  <!-- Menu Group 1 -->
			  <div class='navHeader clickable' (click)="this.toggleNavGroup(1)">
				<i class="fa fa-file-alt navHeaderIcon"></i>
				<span class="navHeaderTitle">Reports</span>
			  </div>

			  <div class='navGroup'  [ngClass]="{'navGroupClosed': this.reportNavGroupClosed == true}">

				<!-- View Reports -->
				<mat-list-item class="navItem" [routerLink]="'page/viewReports'" >
				  <a title="View Reports">View Reports</a>
				  <div fxFlex fxLayoutAlign="end end">
					<a [routerLink]="'page/viewReports'" target="_blank">
					  <i class="fas fa-external-link-alt navItemIcon" title="Open View Reports in a new window"></i>
					</a>
				  </div>
				</mat-list-item>

				<!-- Add Report -->
				<mat-list-item class="navItem" [routerLink]="'page/addReport'">
				  <a title="Add Report">Add Report</a>
				  <div fxFlex fxLayoutAlign="end end">
					<a [routerLink]="'page/addReport'" target="_blank">
					  <i class="fas fa-external-link-alt navItemIcon" title="Open Add Report in a new window"></i>
					</a>
				  </div>
				</mat-list-item>

				<!-- Audit History -->
				<mat-list-item class="navItem" [routerLink]="'page/auditHistory'">
				  <a title="Audit History">Audit History</a>
				  <div fxFlex fxLayoutAlign="end end" >
					<a [routerLink]="'page/auditHistory'" target="_blank">
					  <i class="fas fa-external-link-alt navItemIcon" title="Open Audit History in a new window"></i>
					</a>
				  </div>
				</mat-list-item>
			  </div>  <!-- End of navMenuGroup -->

			</mat-nav-list>
		  </mat-sidenav>
		</mat-sidenav-container>


 5. Run the Debugger on 'Full WebApp'
    -- Clicking on the navgroup header should make the navgroup appear/disappear
	

 6. There's a new problem with the navgroup
    -- If the user opens "Add Report" in a new tab, then the navgroup is collapsed
	-- To fix this, we have the navbar.component.ts subscribe to the router.events so it knows to what url was selected
	   If the url starts with page/viewReports or page/addReport or page/auditHistory then open the navgroup header
	   
	-- Edit navbar.component.ts
	-- Replace its contents with this:

		import { Component, OnInit } from '@angular/core';
		import {NavigationEnd, Router} from "@angular/router";
		import {filter} from "rxjs/operators";
		import {Subscription} from "rxjs";

		@Component({
		  selector: 'app-navbar',
		  templateUrl: './navbar.component.html',
		  styleUrls: ['./navbar.component.css']
		})
		export class NavbarComponent implements OnInit {
		  public reportNavGroupClosed: boolean = true;

		  private routeSubscription: Subscription;

		  constructor(private router: Router) {

			this.routeSubscription =  router.events.pipe(
			  filter(event => event instanceof NavigationEnd)
			).subscribe((event: NavigationEnd) => {
			  // The user has navigated to a different page (or opened a new browser to that page)

			  if (  (event.url.startsWith('/page/addReport')) || (event.url.startsWith("/page/viewReport")) || (event.url.startsWith("/page/auditHistory"))){
				// User is going to one of the Report navbar items.  So, the reports navgroup should be open
				this.reportNavGroupClosed = false;
			  }
			  else {
				// Close all of the navgroups
				  this.reportNavGroupClosed = true;
			  }
			});

		  }

		  ngOnInit(): void {
		  }

		  public toggleNavGroup(aNavGroupNumber: number): void {
			if (aNavGroupNumber == 1) {
			  // User clicked on the "Industry" navgroup

			  // Toggle the "industry" navgroup
			  this.reportNavGroupClosed = ! this.reportNavGroupClosed;
			}
		  }

		}

	
 7. Run the Debugger on 'Full WebApp'
    -- Clicking on the View Reports (open in a new tab)
	-- The new tab should have the "Reports" menu group open
	
	
