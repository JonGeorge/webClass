Lesson:  Add Form Validation to the "Add Reports" page (using templates)
------------------------------------------------------------------------
Problem:  I don't want users to press the "Save" button on the "Add Reports" page
          until all required fields are provided
          
Solution: On the frontend, Use Form Validation  
          On the backend, use Java DTO validation
          

Part 1: Add frontend form validation to "Add Reports"
-----------------------------------------------------
 1. Edit the add-report.component.html
    a. Add the form tag WITHIN the mat-card-content tags
       NOTE:  We add a reference variable called "form" that points to this form
       
        <mat-card-content>
           <form #form="ngForm" novalidate="true">

           ...
           
           </form>
        </mat-card-content>


    b. Make the report name a *required* field
       NOTE:  Add #name="ngModel" to create a reference to this text box
              Add required (so that the front-end knows that it's a required field)
       
          <input matInput type="text" name="report.name"  [(ngModel)]="report.name" REQUIRED #name="ngModel"/>

          <mat-error *ngIf="name.touched && name.invalid">
            Report Name is required
          </mat-error>
          
          
    c. Make the priotity a *required* field
       NOTE:  Add #priority="ngModel" to create a refernence to this dropdown
              Add required (so that the front-end knows that it's a required field)
           
          <mat-select name="report.priority" [(ngModel)]="report.priority" REQUIRED #priority="ngModel">
           
    
    d. Change the reset button so click events call reset(form) 
          <button type="button" (click)="reset(form)" style="margin-top: 20px" mat-raised-button>
             
          
    e. Change the save button so click events call save(form) 
          <button type="button" (click)="save(form)" mat-raised-button color="primary">
          
          
 2. Change the add-report.component.ts
    a. Change the reset() method so that the form object is passed-in
        public reset(aForm:  NgForm): void {
            // Reset the form back to pristine/untouched condition
            this.formSubmitted = false;
            aForm.resetForm();
         }
  
  
    b. Change the save() method so that the form object is psased-in
        public save(aForm: NgForm): void {
            if (aForm.valid) {
                // Invoke a service to save the record
                console.log("Save record.");

                // Reset the form
                aForm.reset();
                this.formSubmitted = false;
            }
        }


 3. Change the component and HTML so that the Report Model fields can be null
    a. Change the Report model to allow for null fields
           export class Report {
              name: string | null;
              priority: number | null;
              source: number | null;
              authors: string | null
            }    
    
    b. Change the AddReportComponent.ngOnInit() so that unset values are null
          ngOnInit(): void {
            // Initialize the report object
            this.report = new Report();
            this.report.name = null;
            this.report.priority = null;
            this.report.source = null;
            this.report.authors = null;
          } 
      
     
     c. Change the priority dropdown so that null is the default value
            <mat-select required name="report.priority" [(ngModel)]="report.priority" #priority="ngModel">
                <mat-option [value]=null>-Select Priority-</mat-option>
                <mat-option [value]=1>Low</mat-option>
                <mat-option [value]=2>Medium</mat-option>
                <mat-option [value]=3>High</mat-option>
                <mat-option [value]=4>Critical</mat-option>
            </mat-select>
        
     d. Change the Report source dropdown so that null is the default value
            <select matNativeControl name="report.source" [(ngModel)]="report.source">
                <option [value]=null>-Select Source-</option>
                <option [value]=100>Israel</option>
                <option [value]=101>United Kingdom</option>
                <option [value]=102>USA</option>
            </select>     
            
            
 4. Verify that form validation requires the user to set a report name and priority
    a. 
