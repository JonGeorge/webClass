Lesson: Setup Holy Grail Layout
-------------------------------
Angular does not come with a layout mechanism (unlike AngularJS).
We want to use Response Web Design (RWD) so the layout changes automatically for different screen sizes


To implement a holy grail layout, there are a few approaches:
 A) Use CSS media queries (represented by the @media rule)
 B) Use CSS Flexbox with media queries
 C) Use Angular Flex Layout Library     https://github.com/angular/flex-layout
 
Advantages of Angular Flex Layout
 + It provides a set of simple Angular directives that internally apply the rules of the flexbox layout 
 + It offers you the ObservableMedia service (that notifes your app about the current width of the viewport on the user's device)
 + It produces cross-browser-compatible CSS
 + It provids an Angular-friendly API for dealing with media queries using directives and observables
 
 The Flex Layout libraries provides two APIs:
  1) Static API allows you to use directives to specify layout attributes for containers and their children
  2) Responsive API enhances state API directives, enabling you to implement RWD so the app layout changes w/different screen sizes



References
----------
https://stackoverflow.com/questions/54968812/angular-flex-layout-holy-grail-design
https://www.digitalocean.com/community/tutorials/angular-flex-layout
https://github.com/angular/flex-layout
https://github.com/angular/flex-layout/wiki/API-Documentation#containers
https://code-maze.com/angular-material-navigation/
https://github.com/Robinyo/serendipity
https://robferguson.org/blog/2018/11/10/angular-material-toolbar-and-sidenav/
https://stackoverflow.com/questions/60631024/how-to-toggle-sidenav-component-from-header-component-using-a-button



Holy Grail Layout
-----------------
The layout has 3 columns

|------------------------------------|
|              Header                |       Header is 100px in height
|------------------------------------|
| navbar |        Content            |
|        |                           |       height is the remaining vertical space
|        |                           |       navbar is always 225px wide
|        |                           |       content is remaining width
|------------------------------------|
|              Footer                |       Footer is 50px in height
|------------------------------------|



Procedure:  Implement Holy Grail Layout with Flex Layout
--------------------------------------------------------
 1. Install Flex Layout 
    unix> cd ~/intellijProjects/angularApp1/frontend
	unix> npm install @angular/flex-layout@9.0.0-beta.31    @angular/cdk
	
	NOTES:
	 1) The angular compiler fails    when using flex-layout 10.0.0-beta.32
	 2) The angular compiler succeeds when using flex-layout 9.0.0-beta.31
	 3) To see a list of angular flex layout versions, use this url:
	           https://github.com/angular/flex-layout/releases
	
	    My guess is that....
		  if you are using Angular 9, then use flex-layout 9
		  if you are using Angular10, then use flex-layout 10
		  
	
 2. Import the FlexLayoutModule module
    a. Go to the app.module.ts
	b. Add FlexLayoutModule to the app.module.ts
	     import { FlexLayoutModule } from '@angular/flex-layout';
		 
		 imports: [
		 	FlexLayoutModule,
			...
		 ]
		 		

 3. Activate the debugger (to cause the webapp to be compiled and deployed locally)
    NOTE:  It will take a while to compile the cdk modules


 4. Create a header, footer, and navbar components
    unix> cd ~/intellijProjects/angularApp1/frontend
	unix> ng generate component header
	unix> ng generate component footer
	unix> ng generate component navbar

 
 5. Configure the app-navbar
    a. Change the navbar.component.html to this:
		<mat-sidenav-container autosize>

		  <mat-sidenav style="width:220px" mode="side" opened="true" [fixedInViewport]="true"  [fixedTopGap]="100" [fixedBottomGap]="50">
			<mat-nav-list>
			  <h3 mat-subheader>Reports</h3>
			  <a mat-list-item [routerLink]="'page/addReport'">Add Report</a>
			  <a mat-list-item [routerLink]="'page/viewReports'">View Reports</a>
			  <mat-divider>&nbsp;</mat-divider>

			  <h3 mat-subheader>Analytics</h3>
			  <a mat-list-item [routerLink]="'page/totalLogins'">Total Logins</a>
			</mat-nav-list>
		  </mat-sidenav>
		</mat-sidenav-container>


    b. Change the navbar.component.css to this:
		.mat-list-item {
		  font-family: Verdana, sans-serif;
		  font-size: 13px;
		}


		.mat-subheader{
		  font-family: Verdana, sans-serif;
		  font-size: 16px;
		  font-weight:bold;
		  background-color: #f2f4f7;
		  height:8px;
		  margin-top:5px;
		}

	

 
 6. Change the app.component.html
    
	From this:
		<div>

		  <!-- Top Menubar -->
		  <mat-toolbar color="primary">
			  <mat-toolbar-row style="padding-left: 0">
				  <button mat-icon-button>
					  <mat-icon (click)="sidenav.toggle()">
						  <!-- Hamburger icon that shows/hides the left navigatio bar -->
						<i class="fas fa-bars"></i>
					  </mat-icon>
				  </button>

				  <a mat-button [routerLink]="''"><h1>{{title}}</h1></a>
				  <span class="menu-spacer"></span>

				<div>
					<!-- Top Menubar buttons -->
					<a mat-button [routerLink]="'page/addReport'">Add Report</a>
					<a mat-button [routerLink]="'page/viewReports'">View Reports</a>
				</div>
				<span class="menu-spacer"></span>

			  </mat-toolbar-row>
		  </mat-toolbar>


		  <!-- Left Side Navigation Bar -->
		  <mat-sidenav-container>

			<!-- On Page load, the left side navbar is opened -->
			<mat-sidenav #sidenav mode="side" opened="true">
				<mat-nav-list>
					<a mat-list-item [routerLink]="'page/addReport'">Add Report</a>
					<a mat-list-item [routerLink]="'page/viewReports'">View Reports</a>
				</mat-nav-list>
			</mat-sidenav>


			<mat-sidenav-content>
				<div style="height: 88vh">
					<!-- M A I N    V I E W I N G    A R E A -->
					<router-outlet></router-outlet>

					<!-- Console -->
					<app-console></app-console>
				</div>
			</mat-sidenav-content>

		  </mat-sidenav-container>
		  <br/>


		</div>


	To this:
		<div fxFlexFill fxLayout="column">

		  <div fxFlex="100px" style="border: 2px solid black;">
			<!-- Header -->
			<app-header></app-header>
		  </div>


			<div fxFlex fxLayout="row" fxLayoutGap="10px">
			  <div fxFlex="225px" style="border: 1px solid blue; padding: 0">
				<!-- Left Side Navigation -->
				<app-navbar></app-navbar>
			  </div>

			  <div fxFlex style="border: 1px solid blue; padding: 0">
				<!-- Main Viewing Area -->
				<router-outlet></router-outlet>
			  </div>
			</div>


		  <div fxFlex="50px" style="border:2px solid black;">
			<!-- Footer -->
			<app-footer></app-footer>
		  </div>
		</div>



