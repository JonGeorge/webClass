How to Hide a Bootstrap Popup Menu when Clicking Elsewhere
----------------------------------------------------------
You created a popup menu but now you want to hide it when someone clicks elsewhere

There are a number of ways of solving this problem, some riskier than others:

Assumptions:
 A) You have a webapp already setup
    [see howToSetupBootstrapUsingIntellij.txt or howToSetupBootstrapUsingEclipse.txt]

 B) You followed the steps in howToSetupPopupMenu.txt


References
----------
https://css-tricks.com/dangers-stopping-event-propagation/
http://stackoverflow.com/questions/18153745/bootstrap-3-hide-dropdown-menu-on-menu-item-click


Jquery Rules regarding event propogation
----------------------------------------
  Rule #1: Returning false from an inline event handler
               <!-- An inline event handler. -->
               <a href="http://google.com" onclick="return false">Google</a>
  
           a) Prevents the browser from navigating to the link address, 
           b) It does *NOT STOP* the event from propagating through the DOM
      
      
      
  Rule #2: Returning false from a jQuery event handler 
      
               // A jQuery event handler.
               $('a').on('click', function() {
                  return false;
               });
              
           a) prevents the browser from navigating to the link address *and*
           b) it *STOPS* the event from propagating through the DOM.



  Rule #3: Returning false from a regular DOM event handler Does nothing
  
               // A native event handler.
               var link = document.querySelector('a');
                
               link.addEventListener('click', function() {
                  return false;
               });




Approach #1:  Use Bootstrap only to hide popup menu
---------------------------------------------------
INCOMPLETE





Approach #2:  Use Jquery click handler to hide the menu *AND* keep propogating events
-----------------------------------------------------------------------------------
 Add this to your popupMenu.jsp page :
  
        $(document).on('mouseup', function(event)
         {
           if (!$(event.target).closest('#popupMenu').length)
           {
              // The user clicked outside of the popup -- so hide the menus
              oPopupMenu.hide();
           }
        });



  
  
 


  When finished, your javascript looks like this:
  
    <script type="text/javascript">
    
        $( document ).ready(function()
        {
           var oPopupMenu = $('#popupMenu');
    
          $("body").on("contextmenu", "table tr", function(event)
           {
                // User right-clicked on the the menu
                oPopupMenu.css({
                  display: "block",
                  left:     event.pageX,
                  top:      event.pageY
                });
                return false;
          });
    
          oPopupMenu.on("click", "a", function()
          {
             // The user clicked on an option -- so hide the menu
             oPopupMenu.hide();
    
             var selectedText =  $(this).text();
             var selectedDataValue = $(this).data().value;
    
             $('#statusText').html('selectedDataValue=' + selectedDataValue + '<br/><br/>selectedText=<b>' + selectedText+ '</b>');
          });
    
    
    
          $(document).on('mouseup', function(event)
             {
               if (!$(event.target).closest('#popupMenu').length)
               {
                  // The user clicked outside of the popup -- so hide the menus
                  oPopupMenu.hide();
               }
            });
        });

    </script>
  






Approach #3:  Use Jquery with overlay
-------------------------------------
INCOMPLETE

You can use transparent overlay to allow users to clicks outside the modal for closing without having to use event stop propagation:
See: http://codepen.io/anon/pen/Iicae



$('button').on("click", function() {

    // show modal
    $('.modal').show();

    // append overlay to `document.body` dynamically
    $('').on("click", function() {

        // hide modal if the overlay is clicked
        $('.modal').hide();

        // remove the overlay
        $(this).remove();

    }).appendTo($(document.body));

});

          
          