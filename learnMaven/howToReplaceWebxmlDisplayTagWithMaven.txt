How to replace WEB-INF/web.xml <display-name> with new values
------------------------------
During the maven build process, it is preparing
Before it packages the WAR, it puts it in a folder and then zips it up.

Answer:  Use the maven-replacer-plugin

1) Put tokens in the web.xml
   
    <display-name>##ARTIFACT_ID## ##VERSION## built by ##USER_NAME## at ##TIMESTAMP##</display-name>

    
    https://code.google.com/p/maven-replacer-plugin/wiki/UsageWithOtherPlugins

2) Update the maven-war-plugin execution and configuration so that it explodes the WAR:
  
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-war-plugin</artifactId>
    <version>2.4</version>

    <executions>
        <execution>
            <id>prepare-war</id>
            <phase>prepare-package</phase>
            
            <goals>
                <goal>exploded</goal>
            </goals>
        </execution>
    </executions>
    
    <!-- version 2.1.0+ copies resources twice which overrides replacements
    but useCache=true fixes that problem
    -->
    <configuration>
        <useCache>true</useCache>
    </configuration>
</plugin>




        <plugin>
            <groupId>com.google.code.maven-replacer-plugin</groupId>
            <artifactId>replacer</artifactId>
            <version>1.5.3</version>
            <executions>
                <execution>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>replace</goal>
                    </goals>
                </execution>
            </executions>
            
            <configuration>
                <file>target/${project.build.finalName}/WEB-INF/web.xml</file>
                <replacements>
                    <replacement>
                        <token>##ARTIFACT_ID##</token>
                        <value>${project.artifactId}</value>
                    </replacement>
                    
                    <replacement>
                        <token>##VERSION##</token>
                        <value>${project.version}</value>
                    </replacement>

                    <replacement>
                        <token>##USER_NAME##</token>
                        <value>${user.name}</value>
                    </replacement>
                    
                    <replacement>
                        <token>##TIMESTAMP##</token>
                        <value>${timestamp}</value>
                    </replacement>
                </replacements>
            </configuration>
        </plugin>
        
        
        
        
My Final pom.xml looks like this:
---------------------------------
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mycompany</groupId>
  <artifactId>stripes1</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <packaging>war</packaging>
  
  <properties>
    <maven.build.timestamp.format>MM/dd/yyyy HH:mm:ss zzzz</maven.build.timestamp.format>
    <timestamp>${maven.build.timestamp}</timestamp>
  </properties>
  
  <build>
    <sourceDirectory>src</sourceDirectory>
    
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      

      
      
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
                
        <executions>
            <execution>
                <id>prepare-war</id>
                <phase>prepare-package</phase>
            
                <goals>
                    <goal>exploded</goal>
                </goals>
            </execution>
        </executions>
    
        <configuration>
            <!-- version 2.1.0+ copies resources twice which overrides replacements
                but useCache=true fixes that problem  -->
            <useCache>true</useCache>

          <warSourceDirectory>WAR</warSourceDirectory>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          
          <archive>
              <manifest>
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
                <!-- Add timestamp entry to the Manifest file -->
                <build-timestamp>${timestamp}</build-timestamp>
            </manifestEntries>

          </archive>
          </configuration>
      </plugin>
      
      
          <plugin>
            <groupId>com.google.code.maven-replacer-plugin</groupId>
            <artifactId>replacer</artifactId>
            <version>1.5.3</version>
            <executions>
                <execution>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>replace</goal>
                    </goals>
                </execution>
            </executions>
            
            <configuration>
                <file>target/${project.build.finalName}/WEB-INF/web.xml</file>
                <replacements>
                    <replacement>
                        <token>##ARTIFACT_ID##</token>
                        <value>${project.artifactId}</value>
                    </replacement>
                    
                    <replacement>
                        <token>##VERSION##</token>
                        <value>${project.version}</value>
                    </replacement>

                    <replacement>
                        <token>##USER_NAME##</token>
                        <value>${user.name}</value>
                    </replacement>
                    
                    <replacement>
                        <token>##TIMESTAMP##</token>
                        <value>${timestamp}</value>
                    </replacement>
                </replacements>
            </configuration>
        </plugin>
      
      
      
    </plugins>
  </build>
  
  
  <dependencies>
      <dependency>
          <groupId>net.sourceforge.stripes</groupId>
          <artifactId>stripes</artifactId>
          <version>1.5.7</version>
      </dependency>
      <dependency>
          <groupId>jstl</groupId>
          <artifactId>jstl</artifactId>
          <version>1.1.2</version>
      </dependency>
      <dependency>
          <groupId>taglibs</groupId>
          <artifactId>standard</artifactId>
          <version>1.1.2</version>
      </dependency>
  </dependencies>
</project>