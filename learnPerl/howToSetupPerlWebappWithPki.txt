How to Setup Perl Web App with PKI Authentication on Centos 6
-------------------------------------------------------------

Assumptions:
 A) You have an Apache http service already installed
 B) You have perl installed already

 
References
----------
https://www.dwheeler.com/essays/apache-cac-configuration.html

INCOMPLETE

 
Chapter 1:  Setup Apache Httpd to run Perl scripts on port 8080
---------------------------------------------------------------
 1. Configure httpd to run perl web apps
    a. unix> vi /etc/httpd/conf/httpd.conf 
       
    b. Find this line within httpd.conf 
          Options Indexes FollowSymLinks
       Replace with this line
          Options Indexes FollowSymLinks ExecCGI
 
    c. Find this line within httpd.conf 
          #AddHandler cgi-script .cgi
       Replace with this line
          AddHandler cgi-script .cgi .pl 
    
    d. Add this to the end of the httpd.conf file
    
          <VirtualHost *:80>
             ServerAdmin webmaster@dummy-host.example.com
             DocumentRoot /var/www/html
             ServerName myCentos
             ErrorLog logs/error_log 
             CustomLog logs/access_log common
          </VirtualHost>
       
 2. Make sure apache:apache owns the /etc/httpd directory
    unix> sudo -s
    unix> chown apa-R /etc/httpd
    
 3. Restart the httpd service
    unix> sudo service httpd restart
    
 4. Create a test perl script to run within httpd
    unix> vi /var/www/html/bogus.pl
    
      #!/usr/bin/perl
      print "Content-type: text/html; charset=iso-8859-1\n\n";
      print "<phtml>";
      print "<body>";
      print "Test Page";
      print "</body>";
      print "</html>";

 5. Give this new file execute permission
    unix> chown apache:apache /var/www/html/bogus.pl
    unix> chmod ugo+x /var/www/html/bogus.pl
    
 6. Attempt to run this perl script through apache by connecting to port 80
    a. Open a browser
    b. Go to http://localhost/bogus.pl
    -- You should see "Test Page"
    
        
 7. Change apache to it is listening on port 8080
    unix> vi /etc/httpd/conf/httpd.conf 
    
     b. Find this line within httpd.conf 
          Listen 80
       Replace with this line
          Listen 8080
 
    c. Find this line within httpd.conf 
          <VirtualHost *:80>
       Replace with this line
          <VirtualHost *:8080>

 8. Restart the httpd service
    unix> sudo service httpd restart
    
 9. Attempt to run this perl script through apache by connecting to port 8080
    a. Open a browser
    b. Go to http://localhost:8080/bogus.pl
    -- You should see "Test Page" 
  

Chapter 2:  Add SSL to the Apache Httpd listening on port 8443
--------------------------------------------------------------


    
Chapter 3:  Setup nginx as the proxy
------------------------------------
 1. Install nginx on centos 6
    [see learnNginx / howToInstallNginx.txt]
    
 2. By default, nginx will load any conf file (under /etc/nginx) that ends with .conf
    unix> sudo -s
    unix> vi /etc/nginx/app.conf

     location /myapp {
       ## Proxy Header Configs (Some of these might not be needed)
       proxy_set_header Host $http_host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-Ssl on;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header X-Frame-Options  SAMEORIGIN;
       proxy_set_header X-Forwarded-Host $http_host;
       proxy_set_header X-Forwarded-Server $http_host;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-UA-Compatible IE=Edge;

       # Clear out the SSL headers
       proxy_set_header SSL_CLIENT_S_DN "";
       proxy_set_header SSL_CLIENT_I_DN "";
       proxy_set_header SSL_CLIENT_VERIFY "";
       proxy_set_header SSL_CLIENT_CERT "";

       # Set SSL Headers for C3 Security
       proxy_set_header SSL_CLIENT_S_DN $ssl_client_s_dn;
       proxy_set_header SSL_CLIENT_CERT $ssl_client_cert;

       proxy_set_header X-Forwarded-Host $host;
       proxy_set_header X-Forwarded-Server $host;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_pass https://localhost:8443/;
     }

 3. Give everyone read access to the app.conf
    unix> sudo -s
    unix> chmod ugo+r /etc/nginx/app.conf
    
 3. Restart nginx
    unix> sudo service nginx restart 
    
 4. Verify that https://localhost/myapp forwards you to https://localhost:8443/
    a. Open a browser
    b. Connect to https://localhost/myapp
       -- You should see the welcome page
       
       
    
 


