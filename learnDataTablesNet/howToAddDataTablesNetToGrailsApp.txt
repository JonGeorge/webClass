How to Add DataTables.net to a Grails Web App
---------------------------------------------

There are 2 approaches:
 1) Manually add it using Resources PLugin
 2) Manually add it using the Asset Pipeline Plugin
 

Assumptions
 A) You have a Grails Web App already 
    [see howToSetupAndDebugGrails2.4WebAppWithIntellij.txt]
 B) You have Maven setup
 


      
A P P R O A C H      # 1: Add DataTables.net files manually and load w/Resources Plugin
---------------------------------------------------------------------------------------
 1. Download DataTables.net
    a. Browse to https://www.datatables.net/download/download
    b. Save the zip file to your c:\vault
       -- You now have c:\vault\DataTables-1.10.9.zip
    c. Right-click on c:\vault\DataTables-1.10.9.zip -> 7zip -> Extract Here
       -- You now have these directories:
             C:\vault\DataTables-1.10.9\
             C:\vault\DataTables-1.10.9\media\js
             
             
       
 2. Manually add DataTables.net to your Grails Web App  
    a. Browse to the C:\vault\
       Right-click on DataTables-1.10.9 -> Copy
    
     b. In Intellij, Right-click on  /webapp/js/ -> Right-Click -> Paste
       Intellij will prompt you to copy files, press OK
       
       Now, you should have these directories
          /webapp/js/DataTables-1.19.9/examples/
          /webapp/js/DataTables-1.19.9/extensions/
          /webapp/js/DataTables-1.19.9/media/js
          /webapp/js/DataTables-1.19.9/media/css
          /webapp/js/DataTables-1.19.9/media/images         

          
        
 3. Make sure the Resources plugin is found in your pom.xml
    NOTE:  You should see something like this in your pom.xml
           If not, then add it to your pom.xml
                     
       <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>resources</artifactId>
            <version>1.2.14</version>
            <scope>runtime</scope>
            <type>zip</type>
        </dependency>

           
           
 4. Define a resource in your ApplicationResources.groovy file
    Add these lines to the application module:
    
        resource url: 'js/DataTables-1.10.9/media/js/jquery.dataTables.min.js'
        resource url: 'js/DataTables-1.10.9/media/css/jquery.dataTables.min.css'
    
    
    
    a. Open your grails-app/conf/ApplicationResources.groovy
    
       You probably see this:
        modules = {
            application {
                resource url:'js/application.js'
            }
        }

    
    
    
    b. Change it to this:
        modules = {
            application {
                dependsOn 'jquery'
        
                resource url: 'js/application.js'
                resource url: 'js/DataTables-1.10.9/media/js/jquery.dataTables.min.js'
                resource url: 'js/DataTables-1.10.9/media/css/jquery.dataTables.min.css'
            }
        
        
            jquery {
                resource url: 'js/jquery-1.11.3/jquery-1.11.3.min.js'
            }
        }
            
            
            
 5. Make sure your main layout includes the "application" module (in your main.gsp)
    So, your main.gsp must have either of these lines:
    
       <g:javascript library="application"/>
         
        *or*
           
        <r:require module="application"/>
            
 
 
 6. Verify that DataTables.net js and css are loaded
    a. Start-up your webapp
       CMD> cd /d c:\tools\intellij\workspace\grailwebapp1
       CMD> mvn grails:run-app
    
    b. Open a browser
       Browse to http://localhost/grailwebapp1/
         -- In the "Welcome to Grails" page, you should see on the left:   "assetPipeline - 2.5.1" 
       
    c. Click on your WelcomeController link
    
    d. Right-click on the page -> View Page Source
         -- In the page, you should see this:
         
         <link rel="stylesheet" href="/grailsWebAppA/assets/DataTables-1.10.9/media/css/jquery.dataTables.min.css?compile=false"  />
         
         . . .
         
         <script src="/grailsWebAppA/assets/DataTables-1.10.9/media/js/jquery.dataTables.min.js?compile=false" type="text/javascript" ></script>
         
         
 
 7. Setup a simple data table    
    a. Open your grails-app / views / welcome / index.gsp
    
    b. Add an empty <table> tag 
         <table id="position" class="display"></table>   
        
    c. Add some javascript to load the table on document.ready
         <r:script disposition='defer'>

                var myDataSet =
                [
                        [ "Person 1", "Person 1's position"],
                        [ "Person 2", "Person 2's position"],
                        [ "Person 3", "Person 3's position"],
                        [ "Person 4", "Person 4's position"],
                        [ "Person 5", "Person 5's position"],
                        [ "Person 6", "Person 6's position"],
                        [ "Person 7", "Person 7's position"],
                        [ "Person 8", "Person 8's position"],
                        [ "Adam", "System Architect"],
                        [ "Ben", "Mgmt Consultant"],
                        [ "Peter", "Doctor"],
                        [ "Justin", "Psychologist"],
                        [ "Joel", "Policy Analyst"]
                ];


                $(document).ready( function () {

                    $('#position').DataTable( {
                        data:   myDataSet,
                        columns: [
                            { title: "Name" },
                            { title: "Position" }
                        ]
                     } );

                } );

         </r:script>

     
     
  8. Startup the web app and look at your data table
     a. Open a web browser
     b. Connect to http://localhost:8080/grailsWebApp1/welcome/index
     
        -- You should see your data table     
        


 


    

       
A P P R O A C H      # 2:  Add DataTables.net files manually and load w/Asset Pipeline Plugin
-----------------------------------------------------------------------------------------------
 1. Download DataTables.net
    a. Browse to https://www.datatables.net/download/download
    b. Save the zip file to your c:\vault
       -- You now have c:\vault\DataTables-1.10.9.zip
    c. Right-click on c:\vault\DataTables-1.10.9.zip -> 7zip -> Extract Here
       -- You now have these directories:
             C:\vault\DataTables-1.10.9\
             C:\vault\DataTables-1.10.9\media\js
             
             
       
 2. Manually add DataTables.net to your Grails Web App
    a. In Intellij, Right-click on /grails-app/assets/javascripts/ -> new -> directory
       Directory name:  dataTables-1.10.9
           
    b. Browse to the C:\vault\
       Right-click on DataTables-1.10.9 -> Copy
    
    c. In Intellij, Right-click on /grails-app/assets/javascripts/ -> Right-Click -> Paste
       Intellij will prompt you to copy files, press OK
       
    d. Delete the DataTables-1.19.9/examples/ directory
    
       Now, you should have these directories
          /grails-app/assets/javascripts/DataTables-1.19.9/extensions/
          /grails-app/assets/javascripts/DataTables-1.19.9/media/js
          /grails-app/assets/javascripts/DataTables-1.19.9/media/css
          /grails-app/assets/javascripts/DataTables-1.19.9/media/images         

 
       
          
 3. Make sure the asset-pipeline plugin is found in your pom.xml
    NOTE:  You should see something like this in your pom.xml
    
         <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>asset-pipeline</artifactId>
            <version>2.5.1</version>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

           
           
 4. Configure asset-pipeline to ignore the  DataTables-1.10.9/extensions/ directory
    a. Edit your grails-app/conf/Config.groovy
    b. Add this to the end:
    
        // Tell the Asset-Pipeline plugin to ignore these directories
        grails.assets.excludes = ["**DataTables-1.10.9/extensions/**",
                                  "**License.txt"]           
           
           
           
 5. Edit your application.js
    
    a. Add this to to your application.js
        //= require DataTables-1.10.9/media/js/jquery.dataTables.min.js
        
    


 6. Edit your application.css
   
    a. Add this to your application.css
        *= require DataTables-1.10.9/media/css/jquery.dataTables.min.css
       
 
 
 7. Verify that DataTables.net js and css are loaded
    a. Start-up your webapp
       CMD> cd /d c:\tools\intellij\workspace\grailwebapp1
       CMD> mvn grails:run-app
    
    b. Open a browser
       Browse to http://localhost/grailwebapp1/
         -- In the "Welcome to Grails" page, you should see on the left:   "assetPipeline - 2.5.1" 
       
    c. Click on your WelcomeController link
    
    d. Right-click on the page -> View Page Source
         -- In the page, you should see this:
         
         <link rel="stylesheet" href="/grailsWebAppA/assets/DataTables-1.10.9/media/css/jquery.dataTables.min.css?compile=false"  />
         
         . . .
         
         <script src="/grailsWebAppA/assets/DataTables-1.10.9/media/js/jquery.dataTables.min.js?compile=false" type="text/javascript" ></script>
         
 
 
 8. Make sure asset pipeline is configured to show deferred scripts
    a. Add this to your views / layouts / main.gsp
    
        <asset:deferredScripts/>
          
          
    b. Verify it was added:
       After this change, your main.gsp should look like this:
       
        <!DOCTYPE html>
        <!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
        <!--[if IE 7 ]>    <html lang="en" class="no-js ie7"> <![endif]-->
        <!--[if IE 8 ]>    <html lang="en" class="no-js ie8"> <![endif]-->
        <!--[if IE 9 ]>    <html lang="en" class="no-js ie9"> <![endif]-->
        <!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"><!--<![endif]-->
            <head>
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
                <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
                <title><g:layoutTitle default="Grails"/></title>
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <link rel="shortcut icon" href="${assetPath(src: 'favicon.ico')}" type="image/x-icon">
                <link rel="apple-touch-icon" href="${assetPath(src: 'apple-touch-icon.png')}">
                <link rel="apple-touch-icon" sizes="114x114" href="${assetPath(src: 'apple-touch-icon-retina.png')}">
                <asset:stylesheet src="application.css"/>
                <asset:javascript src="application.js"/>
                <asset:deferredScripts/>
                <g:layoutHead/>
            </head>
            <body>
                <div id="grailsLogo" role="banner"><a href="http://grails.org"><asset:image src="grails_logo.png" alt="Grails"/></a></div>
                <g:layoutBody/>
                <div class="footer" role="contentinfo"></div>
                <div id="spinner" class="spinner" style="display:none;"><g:message code="spinner.alt" default="Loading&hellip;"/></div>
            </body>
        </html>
       
       
       
 9. Setup a simple data table    
    a. Open your grails-app / views / welcome / index.gsp
    
    b. Add an empty <table> tag 
        <table id="position" class="display"></table>   
        
    c. Add some javascript to load the table on document.ready
    
    
           <asset:script type="text/javascript">

                var myDataSet =
                [
                        [ "Person 1", "Person 1's position"],
                        [ "Person 2", "Person 2's position"],
                        [ "Person 3", "Person 3's position"],
                        [ "Person 4", "Person 4's position"],
                        [ "Person 5", "Person 5's position"],
                        [ "Person 6", "Person 6's position"],
                        [ "Person 7", "Person 7's position"],
                        [ "Person 8", "Person 8's position"],
                        [ "Adam", "System Architect"],
                        [ "Ben", "Mgmt Consultant"],
                        [ "Peter", "Doctor"],
                        [ "Justin", "Psychologist"],
                        [ "Joel", "Policy Analyst"]
                ];


                $(document).ready( function () {

                    $('#position').DataTable( {
                        data:   myDataSet,
                        columns: [
                            { title: "Name" },
                            { title: "Position" }
                        ]
                     } );

                } );

        </asset:script>

     
     
10. Startup the web app and look at your data table
     a. Open a web browser
     b. Connect to http://localhost:8080/grailsWebApp1/welcome/index
     
        -- You should see your data table     
        
            