How to Install Eclipse (Kepler)
-------------------------------

Assumptions
 A) You want to install Eclipse on a Windows 7 environment


Procedures
----------
 1. Install Java JDK 7u75 (also known as 1.7.75)
    If you are running Windows 7 or later, use a 64-bit version
    NOTE:  The 64-bit versions ends with -x64.exe -- e.g., jdk-7u75-windows-x64.exe
    NOTE:  The 32-bit versions end with -x586.exe -- e.g., jdk-7u75-windows-i586.exe
   
    a. Download jdk-7u75-windows-x64.exe
       1) Go to http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html
       2) Click Accept License Agreement
       3) Click on jdk-7u75-windows-x64.exe
      
    b. Install Java JDK 1.7
       1) Run this program:  c:\vault\jdk-7u75-windows-x64.exe
       2) In the "Welcome to the installation wizard" screen, press "Next"
       3) In the "Custom Setup" screen, press "Next"
          The installer installs stuff....
       4) In the "Java Setup Destination Folder" screen, Press "Next"
          The installer installs more stuff....
       5) In the next popup, it should say, "Successfully Installed Java SE Development Kit 7 Update 75 (64-bit)
          Press "Close"
        
    c. Set your JAVA_HOME environment variable to be c:\progra~1\Java\jdk1.7.0_75\
       (or where ever your Java JDK was installed)
       1) Open the Environment Variables in Windows by pressing <Start><Run>environment

       2) Under "User variables for..." [on the top of this popup], 
          click "New..."
             Variable name:  JAVA_HOME
             Variable value: c:\progra~1\Java\jdk1.7.0_75
            
    d. Verify Java JDK 1.7.75 is running
       1) Press <Start><Run>CMD
          DOS> java -version
      
          You should see the following:
          Java(TM) SE Runtime Environment (build 1.7.0_75-b13)
          Java HotSpot(TM) 64-Bit Server VM (build 24.75-b04, mixed mode)
            
           
   
 2. Install Maven 3.3.1
    NOTE:  Maven 3.3.1 requires Java 1.7 or later
   
    a. Download Maven apache-maven-3.3.1-bin.zip
       1) Go to https://maven.apache.org/download.cgi
       2) Look for apache-maven-3.3.1-bin.zip and click on it
          *OR*
          Go to http://apache.claz.org/maven/maven-3/3.3.1/binaries/apache-maven-3.3.1-bin.zip
       3) Save apache-maven-3.3.1-bin.zip to your c:\vault   
      
    b. Install Maven to c:\tools\apache-maven-3.3.1\
       1) Right-click on c:\vault\apache-maven-3.3.1-bin.zip -> 7-Zip -> Extract files....
       2) In the "Extract" popup window
          Under Extract To:  c:\tools
          Press OK
          
          Now, you should have c:\tools\apache-maven-3.3.1\
        
       3) Create an environment variable called M2_HOME=c:\tools\apache-maven-3.3.1
          a) Open the Environment Variables in Windows by pressing <Start><Run>environment
         
          b) Under "User variables for..." [on the top of this popup], 
             Click "New..."
                Variable name:  M2_HOME
                Variable value: c:\tools\apache-maven-3.3.1
            
       4) Add the Maven\bin directory to your PATH
          a) Open the Environment Variables in Windows by pressing <Start><Run>environment

          b) Under "User variables for..." [on the top of this popup], 
             Click "New..."  [if PATH already exists, then double-click on PATH and add a semicolon and append this to the end of the PATH]
                Variable name:  PATH
                Variable value: c:\tools\apache-maven-3.3.1\bin
         
       5) Configure Maven to put files in c:\tools\local-maven-repo\
          a) Right-click on c:\tools\apache-maven-3.3.1\conf\settings.xml
          b) Make sure this part is *not* commented-out
          
               <localRepository>c:/tools/local-maven-repo</localRepository>
       
       6) Copy your updated settings.xml to c:\users\<your username>\.m2\settings.xml
          a) Create this directory:  c:\users\<your username>\.m2\
          b) Copy your settings.xml file 
             from c:\tools\apache-maven-3.3.1\conf\settings.xml
             to c:\users\<your username>\.m2\settings.xml
             
             NOTE:  This is needed because by default Maven on the command-line
                    will create a c:\users\<your username\.m2\repository\ directory
                    and not use your c:\tools\local-maven-repo\ 
        
             CMD> mkdir c:\users\adam\.m2\
             CMD> copy c:\tools\apache-maven-3.3.1\conf\settings.xml   c:\users\adam\.m2\
        
             NOTE:  This is needed because by default Maven on the command-line
                    will create a c:\users\<your username>\.m2\repository\ directory
                    and not use your c:\tools\local-maven-repo\ 
                     
       
       7) **OPTIONAL** if you are using CYGWIN          
          Modify your .bashrc so that you have this line in it
              export M2_HOME=/cygdrive/c/tools/apache-maven-3.3.1
          
          a) Open a CYGWIN window
          b) vi ~/.bashrc
               export M2_HOME=/cygdrive/c/tools/apache-maven-3.3.1
               
               
          
       8) Verify that Maven works  
          a) Press <Start><Run>CMD
             DOS> mvn -version
             
             You should see the following:
             Apache Maven 3.3.1 (cab6659f9874fa96462afef40fcf6bc033d58c1c; 2015-03-13T16:10:27-04:00)
             Maven home: c:\tools\apache-maven-3.3.1
             Java version: 1.7.0_75, vendor: Oracle Corporation
             Java home: c:\progra~1\Java\jdk1.7.0_75\jre
             Default locale: en_US, platform encoding: Cp1252
             OS name: "windows 7", version: "6.1", arch: "amd64", family: "windows"
    
    
          b) Enter this command in the DOS window:
             DOS> mvn help:effective-settings
             
             <settings xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schem
                aLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd">
              <localRepository xmlns="http://maven.apache.org/SETTINGS/1.1.0">c:\tools\local-maven-repo</localRepository>
              <pluginGroups xmlns="http://maven.apache.org/SETTINGS/1.1.0">
                <pluginGroup>org.apache.maven.plugins</pluginGroup>
                <pluginGroup>org.codehaus.mojo</pluginGroup>
              </pluginGroups>
            </settings>

            [INFO] ------------------------------------------------------------------------
            [INFO] BUILD SUCCESS
            [INFO] ------------------------------------------------------------------------
            [INFO] Total time: 1.685 s
            [INFO] Finished at: 2016-01-07T21:54:22-05:00
            [INFO] Final Memory: 12M/169M
            [INFO] ------------------------------------------------------------------------


 
          
 3. Install Eclipse Kepler
    a. Download Eclipse Kepler  (eclipse-jee-kepler-SR2-win32-x86_64.zip)
       1) Go to http://www.eclipse.org/kepler/
       2) Click "Downloads" 
       3) Look for the "Eclipse IDE for Java EE Developers"
          -- Look to the right
          -- Click on Windows 64-bit
       4) In the "Eclipse downloads -- mirror selection" page, Click the large down arrow
       5) Save eclipse-jee-kepler-SR2-win32-x86_64.zip to your c:\vault directory
       
    b. Install Eclipse Kepler SR2 
       1) Right-click on c:\vault\eclipse-jee-kepler-SR2-win32-x86_64.zip -> 7-zip -> Extract files....
       2) In the "Extract" popup
          Change "Extract To" to hold this c:\tools and press "OK"
          
          Now, you should have these directories:
             c:\tools\eclipse\configuration
             c:\tools\eclipse\dropins
             c:\tools\eclipse\features
             c:\tools\eclipse\p2
             c:\tools\eclipse\plugins
             c:\tools\eclipse\readme
             
    c. Configure Eclipse
       1) Run this program:  c:\tools\eclipse\eclipse.exe
       2) In the "Select a workspace" screen
             Workspace:  c:\tools\eclipse\workspace\
             Check the checkbox that says "use this as the default and do not ask again"
             Press "OK"
            
            
       3) Add Eclipse to your toolbar
          a) Press <Start><Run>c:
          b) Browse to c:/tools/eclipse
          c) Drag and drop the eclipse.exe to your toolbar

           
       4) Setup the Eclipse Preferences
          a) Startup Eclipse
          b) Follow these steps in Eclipse
                     
               1) Add your JDK (as an installed JRE) so you run mvn builds from Eclipse
                    a) Pull Windows / Preferences
                    b) Select Java -> Installed JREs
                    c) Click Add....
                    d) Select "Standard VM" and press Next
                    e) Next to the "JRE Home" box, Click the "Directory..."
                    f) Browse to Computer -> C: -> Program Files -> Java -> JDK 1.7.0_75
                       Press OK
                    g) Press Finish
                    h) Press OK
                           
               2) Tell Eclipse to use your Maven settings
                    a) Pull Windows / Preferences / Maven / User Settings
                    b) User Settings:  c:\tools\apache-maven-3.3.1\conf\settings.xml    
                    c) Press Update Settings
                    d) Press "OK"
                        
               3) Tell Eclipse that your default browser should be Firefox
                    a) Pull Window -> Preferences
                    b) Search for "browser"
                    c) Click on "Web Browser"
                       Select "Use external web browser"
                       Select Firefox
                       Press Apply
                       Press OK
        
               4) Tell Eclipse to turn off folding
                    a) Pull Window -> Preferences
                    b) Select Java -> Editor -> Folding
                       Uncheck "Enable folding"
                       Press Apply
                       Press OK
                 
               5) Tell Eclipse to turn off spell checking
                    a) Pull Window -> Preferences
                    b) Search for Spelling
                    c) Click on Spelling
                    d) Uncheck "Enable spell checking"
                       Press Apply
                       Press OK
                
               6) Tell Eclipse to open XML files with the text editor
                    a) Pull Windows -> Preferences 
                    b) Select General -> Editors -> File Assocations
                       In the bottom, next to Associated Editors, Press "Add..."
                            -- Select "Text Editor" and press OK
                            
                       In the top, press 'Add..."
                            -- File type:  *.xml and press OK
        
                       On the bottom, single-click on Text Editor and press "Default"
                            -- Now Text Editor is the top of the list
                            
                       Press OK                
                        
               7) Tell Eclipse to hide the range indicator
                    a) Pull Windows -> Preferences 
                    b) Select General -> Editors -> Text Editors
                       Uncheck "Show range indicator"
                       Press Apply
                       Press OK
              
               8) Tell Eclipse to ignore auto-crlf in GIT
                    a) Pull windows -> Preferences
                    b) Select Team -> Git -> Configuration
                       next to autocrlf, set the value to false
                       Press Apply
                       Press OK
                       