How to use Spring-JDBC to get the generated ID
----------------------------------------------


ASSUMPTION:
 A) Your database table has an ID column
 B) Your ID column auto-generates the ID [if none is passed-in]
 
    For example, this SQL to would create such a table:
    
    CREATE TABLE tbl
    (
       id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,
       description varchar(250) NOT NULL
    );
 
 
 
 Spring-jdbc code to get the generated ID
 ----------------------------------------
    private long getGeneratedId() throws Exception
    {
        // Get the data source from the Spring Bean alled "mysqlDataSource"
        DataSource mySqlDataSource = (DataSource) SpringAppContextUtils.getBean("mysqlDataSource");

        SqlUpdate insert = new SqlUpdate(mySqlDataSource, "INSERT INTO tbl (description) VALUES (?)");
        insert.declareParameter(new SqlParameter(Types.VARCHAR)); 
        insert.setReturnGeneratedKeys(true);

        // assuming auto-generated col is named 'id'
        insert.setGeneratedKeysColumnNames(new String[] {"id"}); 
        insert.compile();
   
        GeneratedKeyHolder keyHolder = new GeneratedKeyHolder();
        
        // Insert the record and pass-in the key holder
        insert.update(new Object[]{"test"}, keyHolder);
        
        // Get the generated id from the "id" column
        long lGeneratedId = keyHolder.getKey().longValue();

        System.out.println("Generated ID is " + lGeneratedId);    
        
        return lGeneratedId:
    }
  