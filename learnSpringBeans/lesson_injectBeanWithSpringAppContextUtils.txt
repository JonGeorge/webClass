Lesson:  Inject a bean with SpringAppContextUtils class
-------------------------------------------------------
inject a bean into a class


Procedure
---------

 1. Add the SpringAppContextUtils class to your project
    NOTE:  This will be used to get access to spring beans from anywhere within your web app

        package stuff.utilities;
        
        
        /**
         * To work, this line must be in the applicationContext.xml file
         *    <bean id="applicationContextProvider" class="app1.utilities.SpringAppContextUtils" />
         * 
         *  MySpringBean mySpringBean = (MySpringBean) SpringApplicationContext.getBean("mySpringBean");
         * // do something with MySpringBean
         * 
        * Create a class which implements ApplicationContextAware. 
        * The method, “setApplicationContext(…)” gets called during the creation of this bean
        * providing the reference to the context. 
        * 
        * Our program should store this for a later interaction with the context.
        */
        import org.springframework.beans.BeansException;
        import org.springframework.context.ApplicationContext;
        import org.springframework.context.ApplicationContextAware;
        
        public class SpringAppContextUtils implements ApplicationContextAware
        {
             private static ApplicationContext applicationContext = null;
        
              public static ApplicationContext getApplicationContext() {
                  return applicationContext;
              }
              
              public void setApplicationContext(ApplicationContext aApplicationContext) throws BeansException
              {
                   // Assign the ApplicationContext into a static variable
                   applicationContext = aApplicationContext;
              }
              
              
              public static Object getBean(String aName)
              {
                  if (applicationContext == null)
                  {
                      throw new RuntimeException("Error in SpringAppContextUtils.getBean().  The applicationContext is null");
                  }
                  
                  return applicationContext.getBean(aName);
              }
              
        }


 2. Setup SpringAppContextUtils so that it has the applicationContext passed into it
    Add this line to your applicationContext.xml file 

      <bean id="applicationContextProvider" class="stuff.utilities.SpringAppContextUtils" />
  
 
 3. Inject a bean using this code:
    
        // Get a reference to the mySqlDataSource bean
        DataSource mySqlDataSource = (DataSource) SpringAppContextUtils.getBean("mysqlDataSource");
    
    
 