Lesson:  Differences between @Autowired and @Resource
-----------------------------------------------------
Both inject a bean into a class


References
----------
http://stackoverflow.com/questions/4093504/resource-vs-autowired
http://blogs.sourceallies.com/2011/08/spring-injection-with-resource-and-autowired/



How annotations select the right implementation?
------------------------------------------------
@Autowired and @Inject execution order is as follows:
 1) Matches by Type
 2) Restricts by Qualifiers
 3) Matches by Name

@Resource execution order is as follows:
 1) Matches by Name
 2) Matches by Type
 3) Restricts by Qualifiers (ignored if match is found by name)


WARNING:  Spring has a fall back to use by-type
-----------------------------------------------
The Spring-Implementation of @Resource has a built-in fallback, which kicks in when resolution by-name fails. 
In this case, it falls back to the @Autowired-kind resolution by-type. 
While this fallback is convenient, it causes a lot of confusion, because people are unaware of the conceptual difference and tend to use @Resource for type-based autowiring.


Best Approach
-------------
 A) Explicitly name your component [@Component("beanName")]
 B) Use @Resource with the name attribute [@Resource(name="beanName")]




