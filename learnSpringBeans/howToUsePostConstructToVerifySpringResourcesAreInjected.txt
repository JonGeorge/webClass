How to Use the @PostConstruct annotation to Verify Spring Resources are Injected
--------------------------------------------------------------------------------

Solution:
 1) Add either to your spring application-context.xml file
      <context:annotation-config /> 
  
      *OR*
   
      <context:component-scan base-package="stuff" />
   
   
   
   So, your application-context.xml file looks like this:
   
   
     <beans xmlns="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:context="http://www.springframework.org/schema/context"
         xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd">
        
        <!-- Activate annotations in beans already registered in the application context -->
        <context:annotation-config />        

            
        <!-- Setup a spring bean that holds the HttpSolrServer object  -->
        <!-- NOTE:  set destroy-method="shutdown" so that Spring will call this method when the Spring Context is shutdown -->
        <bean id="mySolrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer" destroy-method="shutdown">
            <constructor-arg value="http://localhost:8983/solr/collection1"/>
        </bean>
  
      </beans>
      
      
      
      
 2) Add a the method
 
       public class BogusClass
        {
            @Resource
            HttpSolrServer mySolrServer;
        
                 
            /********************************************************************
             * verifyClassIsInitialized()
             *
             * Verify that the spring resource were injected successfully
             * 
             * NOTE:  Because this is used in a Spring app,
             *        You must have either of these set in your sping initialization
             *            <context:annotation-config/> (or <context:component-scan/>
             ********************************************************************/
            @PostConstruct
            public void verifyClassIsInitialized()
            {
                if (mySolrServer == null)
                {
                    throw new RuntimeException("Error in BogusClass.  The mySolrServer is null.");
                }
            }

        }     
        
        
        
        