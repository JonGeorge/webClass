How to List All Spring Beans
----------------------------
The following MyApplicationWatcher class has a listSpringBeans() method that will 
list all of the spring beans in sorte dorder

NOTE:  the listSpringBeans() must be called *AFTER* the Spring Context is initialized



MyApplicationWatcher
--------------------
package app1.utilities;

import java.util.Arrays;
import org.slf4j.LoggerFactory;
import org.slf4j.Logger;
import org.springframework.web.context.ContextLoaderListener;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;
import javax.servlet.ServletContext;
import javax.servlet.ServletContextEvent;



public class MyApplicationWatcher extends ContextLoaderListener
{
    private Logger logger = LoggerFactory.getLogger(this.getClass());
    
    
    /*******************************************************************************
     * contextInitialized()
     *   1) Verify the connection pool by attempting to run a query
     *******************************************************************************/
    @Override
    public void contextInitialized(ServletContextEvent aServetContextEvent)
    {
        // Get a pointer to the ServletContext
        ServletContext ctx = aServetContextEvent.getServletContext();
        
        final String sWebAppName = ctx.getContextPath().substring(1);
        logger.debug("{} contextInitialized() started.", sWebAppName);

         try 
         {
             // Initialize Spring Context
             // NOTE:  Initializes spring beans
             // NOTE:  This must be done before using SpringAppContextUtils
             super.contextInitialized( aServetContextEvent);
             

             // NOTE:  This should be called *after* the Spring Context is initialized
             listSpringBeans( aServetContextEvent);
         }
         catch (Exception e)
         {
             throw new RuntimeException("Critical Error in contextInitialized().  WEB APP WILL NOT STARTUP.", e);
         }
         
         
         logger.debug("{} contextInitialized() finished.", sWebAppName);
    }


    /*******************************************************************************
     * listSpringBeans()
     * 
     * NOTE:  This method must be called *after* Spring is initialized
     *******************************************************************************/
    private void listSpringBeans(ServletContextEvent aServletContextEvent)
    {
        // Get a reference to the ServletContext
        ServletContext srvContext = aServletContextEvent.getServletContext();
            
        // Get a reference to the SpringAppContext
        WebApplicationContext springAppContext = WebApplicationContextUtils.getWebApplicationContext(srvContext);
         
        // Get a list of all spring bean names
        String[] allSpringBeanNames = springAppContext.getBeanDefinitionNames();
        
        // Sort the list of spring bean names
        Arrays.sort(allSpringBeanNames);
        
        // Display info about every bean
        logger.debug("-All Spring Beans-");
        for (int i=0; i< allSpringBeanNames.length; i++)
        {
            String sBeanName = allSpringBeanNames[i];
            String sBeanClassInfo = springAppContext.getBean(sBeanName).getClass().toString();
            
            logger.debug("  Bean #{} {} -> {}", String.format("%-3d", i+1), sBeanName, sBeanClassInfo);
        }
        
    }    

}
