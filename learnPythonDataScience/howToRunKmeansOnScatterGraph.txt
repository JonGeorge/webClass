How to Run K-means clustering alogirthm on Scatter Graph (display interactively)
--------------------------------------------------------------------------------

Assumptions
 A) You have Python installed
 B) You have the matplotlib module installed
    (or you installed Anaconda2 which would provide both)
 C) You have PyCharm installed 
 D) Your PyCharm is configured so that the Project Interpreter is set to where python is installed


Procedure
---------
 1. Startup PyCharm
         
        
 2. Open a new/existing project
         
        
 3. Create this file:  runKmeansOnScatterGraph.py
    Right-click on your project -> New -> Python File
    Name:  runKmeansOnScatterGraph.py
    press OK
         
        
 4. Copy this to your runKmeansOnScatterGraph.py file

        #######################################################################
        # Filename:  runKmeansOnScatterGraph.py
        # Author:    <your name>
        #######################################################################
        # Purpose:
        #   Run a kmeans-clustering algorithm to find the center of 2 clusters
        #   and plot the reuslts
        #
        # Usage
        #   DOS> python runKmeansOnScatterGraph.py
        #
        # Assumptions
        #   A) python is in the PATH
        #   B) numpy, matplotlib modules are installed
        #######################################################################
        import os
        import time
        import numpy as np
        import matplotlib.pyplot as plt
        from matplotlib import style
        from sklearn.cluster import KMeans
        
        gsScriptName = os.path.basename(__file__)
        
        print("%s has started as of %s." % (gsScriptName, time.strftime("%c")))
        
        style.use("ggplot")
        
        # Convert our coordinates into a NumPy array
        rawCoordinates = np.array([ [1,2], [5,8], [1.5,1.8], [8,8], [1,0.6], [9, 11]])
        
        # Initialize the kmeans algorithm so that it puts everything into 2 clusters
        kmeans = KMeans(n_clusters=2)
        
        # Apply the kmeans clustering alogirthm
        kmeans.fit(rawCoordinates)
        
        # Grab the values for the Centroids and labels
        centroids = kmeans.cluster_centers_
        labels = kmeans.labels_
        
        print(centroids)
        print(labels)
        
        
        # Plot the kmeans results
        colors = [ "g.", "r.", "c.", "y."]
        
        for i in range(len(rawCoordinates)):
            print("coordinate:  %s   label: %s" % (rawCoordinates[i], labels[i]))
            plt.plot(rawCoordinates[i][0], rawCoordinates[i][1], colors[labels[i]], markersize = 10)
        
        
        
        plt.scatter(centroids[:, 0], centroids[:, 1], marker = "x", s=150, linewidths = 5, zorder = 10)
        plt.show()
        
        print("%s has finished as of %s." % (gsScriptName, time.strftime("%c")))
        exit(0)
        

        
 5. Step through the code with your debugger
    a. Set a breakpoint in the script by clicking in the left margin
    b. Right-click in the file -> Debug 'showScatterGraph'
    c. Press F9 to continue running
    
    You should see a window appear with the scatter plot
    
    