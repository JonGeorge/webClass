How to Plot Sine Wave Interactively (using matplotlib)
-------------------------------------------------------


Assumptions
 A) You have Python installed
 B) You have the matplotlib module installed
    (or you installed Anaconda2 which would provide both)
 C) You have PyCharm installed 
 D) Your PyCharm is configured so that the Project Interpreter is set to where python is installed


Procedure
---------
 1. Startup PyCharm
         
        
 2. Open a new/existing project
         
        
 3. Create this file:  sineWaveInteractive.py
    Right-click on your project -> New -> Python File
    Name:  sineWaveInteractive.py
    press OK
         
        
 4. Copy this to your sineWaveInteractive.py file

        #######################################################################
        # Filename:  sineWaveInteractive.py
        # Author:    <your name>
        #######################################################################
        # Purpose:
        #   Display a graph
        #
        # Usage
        #   DOS> python sineWaveInteractive.py
        #
        # Assumptions
        #   A) python is in the PATH
        #   B) numpy, matplotlib modules are installed
        #######################################################################
        import os
        import time
        import matplotlib.pyplot as plt
        import numpy as np
        
        gsScriptName = os.path.basename(__file__)
        
        print("%s has started as of %s." % (gsScriptName, time.strftime("%c")))
        
        # Set the stylesheet of the plot
        # NOTE:  To list all use this:  print("Available styles include: %s" %  "\n".join(plt.style.available) )
        plt.style.use("ggplot")
        
        # Turn off interactive mode unless show() is called
        plt.ioff()
        
        # X is an a range of 0 to 360 in radiuns
        # NOTE:  1 radiun = 2/pi or about .666
        # x = np.linspace(-np.pi, np.pi, 150)
        # y = np.sin(x)
        
        # Create a range of values from 0 to 360 (step by 1)
        x = np.arange(0, 360, 1)
        
        # Create a range of y-values that hold the sin(radiuns)
        #   y=sin(x-in-degrees * pi / 180)
        # NOTE:  To convert degrees to radiuns then do this
        #              radiuns = (x in degrees) * pi / 180
        y = np.sin(x * np.pi / 180)
        
        
        # Set the x-axis to be between 0-360
        # Set the y-axis to be between -1.01 and 1.01
        # NOTE:  If you set the y-axis to be between -1.0 and 1.0,
        #        Then the plot gets cut-off
        plt.axis([0, 361, -1.01, 1.01])
        
        # Set the ticks on the x-axis to be every 45 degrees
        x_axis_ticks = np.arange(min(x), max(x)+1, 45)
        plt.xticks(x_axis_ticks)
        
        # Set the labels
        plt.title("Sine Curve")
        plt.xlabel('Angle in Degrees')
        plt.ylabel('sin(x)')
        
        # Plot the coordinates
        plt.plot(x,y)
        
        # Display the interactive graph to the user
        # NOTE:  This will block until the user closes the grap
        plt.show()
        
        print("%s has finished as of %s." % (gsScriptName, time.strftime("%c")))
        exit(0)



 5. Step through the code with your debugger
    a. Set a breakpoint in the script by clicking in the left margin
    b. Right-click in the file -> Debug 'sineWaveInteractive'
    c. Press F9 to continue running
    
    You should see a window appear with the sine wave plot
    
    