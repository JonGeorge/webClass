How to Install Python Data Science Libraries (for Python 2.7 and CentOS)
------------------------------------------------------------------------
Anaconda 4.0.0 includes an easy installation of Python and updates of over 150+
pre-built and tested scientific and analytic Python packages, including:
   NumPy
   Pandas
   SciPy
   Matplotlib
   iPython
   
To see the list of packages that make-up Anaconda, go here:
   https://docs.continuum.io/anaconda/pkg-docs
   
 
References
----------
https://www.continuum.io/downloads
https://docs.continuum.io/anaconda/pkg-docs
https://docs.scipy.org/doc/numpy-dev/user/quickstart.html



Assumptions
 A) You have Python 2.7 (32-bit) installed on Centos
 B) You have PyCharm installed on Centos
 C) You want to install the Python Data Science libraries
 
 
Procedure
---------         
 1. Download Anaconda for Python 2.7 and Linux
    a. Open a browser
    b. Go to https://www.continuum.io/downloads
    c. Scroll down to the "Anaconda for Linux 64-bit installer"
       *or*
       Go to http://repo.continuum.io/archive/Anaconda2-4.0.0-Linux-x86_64.sh
       
    d. SaveAnaconda2-4.0.0-Linux-x86_64.sh
       NOTE:  It should appear in your ~/Downloads/ directory




 2. Run the Anaconda installer
    NOTE: Install to /opt/anaconda2
    
    a. Open a new terminal
    b. Within the terminal, run these commands: 
       unix> cd ~/Downloads
       unix> sudo bash Anaconda2-4.0.0-Linux-x86_64.sh
       
         In order to continue the installation process, please review the license agreement.
         Please, press ENTER to continue
         <Press Enter>
         
         Do you approve the license terms? [yes|no]   yes <Enter>
         
         Anaconda2 will now be installed into this location:
            /root/anaconda2
    
         - Press ENTER to confirm the location
         - Press CTRL-C to abort the installation
         - Or specify a different location below
         
         >>> /opt/anaconda2       <press Enter>
         
       
         W A I T     5    M I N U T E S
    
         installation finished.
         Do you wish the installer to prepend the Anaconda2 install location
         to PATH in your /root/.bashrc ? [yes|no]     yes  <enter>
         
      
      
       
     NOTE:  You should see this in the end of your ~/.bashrc file:
     
       # added by Anaconda2 4.0.0 installer
       export PATH="/opt/anaconda2/bin:$PATH"
     
     
                 
    
 3. List the packages that were installed with anaconda
    a. Open a new terminal
    b. unix> sudo -s
       unix> conda list
          
    # packages in environment at /opt/anaconda2:
    #
    alabaster                 0.7.7                    py27_0
    anaconda                  4.0.0               np110py27_0
    anaconda-client           1.4.0                    py27_0
    anaconda-navigator        1.1.0                    py27_0
    argcomplete               1.0.0                    py27_1
    astropy                   1.1.2               np110py27_0
    babel                     2.2.0                    py27_0
    backports-abc             0.4                       <pip>
    backports.ssl-match-hostname 3.4.0.2                <pip>
    backports_abc             0.4                      py27_0
    beautifulsoup4            4.4.1                    py27_0
    bitarray                  0.8.1                    py27_1
    blaze                     0.9.1                    py27_0
    bokeh                     0.11.1                   py27_0
    boto                      2.39.0                   py27_0
    bottleneck                1.0.0               np110py27_0
    bzip2                     1.0.6                     vc9_2  [vc9]
    . . .


 4. Verify that the numpy package was installed and in the PATh
    a. Open a new terminal
    b. In the terminal, type-in this:
       unix> python -c "import numpy"
       unix> echo $?
       0
       
       *OR*
       
       unix> python
       Python 2.7.11 |Anaconda 4.0.0 (64-bit)| (default, Dec  6 2015, 18:08:32) 
       [GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux2
       Type "help", "copyright", "credits" or "license" for more information.
       Anaconda is brought to you by Continuum Analytics.
       Please check out: http://continuum.io/thanks and https://anaconda.org
        >>> import numpy
        >>> quit()
       
        NOTE:  There are no errors when you attempt to import numpy
        

 5. Update PyCharm so that it knows where your Python executable is located
    a. Start-up PyCharm
       NOTE:  If an existing project appears, pull File -> Close Project
    b. On the Welcome Page, pull Configure -> Settings
       Select Project Interprereter
       Select the "anaconda" version of python -- e.g., /opt/anaconda2/bin/python2.7
       Press OK
         
       W A I T    5     M I N U T E S     (for PyCharm to index all of the installed packages) 
          
        
    
 6. Verify that the numpy package works
    a. Start-up PyCharm
    b. Create a new Pure Python Project called pythonScripts
    c. Create a new Python script called arrayMultiply.py
    d. Copy this to arrayMultiply.py
       
        #######################################################################
        # Filename:  arrayMultiply.py
        # Author:    <your name>
        #######################################################################
        # Purpose:
        #   Attempt to do some matric multiplication using numpy
        #
        # Usage
        #   DOS> python arrayMultiply.py
        #
        # Assumptions
        #   A) python is in the PATH
        #   B) numpy is installed
        #######################################################################
        import numpy as np
        import os
        import time
        
        gsScriptName = os.path.basename(__file__)
        print("%s started as os %s" % (gsScriptName, time.strftime("%c")))
        
        A = np.array([[1, 1],
                      [0, 1]])
        
        B = np.array([[2, 0],
                      [3, 4]])
        
        C = A * B
        print C
        
        print("%s finished as os %s" % (gsScriptName, time.strftime("%c")))



 7. Run the arrayMultiply.py script
    Within PyCharm, right-click on the file -> Run 'arrayMultiply'
    
    You should see this in the console output:
        arrayMultiply.py started as os 05/31/16 20:57:53
        [[2 0]
         [0 4]]
        arrayMultiply.py finished as os 05/31/16 20:58:01   
    
