How to Install IntelliJ on Windows
----------------------------------

Assumptions:
 A) You want to install Intellij Community Edition on Windows 7 
 
 
Procedures
----------
 1. Install Java JDK 7u75 (also known as 1.7.75)
    If you are running Windows 7 or later, use a 64-bit version
    NOTE:  The 64-bit versions ends with -x64.exe -- e.g., jdk-7u75-windows-x64.exe
    NOTE:  The 32-bit versions end with -x586.exe -- e.g., jdk-7u75-windows-i586.exe
   
    a. Download jdk-7u75-windows-x64.exe
       1) Go to http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html
       2) Click Accept License Agreement
       3) Click on jdk-7u75-windows-x64.exe
      
    b. Install Java JDK 1.7
       1) Run this program:  c:\vault\jdk-7u75-windows-x64.exe
       2) In the "Welcome to the installation wizard" screen, press "Next"
       3) In the "Custom Setup" screen, press "Next"
          The installer installs stuff....
       4) In the "Java Setup Destination Folder" screen, Press "Next"
          The installer installs more stuff....
       5) In the next popup, it should say, "Successfully Installed Java SE Development Kit 7 Update 75 (64-bit)
          Press "Close"
        
    c. Set your JAVA_HOME environment variable to be c:\progra~1\Java\jdk1.7.0_75\
       (or where ever your Java JDK was installed)
       1) Open the Environment Variables in Windows by pressing <Start><Run>environment

       2) Under "User variables for..." [on the top of this popup], 
          click "New..."
             Variable name:  JAVA_HOME
             Variable value: c:\progra~1\Java\jdk1.7.0_75
            
    d. Verify Java JDK 1.7.75 is running
       1) Press <Start><Run>CMD
          DOS> java -version
      
          You should see the following:
          Java(TM) SE Runtime Environment (build 1.7.0_75-b13)
          Java HotSpot(TM) 64-Bit Server VM (build 24.75-b04, mixed mode)
            
           
   
 2. Install Maven 3.3.1
    NOTE:  Maven 3.3.1 requires Java 1.7 or later
   
    a. Download Maven apache-maven-3.3.1-bin.zip
       1) Go to https://maven.apache.org/download.cgi
       2) Look for apache-maven-3.3.1-bin.zip and click on it
          *OR*
          Go to http://apache.claz.org/maven/maven-3/3.3.1/binaries/apache-maven-3.3.1-bin.zip
       3) Save apache-maven-3.3.1-bin.zip to your c:\vault   
      
    b. Install Maven to c:\tools\apache-maven-3.3.1\
       1) Right-click on c:\vault\apache-maven-3.3.1-bin.zip -> 7-Zip -> Extract files....
       2) In the "Extract" popup window
          Under Extract To:  c:\tools
          Press OK
          
          Now, you should have c:\tools\apache-maven-3.3.1\
        
       3) Create an environment variable called M2_HOME=c:\tools\apache-maven-3.3.1
          a) Open the Environment Variables in Windows by pressing <Start><Run>environment
         
          b) Under "User variables for..." [on the top of this popup], 
             Click "New..."
                Variable name:  M2_HOME
                Variable value: c:\tools\apache-maven-3.3.1
            
       4) Add the Maven\bin directory to your PATH
          a) Open the Environment Variables in Windows by pressing <Start><Run>environment

          b) Under "User variables for..." [on the top of this popup], 
             Click "New..."  [if PATH already exists, then double-click on PATH and add a semicolon and append this to the end of the PATH]
                Variable name:  PATH
                Variable value: c:\tools\apache-maven-3.3.1\bin
         
       5) Configure Maven to put files in c:\tools\local-maven-repo\
          a) Right-click on c:\tools\apache-maven-3.3.1\conf\settings.xml
          b) Make sure this part is *not* commented-out
          
               <localRepository>c:/tools/local-maven-repo</localRepository>
       
       6) Copy your updated settings.xml to c:\users\<your username>\.m2\settings.xml
          a) Create this directory:  c:\users\<your username>\.m2\
          b) Copy your settings.xml file 
             from c:\tools\apache-maven-3.3.1\conf\settings.xml
             to c:\users\<your username>\.m2\settings.xml
             
             NOTE:  This is needed because by default Maven on the command-line
                    will create a c:\users\<your username>\.m2\repository\ directory
                    and not use your c:\tools\local-maven-repo\ 
        
             CMD> mkdir c:\users\adam\.m2\
             CMD> copy c:\tools\apache-maven-3.3.1\conf\settings.xml   c:\users\adam\.m2\
        
             NOTE:  This is needed because by default Maven on the command-line
                    will create a c:\users\<your username>\.m2\repository\ directory
                    and not use your c:\tools\local-maven-repo\ 
                     
                     
       
       7) **OPTIONAL** if you are using CYGWIN          
          Modify your .bashrc so that you have this line in it
              export M2_HOME=/cygdrive/c/tools/apache-maven-3.3.1
          
          a) Open a CYGWIN window
          b) vi ~/.bashrc
               export M2_HOME=/cygdrive/c/tools/apache-maven-3.3.1
               
               
          
       8) Verify that Maven works  
          a) Press <Start><Run>CMD
             DOS> mvn -version
             
             You should see the following:
             Apache Maven 3.3.1 (cab6659f9874fa96462afef40fcf6bc033d58c1c; 2015-03-13T16:10:27-04:00)
             Maven home: c:\tools\apache-maven-3.3.1
             Java version: 1.7.0_75, vendor: Oracle Corporation
             Java home: c:\progra~1\Java\jdk1.7.0_75\jre
             Default locale: en_US, platform encoding: Cp1252
             OS name: "windows 7", version: "6.1", arch: "amd64", family: "windows"
    
    
          b) Enter this command in the DOS window:
             DOS> mvn help:effective-settings
             
             <settings xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schem
                aLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd">
              <localRepository xmlns="http://maven.apache.org/SETTINGS/1.1.0">c:\tools\local-maven-repo</localRepository>
              <pluginGroups xmlns="http://maven.apache.org/SETTINGS/1.1.0">
                <pluginGroup>org.apache.maven.plugins</pluginGroup>
                <pluginGroup>org.codehaus.mojo</pluginGroup>
              </pluginGroups>
            </settings>

            [INFO] ------------------------------------------------------------------------
            [INFO] BUILD SUCCESS
            [INFO] ------------------------------------------------------------------------
            [INFO] Total time: 1.685 s
            [INFO] Finished at: 2016-01-07T21:54:22-05:00
            [INFO] Final Memory: 12M/169M
            [INFO] ------------------------------------------------------------------------
  

    
    
 3. Install IntelliJ Community Edition 14.1.4
    a. Download IntelliJ Community Edition
       1) Go to http://www.jetbrains.com/idea/download/index.html
       2) Click the "Download Community" button 
       3) Save ideaIC-14.1.4.exe  c:\vault\
   
    b. Install IntelliJ
       1) Run this program:  c:\vault\ideaIC-14.1.4.exe

       2) In the "Welcome to Intellij IDEA" screen, press Next
      
       3) In the "Choose Install Location" screen,  
          Set the destination directory to be:
             c:\tools\intellij
             Press Next
            
       4) In the "Installation Options" screen
          Check "Create Desktop Shortcut"
          Press Next
         
         
       5) In the "Choose Start Menu Folder", screen
          go with the default name 
          Press Install
      
       6) In the "Completing Intellij IDEA community edition", screen
          Press FInish
   
   
 
 4. Configure Intellij
    a. Run IntelliJ  (there should be a shortcut on your desktop)
       Or click on C:\tools\intellij\bin\idea.exe
       
    b. You may be asked if you wan to import your settings
       select "I do not have a previous version Of IntelliJ IDEA"
       Press OK
       
    c. In the "Set UI Theme"
       select "IntelliJ" and press "Next: Default Plugins"
       
    d. In the "Tune IDEA to your tasks"
       select "Next: Feature plugins"
       
    e. In the "Download feature plugins"
       select "Start using Intellij IDEA"
       
    f. Close Intellij
    
    g. Make sure Intellij is using your Maven settings.xml
       1) Pull File / Settings
       2) Search for Maven
       3) Under Build, Execution, Deployment -> Build Tools -> Maven
          -- Maven home directory:  C:\tools\apache-maven-3.2.3
          -- User settings file:    C:\tools\apache-maven-3.2.3\conf\settings.xml
       
    h. Create a workspace directory
       Create this directory:   c:\tools\intellij\workspace
    
    i. Tell Intellij to turn of spell checking
       1) Pull File / Settings
       2) Search for spelling
       3) Click on Inspections
       4) Uncheck the Spelling Typo 
       5) Press Apply, Press OK
       
    j. Tell Intellij to not add an extra quote when typing
       1) Pull File / Settings
       2) Search for quote
       3) Click on "Smart Keys" [on the left]
       4) Uncheck "Insert pair quote"
       5) Uncheck "add quotes for attribute values on typing '='
       5) Press Apply, Press OK
    
    k. Disable unused plugins to make Intellij run faster
       1) Pull File / Settings 
       2) Click on Plugins [on the left]
          Disable these plugins (by unchecking it) 
             Android Support
             Ant Support
             Application Server View
             ASP
             AspjectJ Support
             Bytecode Viewer    
             CFML Support
             ClearCase Integration
             Cloud Foundy integration
             CloudBees integration
             CoffeeScript
             Copyright
             Cucumber for Groovy
             Cucumber for Java
             CVS Integration
             dmServer Support
             DSM Analysis
             Eclipse Integration
             Emma
             Flash/Flex Support
             FreeMarker Support
             Geronimo Integration
             Gherkin
             GlassFish Integration
             Google App Engine Integration
             Guice 
             GWT Support
             HAML
             Heroku integration
             hg4idea
             J2ME 
             JavaFX 
             JBOSS anything... - uncheck them all
             Jetty Integration 
             Kotlin
             OpenShift integration 
             Osmorc
             Perforce Integration
             Playframework Support
             Plugin DevKit 
             Refactor-X
             Remote Hosts Access
             Resin Integration
             SASS Suport 
             Struts 1.x 
             Struts 2
             Stylus support 
             Tapestry support
             Terminal
             TFS Integration 
             ThymeLeaf
             Time Tracking
             UI Designer 
             UML Support
             Velocity support
             WebLogic Integration
             WebSphere Integration
             XSLT-Debugger 
             YAML 
             ZKM-Unscramble
       
       When you're done, only these should be checked:
             Coverage           
             Database Tools and SQL 
             EditorConfig 
             Git Integration 
             GitHub 
             Gradle 
             Grails 
             Groovy 
             Hibernate Support
             HTML Tools 
             I18n for Java 
             IntelliLang 
             Java Bytecode Decompiler 
             Java EE  all
             Java Server Page Integration 
             JavaScript Debugger 
             JavaScript Intention Power Pack 
             JavaScript Support 
             JSR45 Integration 
             LESS support 
             LiveEdit 
             Maven Interation 
             Maven Integration Extensions 
             Persistence Frameworks Support 
             Properties Support 
             QuirksMode 
             JUnit 
             Rest Client 
             Settings Repository 
             Spring - all
             Spy-js 
             Subversion Integration 
             Task Management 
             TestNG-J 
             Tomcat and TomEE Integration 
             XPathView + XSLT Support 
             W3c Validators
             
     l. Disable check for system updates
        1) Pull File / Settings 
        2) Select Apperance & Behavior -> System Settings -> Updates
           Uncheck "Automatically check updates for..."
           
             
    
