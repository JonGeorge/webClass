How to Force Tomcat to Use Your Logback.xml
-------------------------------------------

Add this to the Tomcat's JAVA_OPTS (in setenv.bat or setenv.sh)

-Dlogback.configurationFile=C:/path/to/logback.xml



Procedure
---------
 1. Modify the setenv.bat or setenv.sh
 
    If running on windows, modify your Tomcat/bin/setenv.bat       
       set JAVA_OPTS=%JAVA_OPTS% -Dlogback.configurationFile=C:\tools\logging\logback.xml
  
    If running on unix, modify your Tomcat/bin/setenv.sh
       export JAVA_OPTS=" $JAVA_OPTS -Dlogback.configurationFile=/path/to/logback.xml"
      
   
   
 2. Create this file:  c:\tools\logging\logback.xml
    NOTE:  There can be no spaces before <?xml....
 
    <?xml version="1.0" encoding="windows-1252" ?>
    <!DOCTYPE project>

    <configuration debug="true">
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>localLog %d{MM/dd/yyyy HH:mm:ss} %c %m%n</pattern>
            </encoder>
        </appender>

        <logger name="org.springframework" level="DEBUG" additivity="false">
            <appender-ref ref="CONSOLE"/>
        </logger>

        <logger name="app1" level="DEBUG" additivity="false">
            <appender-ref ref="CONSOLE"/>
        </logger>


        <root level="DEBUG">
            <appender-ref ref="CONSOLE"/>
        </root>

    </configuration>

    
 
  3. Verify it works
     a. In your web app's logback.xml, set the pattern start with webLog
        (in src/main/webapp/resources/logback.xml)
           <pattern>webLog %d{MM/dd/yyyy HH:mm:ss} %c %m%n</pattern>
           
           
     b. In your c:\tools\logging\logback.xml, set the pattern to start with localLog
           <pattern>localLog %d{MM/dd/yyyy HH:mm:ss} %c %m%n</pattern>
           
           
     c. Deploy your webapp to Tomcat
     
     d. You should see logging start with localLog      