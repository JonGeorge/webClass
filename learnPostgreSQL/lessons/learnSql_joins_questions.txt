Learn SQL:  Different types of joins
------------------------------------

Describe join types:
 1) Inner join holds the cross section between A and B
 2) Left  join holds all of A and cross-section
 3) Right join holds all of B and cross-section
 4) Full  join holds all of A, all of B, and cross section


References
----------
https://sqlbolt.com/lesson/select_queries_introduction



Lesson
------
 1. Create and populate this table:  users

        DROP table if exists users;
        CREATE TABLE users
        (
            id                INTEGER        PRIMARY KEY NOT NULL,
            version           INTEGER        NOT NULL,
            user_id           VARCHAR (256)  NOT NULL,
            dn                VARCHAR(256)   NOT NULL,
            full_name         VARCHAR(150)       NULL,
            email_address     VARCHAR(256)       NULL,
            phone_number      VARCHAR(30)        NULL
            last_login_date   TIMESTAMP      NOT NULL,
         );

        -- Insert 3 users
        insert into users(id, version, user_id, full_name, dn, last_login_date) values(1, 17, 'jsmith', 'John L Smith', 'CN=jsmith', now() - interval '1 day');
        insert into users(id, version, user_id, full_name, dn, last_login_date) values(2, 21, 'indyjones', 'Indiana Jones', 'CN=indyjones', now() - interval '3 days');
        insert into users(id, version, user_id, full_name, dn, last_login_date) values(3, 25, 'hsolo', 'Han Solo', 'CN=hsolo,OU=com.org', now() - interval '7 days');



 2. Create and populate this table:  sales

        DROP table if exists sales;
        CREATE TABLE sales
        (
            id                INTEGER       PRIMARY KEY NOT NULL,
            salesperson_id    INTEGER       NOT NULL,
            value             NUMERIC(12,2) NOT NULL,
            sell_date         TIMESTAMP     NOT NULL
        );

        insert into sales(id, salesperson_id, value, sell_date) values(100, 1, 5000, '2019-03-01');
        insert into sales(id, salesperson_id, value, sell_date) values(102, 1, 30000, '2019-03-02');
        insert into sales(id, salesperson_id, value, sell_date) values(104, 1, 10000, '2019-03-03');
        insert into sales(id, salesperson_id, value, sell_date) values(106, 2, 500, '2019-04-15');
        insert into sales(id, salesperson_id, value, sell_date) values(108, 2, 300, '2019-05-01');
        insert into sales(id, salesperson_id, value, sell_date) values(110, 56, 1000, '2019-06-01');

 3. Create the audit tables
        DROP table if exists users_aud;
        CREATE TABLE users_aud
        (
            id                INTEGER        NULL,
            user_id           VARCHAR (256)  NOT NULL,
            full_name         VARCHAR(150)       NULL,
            email_address     VARCHAR(256)       NULL,
            phone_number      VARCHAR(30)        NULL,
            rev               INTEGER        NOT NULL,   -- Transaction ID
            rev_type          INTEGER        NOT NULL,   -- 0 for create, 1 for update, 2 for delete
            timestamp         TIMESTAMP      NOT NULL,   -- Date/Time of the insert/update/delete operation
            username          VARCHAR(100)   NOT NULL    -- Person who performed insert/update/delete operation
        );

        DROP table if exists sales_aud;
        CREATE TABLE sales_aud
        (
            id                INTEGER        NULL,
            salesperson_id    INTEGER        NULL,
            value             NUMERIC(12,2)  NULL,
            sell_date         TIMESTAMP      NOT NULL,
            rev               INTEGER        NOT NULL,   -- Transaction ID
            rev_type          INTEGER        NOT NULL,   -- 0 for create, 1 for update, 2 for delete
            timestamp         TIMESTAMP      NOT NULL,   -- Date/Time of the insert/update/delete operation
            username          VARCHAR(100)   NOT NULL    -- Person who performed insert/update/delete operation
        );
