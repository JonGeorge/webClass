How to Vacuum Postgres Tables
------------------------------
PostgreSQL's VACUUM command has to process each table on a regular basis for several reasons:
 1. To recover or reuse disk space occupied by updated or deleted rows.
 2. To update data statistics used by the PostgreSQL query planner.
 3. To protect against loss of very old data due to transaction ID wraparound.


VACUUM FULL can reclaim more disk space but runs much more slowly (and requires exclusive lock on the table)
VACUUM      can run in parallel with production database operations

The usual goal of routine vacuuming is to do standard VACUUMs often enough to avoid needing VACUUM FULL.


Run Vacuum on a single table
----------------------------
psql> vacuum analyze <table name>;



Run Vacuum on all tables using copy+paste
------------------------------------------
psql> SELECT 'Vacuum analyze ' || table_name || ';'  FROM information_schema.tables WHERE table_schema='public' AND table_type='BASE TABLE';
copy the commands
paste the commands-in and run them


*OR*

Run Vacuum on all tables using sql file
---------------------------------------
 1. Generate sql script to vacuum all tables
    psql> \copy (SELECT 'Vacuum analyze ' || table_name || ';'  FROM information_schema.tables WHERE table_schema='public' AND table_type='BASE TABLE')  TO /tmp/vacuum.sql
    psql> \q

 2. Run the SQL script
    unix> psql < /tmp/vacuum.sql
          *or*
          psql -h localhost -U <username> -d <database> /tmp/vacuum.sql

 3. Cleanup
    unix> rm /tmp/vacuum.sql