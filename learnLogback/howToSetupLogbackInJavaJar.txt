How to Setup Logback in your Java JAR Project
---------------------------------------------

ASSUMPTIONS:
 1) You have Maven installed
 2) You have the mvn command in your PATH
 
 
Procedures
----------
1) Create a simple Mavan Java JAR projet in Eclipse
   a) Startup Eclipse
      
   b) Pull File / New Project... / Java Project
      Press <next>
      
   c) In the "Create a Java Project"
      Project Name:  playWithLogback
      Press <Finish>
    
2) Create a test/ directory
   a) Right-click on "playWithLogback" -> New -> Folder
   b) The Folder Name is test
   
    
3) Convert the Eclipse Project to a Maven Project
   a) Right-click on "playWithLogback" -> Configure -> Convert to Maven Project
   b) In the "Maven POM" popup
      Group Id:     playWithLogback
      Artifact ID:  playWithLogback
      Version:      0.0.1-SNAPSHOT
      Packaging:    jar
      Press <Finish>
      
4) Add logback dependencies
   a) Right-click on "playWithLogback" -> Maven -> Add Dependency
      Add this dependency
      
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.0.13</version>
        </dependency>
        
        Now, look at what Maven added to your project:
        Browse to playWithLogback -> Maven Dependencies
        -- You should see these 3 jar files
           1) logback-classic-1.0.13.jar
           2) logback-core-1.0.13.jar
           3) slf4j-api-1.7.5.jar
           
5) Create a sample class called Stuff
   Right-click on src -> new -> Class 
     Name:  Stuff
     Check the checkbox "public static void main(String[] args)
     Press <Finish>
    
    You should see this in your Stuff.java:
    
        package playWithLogback;

        public class Stuff {

            public static void main(String[] args)
            {
                // TODO Auto-generated method stub

            }

        }

    
6) Change your class so that it looks this:

        package playWithLogback;

        import org.slf4j.Logger;
        import org.slf4j.LoggerFactory;

        public class Stuff 
        {
            private static final Logger logger = LoggerFactory.getLogger(Stuff.class);
            
            public static void main(String[] args) 
            {
                logger.debug("main() started:  args.length={}", args.length );

                logger.debug("main() finished");
            }

        }

     
   
7) Create a resources/ directory  
   a) Right-click on playWithLogback -> New -> Source Folder
   b) Folder Name:  resources
      Press <Finish>
      
8) Create a logback.xml in your resources/ directory
   a) Right-click on resources -> New -> Other.... -> File
      Press <Next>

   b) File Name:  logback.xml
      Press <Finish>

   c) Copy this text to your logback.xml file

        <?xml version="1.0" encoding="windows-1252" ?>
        <configuration>
            <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
                <encoder>
                    <pattern>%d{MM/dd/yyyy HH:mm:ss} %c %m%n</pattern>
                </encoder>
            </appender>
            

            <logger name="playWithLogback" level="DEBUG" additivity="false">
                <appender-ref ref="CONSOLE"/>
            </logger>   
         
            
            <root level="DEBUG">
                <appender-ref ref="CONSOLE"/>
            </root>
            
        </configuration>   
           
      
9) Set a break point in your main and step through it
   a) Right-click on Stuff.java -> Debug As -> Java Application
   
      You should see this in your console
      
        06/21/2015 16:24:25 playWithLogback.Stuff main() started:  args.length=0
        06/21/2015 16:24:26 playWithLogback.Stuff main() finished

        
        
10) Now, create a java JAR with all of its dependencies
   a) Adjust your pom.xml so that it creates a special Java JAR with other libraries added int.
      Add this to your pom.xml between the <plugins>....</plugins>
      
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>

                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>

                    <archive>
                      <manifest>
                        <addClasspath>true</addClasspath>
                      </manifest>
                    </archive>
                </configuration>

                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
  
      Now, your pom.xml should look like this:
      
      <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>playWithLogback</groupId>
  <artifactId>playWithLogback</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <build>
    <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
   
    
     
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>

                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>

                    <archive>
                      <manifest>
                        <addClasspath>true</addClasspath>
                      </manifest>
                    </archive>
                </configuration>

                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

       </plugins>
          
    
  </build>
  
  <dependencies>
    <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.0.13</version>
    </dependency>
  </dependencies>
</project>
          
          
   a) Open a DOS window by pressing <Start><Run>CMD
      DOS> cd /d c:\tools\eclipse\workspace\playWithLogback
      DOS> mvn clean package
           
           Now, you should have just created a java JAR file here:
              .\target\playWithLogback-0.0.1-SNAPSHOT-jar-with-dependencies.jar
              
   b) Run your class
      DOS> java -cp  .\target\playWithLogback-0.0.1-SNAPSHOT-jar-with-dependencies.jar playWithLogback.Stuff
      
      You should see this:
      16:33:25.196 [main] DEBUG playWithLogback.Stuff - main() started:  args.length=0
      16:33:25.196 [main] DEBUG playWithLogback.Stuff - main() finished
      
    
Notice that the format is *not* the same

    