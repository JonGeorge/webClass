How to Read Property Values with Spring Injection
-------------------------------------------------

ASSUMPTIONS:
 A) Your web app uses Spring to read-in property values
 
 
 
 
Procedures
----------
1) Create a text file in WEB-INF -> classes 
   Right-click on WEB-INF -> classse -> New -> File
   Filename: app1.properties
   
   Copy this into your app1.properties file
   
   
    ###########################################################################
    # app1.properties
    #
    # Any line that starts with a '#' is a comment
    ###########################################################################
    application.mode=development
    app2.url=http://google.com/





2) Create a spring bean called "myProps" that will hold the property values from app1.properties
   NOTE:  This bean gets created when spring is initialized

   Add this to your applicationContext.xml file
   
   
       <bean id="myProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
           <property name="locations">
             <list>
               <value>classpath:app1.properties</value>
             </list>
          </property>
       </bean>
    
    
    
    

How to get property values?
---------------------------
        
A) Inject the myProps bean into your controller
   In your back-end java code, you can pull-out the values using this code:
   
    @Controller
    public class WelcomeController 
    {
        private final static Logger logger = LoggerFactory.getLogger(WelcomeController.class);
   
        @Resource(name = "myProps")
        private Properties myProps;
     
     
        /**********************************************************************
         * settingsShow()
         * 
         ***********************************************************************/
        @RequestMapping(value="/settings", method=RequestMethod.GET)
        public ModelAndView settingsShow( Model aModel)
        {
            logger.debug("settingsShow() started");
                    
            // Create a modelAndView object
            ModelAndView mav = new ModelAndView();
            
            // Show the welcome.jsp page
            mav.setViewName("settings.jsp");
            
            // Get the application.mode
            String sAppMode = (String) myProps.getProperty("application.mode");
            logger.debug("application.mode={}", sAppMode);
            
               
            logger.debug("settingsShow() finished");
            return mav;
        }
  }

 
 
 