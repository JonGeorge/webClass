How to Compile and Install a Native Hadoop File System (HDFS) on CentOS 6
-------------------------------------------------------------------------

Assumptions:
 A) You are root
 B) Your operating system is CentOS 6
 C) You want to setup Hadoop on the computer
 D) You want your hadoop to run out of this directory:  /tank/hadoop
 E) You want hadoop to use 4 cores and up to 4 GB of RAM
 F) You have Maven installed
 G) You have a Java JDK installed
 

 
Procedures
----------
 1. Verify that java is installed and in the PATH
    unix> java -version
          java version "1.7.0_55"
          Java(TM) SE Runtime Environment (build 1.7.0_55-b13)
          Java HotSpot(TM) 64-Bit Server VM (build 24.55-b03, mixed mode)



 2. Verify that mvn is installed and in the PATH
    unix >mvn -version
          Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T11:41:47-05:00)
          Maven home: /opt/apache-maven-3.3.9
          Java version: 1.7.0_55, vendor: Oracle Corporation
          Java home: /usr/java/jdk1.7.0_55/jre
          Default locale: en_US, platform encoding: UTF-8
          OS name: "linux", version: "2.6.32-573.18.1.el6.x86_64", arch: "amd64", family: "unix"



 3. Download & Install Hadoop 2.7.2 from source
    a. Install bzip2
       unix> sudo yum install bzip2-devel  bzip2-libs

    b. Install snappy-devel
       unix> sudo yum install snappy-devel
  
    c. Install cmake
       unix> sudo yum install cmake
       
    d. Download Protobuffers 2.5.0
       unix> su -
       unix> cd /opt
       unix> wget https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz
       unix> tar zxvf protobuf-2.5.0.tar.gz
       unix> rm protobuf-2.5.0.tar.gz
       unix> chown -R adam:adam /opt/protobuf-2.5.0
       
    e. Compile Protobuffers 
       unix> su - adam
       unix> cd /opt/protobuf-2.5.0
       unix> ./autogen.sh
       unix> ./configure --prefix=/opt/protobuf-2.5.0/distribution
       unix> make
       unix> make check
       unix> make install
       unix> sudo ldconfig
    
    f. Verify that all required tools are in the PATH
       unix> export PATH=${PATH}:/opt/protobuf-2.5.0/distribution/bin
       unix> protoc --version
             libprotoc 2.5.0
             
       unix> cmake --version
             cmake version 2.8.12.2
            
    g. Download Hadoop Source Code
       unix> su -
       unix> cd /opt
       unix> wget http://apache.claz.org/hadoop/common/hadoop-2.7.2/hadoop-2.7.2-src.tar.gz
       unix> tar zxvf hadoop-2.7.2-src.tar.gz
       unix> rm hadoop-2.7.2-src.tar.gz
       unix> chown -R adam:adam /opt/hadoop-2.7.2-src
       unix> exit

    h. Compile Hadoop Source Code
       NOTE:  We need to have protoc in the PATH
       unix> su - adam
       unix> export PATH=${PATH}:/opt/protobuf-2.5.0/distribution/bin
 
       unix> cd /opt/hadoop-2.7.2-src/
       unix> mvn clean package -Pdist,native -DskipTests -Dtar
       
             The newly built libraries should be here:
                  /opt/hadoop-2.7.2-src/hadoop-dist/target/hadoop-2.7.2/lib/native
    
  
    i. Install Hadoop 
       unix> su - 
       unix> cp -r /opt/hadoop-2.7.2-src/hadoop-dist/target/hadoop-2.7.2   /opt/
       unix> chmod -R ugo+r /opt/hadoop-2.7.2
             -- Now, hadoop is installed to /opt/hadoop-2.7.2/
             
             
    j. Run the hadoop 'chknative' command to verify that native libraries are found
       unix> su - adam
       unix> hadoop version
             Hadoop 2.7.2
             Subversion Unknown -r Unknown
             Compiled by adam on 2016-03-30T02:49Z
             Compiled with protoc 2.5.0
             From source with checksum d0fda26633fa762bff87ec759ebe689c
             This command was run using /opt/hadoop-2.7.2/share/hadoop/common/hadoop-common-2.7.2.jar
       
       unix> export HADOOP_OPTS=-Djava.library.path=/opt/hadoop-2.7.2/lib/native
       unix> hadoop checknative -a
             16/03/29 23:46:04 INFO bzip2.Bzip2Factory: Successfully loaded & initialized native-bzip2 library system-native
             16/03/29 23:46:04 INFO zlib.ZlibFactory: Successfully loaded & initialized native-zlib library
             Native library checking:
             hadoop:  true /opt/hadoop-2.7.2/lib/native/libhadoop.so.1.0.0
             zlib:    true /lib64/libz.so.1
             snappy:  true /usr/lib64/libsnappy.so.1
             lz4:     true revision:99
             bzip2:   true /lib64/libbz2.so.1
             openssl: true /usr/lib64/libcrypto.so


    
    k. Update hadoop-env.sh to add the native library path to HADOOP_OPTS
       unix> su -
       unix> cd /opt/hadoop-2.7.2/etc/hadoop
       unix> vi hadoop-env.sh
       
             # Add this line
             export HADOOP_OPTS="$HADOOP_OPTS -Djava.library.path=/opt/hadoop-2.7.2/lib/native"
     
     
    l. Update yarn-env.sh to add the native library path to YARN_OPTS
       unix> su -
       unix> cd /opt/hadoop-2.7.2/etc/hadoop
       unix> vi yarn-env.sh
       
             # Add this line
             export YARN_OPTS="$YARN_OPTS -Djava.library.path=/opt/hadoop-2.7.2/lib/native"


     
    How to fix libjvm.so not found
    ------------------------------
    unix> cd /opt/hadoop-2.7.2/lib/native
    unix> ldd ./libhadoop.so.1.0.0 
            linux-vdso.so.1 =>  (0x00007ffc109dd000)
            libdl.so.2 => /lib64/libdl.so.2 (0x00007feff66a9000)
            libjvm.so => not found
            libc.so.6 => /lib64/libc.so.6 (0x00007feff6314000)
            /lib64/ld-linux-x86-64.so.2 (0x000000395d000000)
    
    unix> locate libjvm.so
            /usr/java/jdk1.7.0_55/jre/lib/amd64/server/libjvm.so
    
    
    unix> sudo ln -s /usr/java/jdk1.7.0_55/jre/lib/amd64/server/libjvm.so /lib64/libjvm.so
     
       
        
       
       
 4. Update your environment by setting HADOOP_HOME and adding it to the path
    a. unix> vi ~/.bashrc
       
       NOTE:  Add these to your ~/.bashrc

       export HADOOP_HOME=/opt/hadoop-2.7.2
       export HADOOP_INSTALL=$HADOOP_HOME
       export HADOOP_MAPRED_HOME=$HADOOP_HOME
       export HADOOP_COMMON_HOME=$HADOOP_HOME
       export HADOOP_HDFS_HOME=$HADOOP_HOME
       export YARN_HOME=$HADOOP_HOME
       export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
       export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin
   
    b. Verify that the hadoop command is found in your PATH and is native
       1) Open a new terminal
       2) Run these commands
          unix> hadoop version
                Hadoop 2.7.2
                Subversion https://git-wip-us.apache.org/repos/asf/hadoop.git -r b165c4fe8a74265c792ce23f546c64604acf0e41
                Compiled by jenkins on 2016-01-26T00:08Z
                Compiled with protoc 2.5.0
                From source with checksum d0fda26633fa762bff87ec759ebe689c
                This command was run using /opt/hadoop-2.7.2/share/hadoop/common/hadoop-common-2.7.2.jar

          unix> hadoop checknative -a
                16/03/29 23:46:04 INFO bzip2.Bzip2Factory: Successfully loaded & initialized native-bzip2 library system-native
                16/03/29 23:46:04 INFO zlib.ZlibFactory: Successfully loaded & initialized native-zlib library
                Native library checking:
                hadoop:  true /opt/hadoop-2.7.2/lib/native/libhadoop.so.1.0.0
                zlib:    true /lib64/libz.so.1
                snappy:  true /usr/lib64/libsnappy.so.1
                lz4:     true revision:99
                bzip2:   true /lib64/libbz2.so.1
                openssl: true /usr/lib64/libcrypto.so


 5. Create a hadoop account so it can ssh to localhost [without prompting for password]
    a. Create a new user:  hadoop
       unix> su -
       unix> adduser hadoop --home /home/hadoop --create-home --system


    b. Setup the hadoop account so it can ssh to localhost [without prompting for password]\
       unix> su - hadoop
   
       unix> ssh-keygen -t rsa
             Enter file in which to save the key (/home/hadoop/.ssh/id_rsa):   <press enter>
             
             Enter passphrase (empty for no passphrase):    <press enter>
             Enter same passphrase again:                   <press enter>
 
       unix> cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
       unix> chmod 0600 ~/.ssh/authorized_keys
 
 
    c. Verify that hadoop can ssh to localhost without prompting for a password
       NOTE:  This ssh command should *not*  ask for password but first time it will prompt for adding RSA to the list of known hosts.
       unix> ssh localhost
       
       The authenticity of host 'localhost (::1)' can't be established.
       RSA key fingerprint is 9b:35:ab:51:bc:6e:92:ff:a5:4f:2d:a9:11:d5:36:ae.
       Are you sure you want to continue connecting (yes/no)?                    yes
     

    d. Add HADOOP to the hadoop user's path
       unix> vi /home/hadoop/.bashrc
       
       NOTE:  Add these to the hadoop's ~/.bashrc

       export HADOOP_HOME=/opt/hadoop-2.7.2
       export HADOOP_INSTALL=$HADOOP_HOME
       export HADOOP_MAPRED_HOME=$HADOOP_HOME
       export HADOOP_COMMON_HOME=$HADOOP_HOME
       export HADOOP_HDFS_HOME=$HADOOP_HOME
       export YARN_HOME=$HADOOP_HOME
       export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
       export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin
       
       # Setup JAVA_HOME to use Java 1.7 and add it to the path
       export JAVA_HOME=/usr/java/jdk1.7.0_55
       export PATH=${JAVA_HOME}/bin:$PATH


    e. Make sure the hadoop account has permission to write to /opt/hadoop-2.7.2/logs/
       unix> su - 
       unix> mkdir -p /opt/hadoop-2.7.2/logs
       unix> chown -R hadoop:hadoop /opt/hadoop-2.7.2/logs

       

 6. Configure Hadoop to run in pseudo-distributed mode
    NOTE:  We are setting hadoop's temp directory
    
    a. Create this file:  core-site.xml
       unix> cd /opt/hadoop-2.7.2/etc/hadoop
       unix> vi core-site.xml
      
        <?xml version="1.0" encoding="UTF-8"?>
        <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>        
            <configuration>
                <property>
                    <name>fs.defaultFS</name>
                    <value>hdfs://localhost:9000</value>
                </property>
                <property>
                    <name>hadoop.tmp.dir</name>
                    <value>/tank/hadoop/tmp</value>
                </property>
            </configuration>
   
     
    b. Edit this file:  hdfs-site.xml
       Note:  Create namenode and datanode directory under /tank/hadoop
       Note:  Set the datanode to listen on port 50001
      
       unix> cd /opt/hadoop-2.7.2/etc/hadoop
       unix> vi hdfs-site.xml
      
           
       <?xml version="1.0" encoding="UTF-8"?>
       <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
            <configuration>
                <property>
                    <name>dfs.replication</name>
                    <value>1</value>
                </property>
                <property>
                    <name>dfs.namenode.name.dir</name>
                    <value>/tank/hadoop/namenode</value>
                </property>
                <property>
                    <name>dfs.datanode.data.dir</name>
                    <value>/tank/hadoop/datanode</value>
                </property>

                <property>
                    <name>dfs.datanode.address</name>
                    <value>localhost:50001</value>
                </property>
                
            </configuration>
      
      
    c. Edit this file:  yarn-site.xml
       NOTE:  yarn.nodemanager.resource.memory-mb=4096 MB (or 4 GB) -- that is a ceiling on how much memory hadoop will use
       NOTE:  yarn.nodemanager.resource.cpu-vcores=4  (to use 4 of the total 4 cores)
       NOTE:  yarn.scheduler.minimum-allocation-mb=1024 so that Hadoop only allocates 4 vcores (4096/4 = 1024)
       
       unix> cd /opt/hadoop-2.7.2/etc/hadoop
       unix> vi yarn-site.xml

        <?xml version="1.0"?>
         <configuration>
            <property>
               <name>yarn.nodemanager.aux-services</name>
               <value>mapreduce_shuffle</value>
            </property>
            <property>
               <name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>
               <value>org.apache.hadoop.mapred.ShuffleHandler</value>
            </property>
           <property>
               <name>yarn.nodemanager.resource.memory-mb</name>
               <value>4096</value>
            </property>
            <property>
               <name>yarn.scheduler.minimum-allocation-mb</name>
               <value>1024</value>
            </property>
            <property>
               <name>yarn.scheduler.maximum-allocation-mb</name>
               <value>4096</value>
            </property>
            <property>
               <name>yarn.nodemanager.resource.cpu-vcores</name>
               <value>4</value>
            </property>
            <property>
               <name>yarn.scheduler.minimum-allocation-vcores</name>
               <value>1</value>
            </property>
            <property>
               <name>yarn.scheduler.increment-allocation-vcores</name>
               <value>1</value>
            </property>
            <property>
               <name>yarn.scheduler.maximum-allocation-vcores</name>
               <value>4</value>
            </property>
            <property>
               <name>yarn.application.classpath</name>
               <value>
                    $HADOOP_HOME/etc/hadoop,
                    $HADOOP_HOME/share/hadoop/common/*,
                    $HADOOP_HOME/share/hadoop/common/lib/*,
                    $HADOOP_HOME/share/hadoop/mapreduce/*,
                    $HADOOP_HOME/share/hadoop/mapreduce/lib/*,
                    $HADOOP_HOME/share/hadoop/hdfs/*,
                    $HADOOP_HOME/share/hadoop/hdfs/lib/*,          
                    $HADOOP_HOME/share/hadoop/yarn/*,
                    $HADOOP_HOME/share/hadoop/yarn/lib/*
               </value>
            </property>
        </configuration> 
                 

    d. Create this file:  mapred-site.xml
       unix> cd /opt/hadoop-2.7.2/etc/hadoop
       unix> cp mapred-site.xml.template mapred-site.xml
       unix> vi mapred-site.xml
       
             <?xml version="1.0"?>
             <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
             
             <configuration>
                <property>
                   <name>mapreduce.framework.name</name>
                   <value>yarn</value>
                </property>
                <property>
                   <name>yarn.app.mapreduce.am.staging-dir</name>
                   <value>/user</value>
                   <description>The staging dir (inside HDFS) that is  used while submitting jobs.</description>
                </property>
             </configuration>    
    
    
    e. Create this file:  slaves
       unix> cd /opt/hadoop-2.7.2/etc/hadoop
       unix> echo localhost > slaves
       
       


 7. Format the Name Node
    unix> su -
    unix> rm -rf /tank/hadoop
    unix> mkdir -p /tank/hadoop
    unix> chown -R hadoop:hadoop /tank/hadoop
    
    unix> su - hadoop
    unix> hdfs namenode -format

    You should see this:
    
    16/03/29 19:42:42 INFO namenode.NameNode: STARTUP_MSG: 
    /************************************************************
    STARTUP_MSG: Starting NameNode
    STARTUP_MSG:   host = centosVM/127.0.0.1
    STARTUP_MSG:   args = [-format]
    STARTUP_MSG:   version = 2.7.2
    STARTUP_MSG:   classpath = /opt/hadoop-2.7.2/etc/hadoop:/opt/hadoop-2.7.2/share/hadoop/common/lib/apacheds-kerberos-codec-2.0.0-M15.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/htrace-core-3.1.0-incubating.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/hadoop-annotations-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jackson-mapper-asl-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jaxb-api-2.2.2.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/hamcrest-core-1.3.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jackson-jaxrs-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/xz-1.0.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jaxb-impl-2.2.3-1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-codec-1.4.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-httpclient-3.1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/gson-2.2.4.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/avro-1.7.4.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jsr305-3.0.0.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/servlet-api-2.5.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/hadoop-auth-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/stax-api-1.0-2.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/slf4j-api-1.7.10.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jsch-0.1.42.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/httpclient-4.2.5.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-io-2.4.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/log4j-1.2.17.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-beanutils-1.7.0.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/xmlenc-0.52.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-collections-3.2.2.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/java-xmlbuilder-0.4.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/paranamer-2.3.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jersey-server-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/zookeeper-3.4.6.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-net-3.1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-math3-3.1.1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/netty-3.6.2.Final.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jettison-1.1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jets3t-0.9.0.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-beanutils-core-1.8.0.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/snappy-java-1.0.4.1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/asm-3.2.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jersey-core-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/guava-11.0.2.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/curator-framework-2.7.1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-digester-1.8.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jackson-xc-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/apacheds-i18n-2.0.0-M15.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/mockito-all-1.8.5.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/api-asn1-api-1.0.0-M20.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jersey-json-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-cli-1.2.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/curator-recipes-2.7.1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/httpcore-4.2.5.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jsp-api-2.1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-compress-1.4.1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/curator-client-2.7.1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-logging-1.1.3.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/api-util-1.0.0-M20.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/activation-1.1.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/junit-4.11.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jetty-6.1.26.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/protobuf-java-2.5.0.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jackson-core-asl-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/jetty-util-6.1.26.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-lang-2.6.jar:/opt/hadoop-2.7.2/share/hadoop/common/lib/commons-configuration-1.6.jar:/opt/hadoop-2.7.2/share/hadoop/common/hadoop-common-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/common/hadoop-nfs-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/common/hadoop-common-2.7.2-tests.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/htrace-core-3.1.0-incubating.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/jackson-mapper-asl-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/commons-codec-1.4.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/jsr305-3.0.0.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/servlet-api-2.5.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/commons-io-2.4.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/log4j-1.2.17.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/xmlenc-0.52.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/jersey-server-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/commons-daemon-1.0.13.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/netty-3.6.2.Final.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/asm-3.2.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/jersey-core-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/guava-11.0.2.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/commons-cli-1.2.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/xercesImpl-2.9.1.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/commons-logging-1.1.3.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/xml-apis-1.3.04.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/jetty-6.1.26.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/protobuf-java-2.5.0.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/jackson-core-asl-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/jetty-util-6.1.26.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/leveldbjni-all-1.8.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/commons-lang-2.6.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/lib/netty-all-4.0.23.Final.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/hadoop-hdfs-nfs-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/hadoop-hdfs-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/hdfs/hadoop-hdfs-2.7.2-tests.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jackson-mapper-asl-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jaxb-api-2.2.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jackson-jaxrs-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/xz-1.0.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jaxb-impl-2.2.3-1.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/commons-codec-1.4.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/guice-servlet-3.0.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jsr305-3.0.0.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/servlet-api-2.5.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/stax-api-1.0-2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/commons-io-2.4.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/log4j-1.2.17.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/commons-collections-3.2.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jersey-server-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/zookeeper-3.4.6.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/javax.inject-1.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/guice-3.0.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/netty-3.6.2.Final.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jettison-1.1.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/asm-3.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jersey-core-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/guava-11.0.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jersey-client-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/aopalliance-1.0.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jackson-xc-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jersey-json-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/commons-cli-1.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/commons-compress-1.4.1.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/commons-logging-1.1.3.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jersey-guice-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/activation-1.1.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jetty-6.1.26.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/protobuf-java-2.5.0.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jackson-core-asl-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/jetty-util-6.1.26.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/leveldbjni-all-1.8.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/commons-lang-2.6.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/lib/zookeeper-3.4.6-tests.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-server-sharedcachemanager-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-server-nodemanager-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-api-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-server-web-proxy-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-server-tests-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-client-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-applications-distributedshell-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-applications-unmanaged-am-launcher-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-server-applicationhistoryservice-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-common-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-server-resourcemanager-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-server-common-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/yarn/hadoop-yarn-registry-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/hadoop-annotations-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/jackson-mapper-asl-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/hamcrest-core-1.3.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/xz-1.0.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/guice-servlet-3.0.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/avro-1.7.4.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/commons-io-2.4.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/log4j-1.2.17.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/paranamer-2.3.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/jersey-server-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/javax.inject-1.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/guice-3.0.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/netty-3.6.2.Final.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/snappy-java-1.0.4.1.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/asm-3.2.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/jersey-core-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/aopalliance-1.0.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/commons-compress-1.4.1.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/jersey-guice-1.9.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/junit-4.11.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/protobuf-java-2.5.0.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/jackson-core-asl-1.9.13.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/lib/leveldbjni-all-1.8.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-client-core-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-client-shuffle-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-client-app-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-client-hs-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-client-common-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-client-hs-plugins-2.7.2.jar:/opt/hadoop-2.7.2/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-2.7.2-tests.jar:/opt/hadoop-2.7.2/contrib/capacity-scheduler/*.jar
    STARTUP_MSG:   build = https://git-wip-us.apache.org/repos/asf/hadoop.git -r b165c4fe8a74265c792ce23f546c64604acf0e41; compiled by 'jenkins' on 2016-01-26T00:08Z
    STARTUP_MSG:   java = 1.7.0_55
    ************************************************************/
    16/03/29 19:42:42 INFO namenode.NameNode: registered UNIX signal handlers for [TERM, HUP, INT]
    16/03/29 19:42:42 INFO namenode.NameNode: createNameNode [-format]
    16/03/29 19:42:43 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
    16/03/29 19:42:44 WARN common.Util: Path /tank/hadoop/namenode should be specified as a URI in configuration files. Please update hdfs configuration.
    16/03/29 19:42:44 WARN common.Util: Path /tank/hadoop/namenode should be specified as a URI in configuration files. Please update hdfs configuration.
    Formatting using clusterid: CID-430a0170-ccf5-4520-8123-94108c904655
    16/03/29 19:42:44 INFO namenode.FSNamesystem: No KeyProvider found.
    16/03/29 19:42:44 INFO namenode.FSNamesystem: fsLock is fair:true
    16/03/29 19:42:45 INFO blockmanagement.DatanodeManager: dfs.block.invalidate.limit=1000
    16/03/29 19:42:45 INFO blockmanagement.DatanodeManager: dfs.namenode.datanode.registration.ip-hostname-check=true
    16/03/29 19:42:45 INFO blockmanagement.BlockManager: dfs.namenode.startup.delay.block.deletion.sec is set to 000:00:00:00.000
    16/03/29 19:42:45 INFO blockmanagement.BlockManager: The block deletion will start around 2016 Mar 29 19:42:45
    16/03/29 19:42:45 INFO util.GSet: Computing capacity for map BlocksMap
    16/03/29 19:42:45 INFO util.GSet: VM type       = 64-bit
    16/03/29 19:42:45 INFO util.GSet: 2.0% max memory 889 MB = 17.8 MB
    16/03/29 19:42:45 INFO util.GSet: capacity      = 2^21 = 2097152 entries
    16/03/29 19:42:45 INFO blockmanagement.BlockManager: dfs.block.access.token.enable=false
    16/03/29 19:42:45 INFO blockmanagement.BlockManager: defaultReplication         = 1
    16/03/29 19:42:45 INFO blockmanagement.BlockManager: maxReplication             = 512
    16/03/29 19:42:45 INFO blockmanagement.BlockManager: minReplication             = 1
    16/03/29 19:42:45 INFO blockmanagement.BlockManager: maxReplicationStreams      = 2
    16/03/29 19:42:45 INFO blockmanagement.BlockManager: replicationRecheckInterval = 3000
    16/03/29 19:42:45 INFO blockmanagement.BlockManager: encryptDataTransfer        = false
    16/03/29 19:42:45 INFO blockmanagement.BlockManager: maxNumBlocksToLog          = 1000
    16/03/29 19:42:45 INFO namenode.FSNamesystem: fsOwner             = hadoop (auth:SIMPLE)
    16/03/29 19:42:45 INFO namenode.FSNamesystem: supergroup          = supergroup
    16/03/29 19:42:45 INFO namenode.FSNamesystem: isPermissionEnabled = true
    16/03/29 19:42:45 INFO namenode.FSNamesystem: HA Enabled: false
    16/03/29 19:42:45 INFO namenode.FSNamesystem: Append Enabled: true
    16/03/29 19:42:45 INFO util.GSet: Computing capacity for map INodeMap
    16/03/29 19:42:45 INFO util.GSet: VM type       = 64-bit
    16/03/29 19:42:45 INFO util.GSet: 1.0% max memory 889 MB = 8.9 MB
    16/03/29 19:42:45 INFO util.GSet: capacity      = 2^20 = 1048576 entries
    16/03/29 19:42:45 INFO namenode.FSDirectory: ACLs enabled? false
    16/03/29 19:42:45 INFO namenode.FSDirectory: XAttrs enabled? true
    16/03/29 19:42:45 INFO namenode.FSDirectory: Maximum size of an xattr: 16384
    16/03/29 19:42:45 INFO namenode.NameNode: Caching file names occuring more than 10 times
    16/03/29 19:42:45 INFO util.GSet: Computing capacity for map cachedBlocks
    16/03/29 19:42:45 INFO util.GSet: VM type       = 64-bit
    16/03/29 19:42:45 INFO util.GSet: 0.25% max memory 889 MB = 2.2 MB
    16/03/29 19:42:45 INFO util.GSet: capacity      = 2^18 = 262144 entries
    16/03/29 19:42:45 INFO namenode.FSNamesystem: dfs.namenode.safemode.threshold-pct = 0.9990000128746033
    16/03/29 19:42:45 INFO namenode.FSNamesystem: dfs.namenode.safemode.min.datanodes = 0
    16/03/29 19:42:45 INFO namenode.FSNamesystem: dfs.namenode.safemode.extension     = 30000
    16/03/29 19:42:45 INFO metrics.TopMetrics: NNTop conf: dfs.namenode.top.window.num.buckets = 10
    16/03/29 19:42:45 INFO metrics.TopMetrics: NNTop conf: dfs.namenode.top.num.users = 10
    16/03/29 19:42:45 INFO metrics.TopMetrics: NNTop conf: dfs.namenode.top.windows.minutes = 1,5,25
    16/03/29 19:42:45 INFO namenode.FSNamesystem: Retry cache on namenode is enabled
    16/03/29 19:42:45 INFO namenode.FSNamesystem: Retry cache will use 0.03 of total heap and retry cache entry expiry time is 600000 millis
    16/03/29 19:42:45 INFO util.GSet: Computing capacity for map NameNodeRetryCache
    16/03/29 19:42:45 INFO util.GSet: VM type       = 64-bit
    16/03/29 19:42:45 INFO util.GSet: 0.029999999329447746% max memory 889 MB = 273.1 KB
    16/03/29 19:42:45 INFO util.GSet: capacity      = 2^15 = 32768 entries
    16/03/29 19:42:46 INFO namenode.FSImage: Allocated new BlockPoolId: BP-1391072287-127.0.0.1-1459294965994
    16/03/29 19:42:46 INFO common.Storage: Storage directory /tank/hadoop/namenode has been successfully formatted.
    16/03/29 19:42:46 INFO namenode.NNStorageRetentionManager: Going to retain 1 images with txid >= 0
    16/03/29 19:42:46 INFO util.ExitUtil: Exiting with status 0
    16/03/29 19:42:46 INFO namenode.NameNode: SHUTDOWN_MSG: 
    /************************************************************
    SHUTDOWN_MSG: Shutting down NameNode at centosVM/127.0.0.1
    ************************************************************/



 8. Start HDFS (Start the Name Node and Data Node)
    unix> su - hadoop
    unix> start-dfs.sh
    
    16/03/29 19:46:17 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
    Starting namenodes on [localhost]
    localhost: starting namenode, logging to /opt/hadoop-2.7.2/logs/hadoop-hadoop-namenode-centosVM.out
    localhost: starting datanode, logging to /opt/hadoop-2.7.2/logs/hadoop-hadoop-datanode-centosVM.out
    Starting secondary namenodes [0.0.0.0]
    The authenticity of host '0.0.0.0 (0.0.0.0)' can't be established.
    RSA key fingerprint is db:94:41:dd:d9:03:c5:67:38:04:87:2c:25:75:53:d6.
    Are you sure you want to continue connecting (yes/no)? yes
    0.0.0.0: Warning: Permanently added '0.0.0.0' (RSA) to the list of known hosts.
    0.0.0.0: starting secondarynamenode, logging to /opt/hadoop-2.7.2/logs/hadoop-hadoop-secondarynamenode-centosVM.out
    16/03/29 19:46:38 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable



 9. Start MapReduce aka YARN (Resource Manager and Node Manager)
    unix> su - hadoop
    unix> start-yarn.sh

    starting yarn daemons
    starting resourcemanager, logging to /opt/hadoop-2.7.2/logs/yarn-hadoop-resourcemanager-centosVM.out
    localhost: starting nodemanager, logging to /opt/hadoop-2.7.2/logs/yarn-hadoop-nodemanager-centosVM.out



10. Start the History server [that listens on port 19888]
    unix> su - hadoop
    unix> mr-jobhistory-daemon.sh --config $HADOOP_HOME/etc/hadoop start historyserver



11. Verify it is running
    a. Go to the NodeManager's url:
       http://localhost:8042/
       *OR*
       unix> telnet localhost 8042    # you should be connected
       
    b. Go to the Namenode's website
       http://localhost:50070  
       *OR*
       unix> telnet localhost 50070   # you should be connected

    c. Go to the Hadoop-Application site
       http://localhost:8088
       *OR*
       unix> telnet localhost 8088    # you should be connected
       
    d. Verify that you can create a directory within your HDFS
       1) List what is in your HDFS top directory
          unix> hadoop fs -ls /    
                NOTE:  It should display nothing
         
       2) Create a directory called /tmp in HDFS
          unix> hadoop fs -mkdir /tmp
       
       3) List what is in your HDFS top directory
          unix> hadoop fs -ls /
                Found 1 items
                drwxr-xr-x   - hdfs supergroup          0 2016-03-28 17:38 /tmp

    e. Verify that you can create a file within your HDFS
       1) Create a file called c:\temp\stuff.txt
          unix> echo "Hello There" > /tmp/stuff.txt
          
       2) Use the hadoop command-line to insert this file into your HDFS
          unix> hadoop fs -mkdir /tmp
          unix> hadoop fs -put /tmp/stuff.txt /tmp/stuff.txt   
 
          unix> hadoop fs -ls /tmp
                Found 1 items
                -rw-r--r--   1 hdfs supergroup         12 2016-03-28 17:41 /tmp/stuff.txt
 
       3) Use the hadoop command-line to pull the HDFS file and copt to your local file system
          unix> hadoop fs -get /tmp/stuff.txt /tmp/stuff2.txt
          
          NOTE:  The /tmp/stuff.txt and /tmp/stuff2.txt files should be identical
          unix> diff /tmp/stuff.txt /tmp/stuff2.txt

       4) Display the content's of a file located in HDFS
          unix> hadoop fs -cat /tmp/stuff.txt

       5) Delete the /tmp directory located in the HDFS
          unix> hadoop fs -rm -r -f /tmp



12. Setup Hadoop to start-up on boot-up
    a. Tell CentOS to run start-dfs.sh and start-yarn.sh on startup
       unix> su -
       unix> cd /etc/rc.d
       unix> cp rc.local rc.local.ORIG
       unix> vi rc.local
    
         # Add this to the file
         
         # Startup Hadoop HDFS and Yarn
         su - hadoop -c "/opt/hadoop-2.7.2/sbin/start-dfs.sh; /opt/hadoop-2.7.2/sbin/start-yarn.sh" &
 
    b. Verify it by rebooting the box
       unix> su -
       unix> reboot
            
             # Wait for it to reboot
       
       unix> sudo su - hadoop
       unix> hadoop fs -ls /     
             -- The hadoop filesystem should be up
       
                    
         
  


How to Kill a Hadoop Job via Command-Line
-----------------------------------------
 unix> yarn application -list
       -- Look for the applicationid
       
 unix> yarn application -kill <application-Id>
 


 
 
How to Solve Warning:  util.NativeCodeLoader: Unable to load native-hadoop library for your platform
----------------------------------------------------------------------------------------------------
SYMPTOM:  I get this warning when running the hadoop commands
    unix> hadoop fs -ls /
    16/03/29 19:54:29 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
    
    
REAL PROBLEM: 
    Your Centos comes with GNU libc 2.12
    Your hadoop binaries were compiled with GNU libc 2.14
    
    
    # Run the ldd command to see the problem          
    unix> ldd /opt/hadoop-2.7.2/lib/native/libhadoop.so.1.0.0
    
        /opt/hadoop-2.7.2/lib/native/libhadoop.so.1.0.0: /lib64/libc.so.6: version `GLIBC_2.14' not found (required by /opt/hadoop-2.7.2/lib/native/libhadoop.so.1.0.0)
        linux-vdso.so.1 =>  (0x00007fff473a4000)
        libdl.so.2 => /lib64/libdl.so.2 (0x00007f93d5adb000)
        libc.so.6 => /lib64/libc.so.6 (0x00007f93d5746000)
        /lib64/ld-linux-x86-64.so.2 (0x000000395d000000)
    
    # Run ldd --version to see the version of GNU libc on your box (2.12)
    unix> ldd --version
    ldd (GNU libc) 2.12
    Copyright (C) 2010 Free Software Foundation, Inc.
    This is free software; see the source for copying conditions.  There is NO
    warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    Written by Roland McGrath and Ulrich Drepper.



SOLUTIONS:
 1) Ignore the warning
 2) Compile hadoop binaries
 
