Lesson:  Setup the "Add Report" Page
------------------------------------
In this lesson, you will setup a basic "Add Report" page with buttons and dropdowns



Procedure
---------
 1. Create a simple "Add Report" page with text boxes and dropdowns
    a. Go to webapp/src/main/resources/public/resources/features/add_report/index.html

    b. Replace the index.html with this
         <div class="feature">

             <header layout="row" layout-align="space-between center">
                 <!-- Page Title -->
                 <div class="md-headline"><i class="fas fa-file-alt"></i> Add Reports</div>
             </header>

             <div layout="row" style="margin-top: 20px">
                 <md-input-container class="md-block" flex-gt-sm>
                     <label>Display Name</label>

                     <!-- Insert a text box -->
                     <input placeholder="Enter Display Name" data-ng-model="addReportVM.new.display_name">
                 </md-input-container>
             </div>

             <div layout="row">
                 <md-input-container class="md-block" flex-gt-sm>
                     <label>Priority</label>

                     <!-- Insert a traditional drop-down (you can select only *ONE* option -->
                     <select placeholder="Select Priority" name="priority" ng-model="addReportVM.new.priority">
                         <option value="">-Select Priority-</option>
                         <option value="1">Low</option>
                         <option value="2">Medium</option>
                         <option value="3">High</option>
                     </select>
                 </md-input-container>
             </div>

             <div layout="row">
                 <md-input-container class="md-block" flex-gt-sm>
                     <label>Report Type</label>

                     <!-- Insert a material design drop-down (you can select only *ONE* options) -->
                     <md-select placeholder="Select Report Type" name="report_type" ng-model="addReportVM.new.report_type">
                         <md-option value="100">report type 1</md-option>
                         <md-option value="101">report type 2</md-option>
                         <md-option value="102">report type 3</md-option>
                     </md-select>
                 </md-input-container>
             </div>

             <div layout="row">
                 <md-input-container class="md-block" flex-gt-sm>
                     <label>Report Source</label>

                     <!-- Insert a material design drop-down (you can select *MULTIPLE* options) -->
                     <md-select MULTIPLE placeholder="Select Report Source" name="report_source" ng-model="addReportVM.new.report_source">
                         <md-option value="1000">Canada</md-option>
                         <md-option value="1001">Denmark</md-option>
                         <md-option value="1002">France</md-option>
                         <md-option value="1003">Germany</md-option>
                         <md-option value="1004">Mexico</md-option>
                         <md-option value="1005">Peru</md-option>
                         <md-option value="1006">Brazil</md-option>
                         <md-option value="1007">Uraguay</md-option>
                         <md-option value="1008">Argentina</md-option>
                         <md-option value="1009">Chile</md-option>
                         <md-option value="1010">United States</md-option>
                         <md-option value="1011">United Kingdom</md-option>
                     </md-select>
                 </md-input-container>
             </div>

         </div>



 2. Setup main.controller.js for the "Add Report" page
    a. Go to webapp/src/main/resources/public/resources/features/add_report/main.controller.js

    b. Replace the main.controller.js with this

        (function(){
            angular.module('app.features')
                .controller('addReport', ['$timeout', Callback])

            function Callback($timeout) {

                let addReportVM = this;

                window.document.title = "Add Report | APP1";


                // Clear-out the report fields on page load
                clearReport();

                addReportVM.$onInit = function() {
                    console.log('addReport onInit() started.');
                    console.log('addReport onInit() finished.');
                };

                console.log('addReport controller finished.');


                function clearReport() {
                    console.log('clearReport() started.');
                    addReportVM.new = { };
                }

            }
        })();


 3. Verify the page shows-up
    a. Activate your webapp with the debugger
    b. Open a browser
    c. Connect to http://localhost:8080/app1
    d. Go to "Add Report"
       *or*
       Go to http://localhost:8080/app1/page/reports/add
        -- You should see a basic form with buttons


 4. Add a "Reset" and "Save" buttons to the bottom of the index.html
    a. Add this div to the bottom of the index.html
             <div layout="row" layout-align="center">

                 <!-- Reset Button -->
                 <md-button class="md-primary md-raised" data-ng-click="addReportVM.reset()" aria-label="Clear Report Fields">
                     <md-icon class="fas fa-backspace"></md-icon>
                     <md-tooltip="Reset"></md-tooltip>
                     Reset
                 </md-button>


                 <!-- Save Button -->
                 <md-button class="md-primary md-raised" data-ng-click="addReportVM.save()" aria-label="Add Report">
                     <md-icon class="fas fa-plus"></md-icon>
                     <md-tooltip="Save Report"></md-tooltip>
                     Save
                 </md-button>
             </div>


       NOTE:  The end of the index.html should look like this:

             <div layout="row">
                 <md-input-container class="md-block" flex-gt-sm>
                     <label>Report Source</label>

                     <!-- Insert a material design drop-down (you can select *MULTIPLE* options) -->
                     <md-select MULTIPLE placeholder="Select Report Source" name="report_source" ng-model="addReportVM.new.report_source">
                         <md-option value="1000">Canada</md-option>
                         <md-option value="1001">Denmark</md-option>
                         <md-option value="1002">France</md-option>
                         <md-option value="1003">Germany</md-option>
                         <md-option value="1004">Mexico</md-option>
                         <md-option value="1005">Peru</md-option>
                         <md-option value="1006">Brazil</md-option>
                         <md-option value="1007">Uraguay</md-option>
                         <md-option value="1008">Argentina</md-option>
                         <md-option value="1009">Chile</md-option>
                         <md-option value="1010">United States</md-option>
                         <md-option value="1011">United Kingdom</md-option>
                     </md-select>
                 </md-input-container>
             </div>

             <div layout="row" layout-align="center">

                 <!-- Reset Button -->
                 <md-button class="md-primary md-raised" data-ng-click="addReportVM.reset()" aria-label="Clear Report Fields">
                     <md-icon class="fas fa-backspace"></md-icon>
                     <md-tooltip="Reset"></md-tooltip>
                     Reset
                 </md-button>


                 <!-- Save Button -->
                 <md-button class="md-primary md-raised" data-ng-click="addReportVM.save()" aria-label="Add Report">
                     <md-icon class="fas fa-plus"></md-icon>
                     <md-tooltip="Save Report"></md-tooltip>
                     Save
                 </md-button>
             </div>

         </div>



 5. Verify that the "Reset" and "Save" buttons appear on the page
    a. Go to http://localhost:8080/app1/page/reports/add
        -- You should see two buttons on the bottom
        -- NOTE:  Pressing them does nothing


 6. Add javascript methods that are called when a user clicks on the bottoms
    a. Go to the "Add Report" main.controller.js

    b. Add these functions:
            function save() {
                console.log('save() started.');
            }

            function reset() {
                console.log('reset() started.');
                clearReport();
            }

    c. Make these functions public by adding this to the top:
            addReportVM.save = save;
            addReportVM.reset = reset;


    When done, your main.controller.js should look like this:


        (function(){
            angular.module('app.features')
                .controller('addReport', ['$timeout', Callback])

            function Callback($timeout) {

                let addReportVM = this;
                addReportVM.save = save;
                addReportVM.reset = reset;

                window.document.title = "Add Report | APP1";


                // Clear-out the report fields on page load
                clearReport();

                addReportVM.$onInit = function() {
                    console.log('addReport onInit() started.');
                    console.log('addReport onInit() finished.');
                };

                console.log('addReport controller finished.');


                function clearReport() {
                    console.log('clearReport() started.');
                    addReportVM.new = { };
                }

                function save() {
                    console.log('save() started.   addReportVM.new=', addReportVM.new);
                }

                function reset() {
                    console.log('reset() started.');
                    clearReport();
                }


            }
        })();



 7. Verify that the buttons work
    a. Go to http://localhost:8080/app1/page/reports/add
    b. Press F12 (to open your Developer Tools)
    c. Go to the "Console" in your Developer Tools
    d. Press the buttons
        -- You should see the log messages


