Lesson:  How to shrinkwrap NPM dependencies
-------------------------------------------

A package-lock.json or npm-shrinkwrap.json file describes an exact, and more importantly reproducible node_modules tree.
Once it's present, any future installation will base its work off this file, instead of recalculating dependency versions off package.json.

Setup shrinkwrap on your local dev box
---------------------------------------
Assumptions: User has npm installed. I am using 2.15.1
             There is a src/main/webapp/resources/package.json  file

1. npm install shrinkwrap

2. Suggestion: nuke your node modules folder. It probably has a lot of junk in it if you've never cleaned it out
    Alternative: `npm prune`

3. Run `npm install` from the src/main/webapp/resources




How to add a new javascript package
-----------------------------------
Assumptions: User has npm installed. I am using 2.15.1
             There is a src/main/webapp/resources/package.json  file
             npm shrinkwrap is installed

1. Change to the directory where the package.json is located
   cd ~/intellijProjects/app1/webapp/src/main/resources/public/resources

2. Use npm to install your new NPM package and update your package.json
   npm install <your-new-package> --save

3. Delete the node_modules directory
   rm -rf node_modules

4. Run npm install --production to get the production files
   npm install --production

5. Run npm shrinkwrap to update the npm-shrinkwrap.json
   npm shrinkwrap

6. Check-in package.json and npm-shrinkwrap.json

